{"mappings":"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","sources":["<anon>","src/index.js","src/components/debug.js","src/components/util.js","node_modules/pako/dist/pako.esm.mjs","src/components/game.js","src/components/grid.js","src/components/cell.js","src/components/coordinates.js","src/components/flag.js","src/components/eventListeners.js","src/components/state.js","src/components/cache.js","src/components/word.js","src/components/letter.js","src/components/dictionary.js","src/components/generator.js","node_modules/tippy.js/dist/tippy.esm.js","node_modules/tippy.js/src/constants.ts","node_modules/tippy.js/src/utils.ts","node_modules/tippy.js/src/dom-utils.ts","node_modules/tippy.js/src/bindGlobalEventListeners.ts","node_modules/tippy.js/src/browser.ts","node_modules/tippy.js/src/validation.ts","node_modules/tippy.js/src/props.ts","node_modules/tippy.js/src/template.ts","node_modules/tippy.js/src/createTippy.ts","node_modules/tippy.js/src/index.ts","node_modules/tippy.js/src/addons/createSingleton.ts","node_modules/tippy.js/src/addons/delegate.ts","node_modules/tippy.js/src/plugins/animateFill.ts","node_modules/tippy.js/src/plugins/followCursor.ts","node_modules/tippy.js/src/plugins/inlinePositioning.ts","node_modules/tippy.js/src/plugins/sticky.ts","node_modules/tippy.js/build/base.js","node_modules/@popperjs/core/lib/modifiers/applyStyles.js","node_modules/@popperjs/core/lib/dom-utils/getNodeName.js","node_modules/@popperjs/core/lib/dom-utils/instanceOf.js","node_modules/@popperjs/core/lib/dom-utils/getWindow.js","node_modules/@popperjs/core/lib/popper.js","node_modules/@popperjs/core/lib/createPopper.js","node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js","node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js","node_modules/@popperjs/core/lib/utils/math.js","node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js","node_modules/@popperjs/core/lib/utils/userAgent.js","node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js","node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js","node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js","node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js","node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js","node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js","node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js","node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js","node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js","node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js","node_modules/@popperjs/core/lib/dom-utils/getParentNode.js","node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js","node_modules/@popperjs/core/lib/dom-utils/isTableElement.js","node_modules/@popperjs/core/lib/utils/orderModifiers.js","node_modules/@popperjs/core/lib/enums.js","node_modules/@popperjs/core/lib/utils/debounce.js","node_modules/@popperjs/core/lib/utils/mergeByName.js","node_modules/@popperjs/core/lib/modifiers/eventListeners.js","node_modules/@popperjs/core/lib/modifiers/popperOffsets.js","node_modules/@popperjs/core/lib/utils/computeOffsets.js","node_modules/@popperjs/core/lib/utils/getBasePlacement.js","node_modules/@popperjs/core/lib/utils/getVariation.js","node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js","node_modules/@popperjs/core/lib/modifiers/computeStyles.js","node_modules/@popperjs/core/lib/modifiers/offset.js","node_modules/@popperjs/core/lib/modifiers/flip.js","node_modules/@popperjs/core/lib/utils/getOppositePlacement.js","node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js","node_modules/@popperjs/core/lib/utils/detectOverflow.js","node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js","node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js","node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js","node_modules/@popperjs/core/lib/dom-utils/contains.js","node_modules/@popperjs/core/lib/utils/rectToClientRect.js","node_modules/@popperjs/core/lib/utils/mergePaddingObject.js","node_modules/@popperjs/core/lib/utils/getFreshSideObject.js","node_modules/@popperjs/core/lib/utils/expandToHashMap.js","node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js","node_modules/@popperjs/core/lib/modifiers/preventOverflow.js","node_modules/@popperjs/core/lib/utils/getAltAxis.js","node_modules/@popperjs/core/lib/utils/within.js","node_modules/@popperjs/core/lib/modifiers/arrow.js","node_modules/@popperjs/core/lib/modifiers/hide.js","src/components/info.js","src/components/analytics.js"],"sourcesContent":["(function () {\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */ // (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n/* eslint-disable space-unary-ops */ /* Public constants ==========================================================*/ /* ===========================================================================*/ //const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst $a39eeb69bf620de6$var$Z_FIXED$1 = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n/* Possible values of the data_type field (though see inflate()) */ const $a39eeb69bf620de6$var$Z_BINARY = 0;\nconst $a39eeb69bf620de6$var$Z_TEXT = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst $a39eeb69bf620de6$var$Z_UNKNOWN$1 = 2;\n/*============================================================================*/ function $a39eeb69bf620de6$var$zero$1(buf) {\n    let len = buf.length;\n    while(--len >= 0)buf[len] = 0;\n}\n// From zutil.h\nconst $a39eeb69bf620de6$var$STORED_BLOCK = 0;\nconst $a39eeb69bf620de6$var$STATIC_TREES = 1;\nconst $a39eeb69bf620de6$var$DYN_TREES = 2;\n/* The three kinds of block type */ const $a39eeb69bf620de6$var$MIN_MATCH$1 = 3;\nconst $a39eeb69bf620de6$var$MAX_MATCH$1 = 258;\n/* The minimum and maximum match lengths */ // From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */ const $a39eeb69bf620de6$var$LENGTH_CODES$1 = 29;\n/* number of length codes, not counting the special END_BLOCK code */ const $a39eeb69bf620de6$var$LITERALS$1 = 256;\n/* number of literal bytes 0..255 */ const $a39eeb69bf620de6$var$L_CODES$1 = $a39eeb69bf620de6$var$LITERALS$1 + 1 + $a39eeb69bf620de6$var$LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */ const $a39eeb69bf620de6$var$D_CODES$1 = 30;\n/* number of distance codes */ const $a39eeb69bf620de6$var$BL_CODES$1 = 19;\n/* number of codes used to transfer the bit lengths */ const $a39eeb69bf620de6$var$HEAP_SIZE$1 = 2 * $a39eeb69bf620de6$var$L_CODES$1 + 1;\n/* maximum heap size */ const $a39eeb69bf620de6$var$MAX_BITS$1 = 15;\n/* All codes must not exceed MAX_BITS bits */ const $a39eeb69bf620de6$var$Buf_size = 16;\n/* size of bit buffer in bi_buf */ /* ===========================================================================\n * Constants\n */ const $a39eeb69bf620de6$var$MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */ const $a39eeb69bf620de6$var$END_BLOCK = 256;\n/* end of block literal code */ const $a39eeb69bf620de6$var$REP_3_6 = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */ const $a39eeb69bf620de6$var$REPZ_3_10 = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */ const $a39eeb69bf620de6$var$REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */ /* eslint-disable comma-spacing,array-bracket-spacing */ const $a39eeb69bf620de6$var$extra_lbits = /* extra bits for each length code */ new Uint8Array([\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    1,\n    1,\n    2,\n    2,\n    2,\n    2,\n    3,\n    3,\n    3,\n    3,\n    4,\n    4,\n    4,\n    4,\n    5,\n    5,\n    5,\n    5,\n    0\n]);\nconst $a39eeb69bf620de6$var$extra_dbits = /* extra bits for each distance code */ new Uint8Array([\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    2,\n    2,\n    3,\n    3,\n    4,\n    4,\n    5,\n    5,\n    6,\n    6,\n    7,\n    7,\n    8,\n    8,\n    9,\n    9,\n    10,\n    10,\n    11,\n    11,\n    12,\n    12,\n    13,\n    13\n]);\nconst $a39eeb69bf620de6$var$extra_blbits = /* extra bits for each bit length code */ new Uint8Array([\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    2,\n    3,\n    7\n]);\nconst $a39eeb69bf620de6$var$bl_order = new Uint8Array([\n    16,\n    17,\n    18,\n    0,\n    8,\n    7,\n    9,\n    6,\n    10,\n    5,\n    11,\n    4,\n    12,\n    3,\n    13,\n    2,\n    14,\n    1,\n    15\n]);\n/* eslint-enable comma-spacing,array-bracket-spacing */ /* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */ /* ===========================================================================\n * Local data. These are initialized only once.\n */ // We pre-fill arrays with 0 to avoid uninitialized gaps\nconst $a39eeb69bf620de6$var$DIST_CODE_LEN = 512; /* see definition of array dist_code below */ \n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst $a39eeb69bf620de6$var$static_ltree = new Array(($a39eeb69bf620de6$var$L_CODES$1 + 2) * 2);\n$a39eeb69bf620de6$var$zero$1($a39eeb69bf620de6$var$static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */ const $a39eeb69bf620de6$var$static_dtree = new Array($a39eeb69bf620de6$var$D_CODES$1 * 2);\n$a39eeb69bf620de6$var$zero$1($a39eeb69bf620de6$var$static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */ const $a39eeb69bf620de6$var$_dist_code = new Array($a39eeb69bf620de6$var$DIST_CODE_LEN);\n$a39eeb69bf620de6$var$zero$1($a39eeb69bf620de6$var$_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */ const $a39eeb69bf620de6$var$_length_code = new Array($a39eeb69bf620de6$var$MAX_MATCH$1 - $a39eeb69bf620de6$var$MIN_MATCH$1 + 1);\n$a39eeb69bf620de6$var$zero$1($a39eeb69bf620de6$var$_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */ const $a39eeb69bf620de6$var$base_length = new Array($a39eeb69bf620de6$var$LENGTH_CODES$1);\n$a39eeb69bf620de6$var$zero$1($a39eeb69bf620de6$var$base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */ const $a39eeb69bf620de6$var$base_dist = new Array($a39eeb69bf620de6$var$D_CODES$1);\n$a39eeb69bf620de6$var$zero$1($a39eeb69bf620de6$var$base_dist);\n/* First normalized distance for each code (0 = distance of 1) */ function $a39eeb69bf620de6$var$StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n    this.static_tree = static_tree; /* static tree or NULL */ \n    this.extra_bits = extra_bits; /* extra bits for each code or NULL */ \n    this.extra_base = extra_base; /* base index for extra_bits */ \n    this.elems = elems; /* max number of elements in the tree */ \n    this.max_length = max_length; /* max bit length for the codes */ \n    // show if `static_tree` has data or dummy - needed for monomorphic objects\n    this.has_stree = static_tree && static_tree.length;\n}\nlet $a39eeb69bf620de6$var$static_l_desc;\nlet $a39eeb69bf620de6$var$static_d_desc;\nlet $a39eeb69bf620de6$var$static_bl_desc;\nfunction $a39eeb69bf620de6$var$TreeDesc(dyn_tree, stat_desc) {\n    this.dyn_tree = dyn_tree; /* the dynamic tree */ \n    this.max_code = 0; /* largest code with non zero frequency */ \n    this.stat_desc = stat_desc; /* the corresponding static tree */ \n}\nconst $a39eeb69bf620de6$var$d_code = (dist)=>{\n    return dist < 256 ? $a39eeb69bf620de6$var$_dist_code[dist] : $a39eeb69bf620de6$var$_dist_code[256 + (dist >>> 7)];\n};\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */ const $a39eeb69bf620de6$var$put_short = (s, w)=>{\n    //    put_byte(s, (uch)((w) & 0xff));\n    //    put_byte(s, (uch)((ush)(w) >> 8));\n    s.pending_buf[s.pending++] = w & 0xff;\n    s.pending_buf[s.pending++] = w >>> 8 & 0xff;\n};\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */ const $a39eeb69bf620de6$var$send_bits = (s, value, length)=>{\n    if (s.bi_valid > $a39eeb69bf620de6$var$Buf_size - length) {\n        s.bi_buf |= value << s.bi_valid & 0xffff;\n        $a39eeb69bf620de6$var$put_short(s, s.bi_buf);\n        s.bi_buf = value >> $a39eeb69bf620de6$var$Buf_size - s.bi_valid;\n        s.bi_valid += length - $a39eeb69bf620de6$var$Buf_size;\n    } else {\n        s.bi_buf |= value << s.bi_valid & 0xffff;\n        s.bi_valid += length;\n    }\n};\nconst $a39eeb69bf620de6$var$send_code = (s, c, tree)=>{\n    $a39eeb69bf620de6$var$send_bits(s, tree[c * 2], tree[c * 2 + 1]);\n};\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */ const $a39eeb69bf620de6$var$bi_reverse = (code, len)=>{\n    let res = 0;\n    do {\n        res |= code & 1;\n        code >>>= 1;\n        res <<= 1;\n    }while (--len > 0);\n    return res >>> 1;\n};\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */ const $a39eeb69bf620de6$var$bi_flush = (s)=>{\n    if (s.bi_valid === 16) {\n        $a39eeb69bf620de6$var$put_short(s, s.bi_buf);\n        s.bi_buf = 0;\n        s.bi_valid = 0;\n    } else if (s.bi_valid >= 8) {\n        s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n        s.bi_buf >>= 8;\n        s.bi_valid -= 8;\n    }\n};\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */ const $a39eeb69bf620de6$var$gen_bitlen = (s, desc)=>{\n    //    deflate_state *s;\n    //    tree_desc *desc;    /* the tree descriptor */\n    const tree = desc.dyn_tree;\n    const max_code = desc.max_code;\n    const stree = desc.stat_desc.static_tree;\n    const has_stree = desc.stat_desc.has_stree;\n    const extra = desc.stat_desc.extra_bits;\n    const base = desc.stat_desc.extra_base;\n    const max_length = desc.stat_desc.max_length;\n    let h; /* heap index */ \n    let n, m; /* iterate over the tree elements */ \n    let bits; /* bit length */ \n    let xbits; /* extra bits */ \n    let f; /* frequency */ \n    let overflow = 0; /* number of elements with bit length too large */ \n    for(bits = 0; bits <= $a39eeb69bf620de6$var$MAX_BITS$1; bits++)s.bl_count[bits] = 0;\n    /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */ tree[s.heap[s.heap_max] * 2 + 1] = 0; /* root of the heap */ \n    for(h = s.heap_max + 1; h < $a39eeb69bf620de6$var$HEAP_SIZE$1; h++){\n        n = s.heap[h];\n        bits = tree[tree[n * 2 + 1] * 2 + 1] + 1;\n        if (bits > max_length) {\n            bits = max_length;\n            overflow++;\n        }\n        tree[n * 2 + 1] = bits;\n        /* We overwrite tree[n].Dad which is no longer needed */ if (n > max_code) continue;\n         /* not a leaf node */ \n        s.bl_count[bits]++;\n        xbits = 0;\n        if (n >= base) xbits = extra[n - base];\n        f = tree[n * 2] /*.Freq*/ ;\n        s.opt_len += f * (bits + xbits);\n        if (has_stree) s.static_len += f * (stree[n * 2 + 1] + xbits);\n    }\n    if (overflow === 0) return;\n    // Tracev((stderr,\"\\nbit length overflow\\n\"));\n    /* This happens for example on obj2 and pic of the Calgary corpus */ /* Find the first bit length which could increase: */ do {\n        bits = max_length - 1;\n        while(s.bl_count[bits] === 0)bits--;\n        s.bl_count[bits]--; /* move one leaf down the tree */ \n        s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */ \n        s.bl_count[max_length]--;\n        /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */ overflow -= 2;\n    }while (overflow > 0);\n    /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */ for(bits = max_length; bits !== 0; bits--){\n        n = s.bl_count[bits];\n        while(n !== 0){\n            m = s.heap[--h];\n            if (m > max_code) continue;\n            if (tree[m * 2 + 1] !== bits) {\n                // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n                s.opt_len += (bits - tree[m * 2 + 1]) * tree[m * 2] /*.Freq*/ ;\n                tree[m * 2 + 1] = bits;\n            }\n            n--;\n        }\n    }\n};\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */ const $a39eeb69bf620de6$var$gen_codes = (tree, max_code, bl_count)=>{\n    //    ct_data *tree;             /* the tree to decorate */\n    //    int max_code;              /* largest code with non zero frequency */\n    //    ushf *bl_count;            /* number of codes at each bit length */\n    const next_code = new Array($a39eeb69bf620de6$var$MAX_BITS$1 + 1); /* next code value for each bit length */ \n    let code = 0; /* running code value */ \n    let bits; /* bit index */ \n    let n; /* code index */ \n    /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */ for(bits = 1; bits <= $a39eeb69bf620de6$var$MAX_BITS$1; bits++){\n        code = code + bl_count[bits - 1] << 1;\n        next_code[bits] = code;\n    }\n    /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */ //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n    //        \"inconsistent bit counts\");\n    //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n    for(n = 0; n <= max_code; n++){\n        let len = tree[n * 2 + 1] /*.Len*/ ;\n        if (len === 0) continue;\n        /* Now reverse the bits */ tree[n * 2] = $a39eeb69bf620de6$var$bi_reverse(next_code[len]++, len);\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n    }\n};\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */ const $a39eeb69bf620de6$var$tr_static_init = ()=>{\n    let n; /* iterates over tree elements */ \n    let bits; /* bit counter */ \n    let length; /* length value */ \n    let code; /* code value */ \n    let dist; /* distance index */ \n    const bl_count = new Array($a39eeb69bf620de6$var$MAX_BITS$1 + 1);\n    /* number of codes at each bit length for an optimal tree */ // do check in _tr_init()\n    //if (static_init_done) return;\n    /* For some embedded targets, global variables are not initialized: */ /*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/ /* Initialize the mapping length (0..255) -> length code (0..28) */ length = 0;\n    for(code = 0; code < $a39eeb69bf620de6$var$LENGTH_CODES$1 - 1; code++){\n        $a39eeb69bf620de6$var$base_length[code] = length;\n        for(n = 0; n < 1 << $a39eeb69bf620de6$var$extra_lbits[code]; n++)$a39eeb69bf620de6$var$_length_code[length++] = code;\n    }\n    //Assert (length == 256, \"tr_static_init: length != 256\");\n    /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */ $a39eeb69bf620de6$var$_length_code[length - 1] = code;\n    /* Initialize the mapping dist (0..32K) -> dist code (0..29) */ dist = 0;\n    for(code = 0; code < 16; code++){\n        $a39eeb69bf620de6$var$base_dist[code] = dist;\n        for(n = 0; n < 1 << $a39eeb69bf620de6$var$extra_dbits[code]; n++)$a39eeb69bf620de6$var$_dist_code[dist++] = code;\n    }\n    //Assert (dist == 256, \"tr_static_init: dist != 256\");\n    dist >>= 7; /* from now on, all distances are divided by 128 */ \n    for(; code < $a39eeb69bf620de6$var$D_CODES$1; code++){\n        $a39eeb69bf620de6$var$base_dist[code] = dist << 7;\n        for(n = 0; n < 1 << $a39eeb69bf620de6$var$extra_dbits[code] - 7; n++)$a39eeb69bf620de6$var$_dist_code[256 + dist++] = code;\n    }\n    //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n    /* Construct the codes of the static literal tree */ for(bits = 0; bits <= $a39eeb69bf620de6$var$MAX_BITS$1; bits++)bl_count[bits] = 0;\n    n = 0;\n    while(n <= 143){\n        $a39eeb69bf620de6$var$static_ltree[n * 2 + 1] = 8;\n        n++;\n        bl_count[8]++;\n    }\n    while(n <= 255){\n        $a39eeb69bf620de6$var$static_ltree[n * 2 + 1] = 9;\n        n++;\n        bl_count[9]++;\n    }\n    while(n <= 279){\n        $a39eeb69bf620de6$var$static_ltree[n * 2 + 1] = 7;\n        n++;\n        bl_count[7]++;\n    }\n    while(n <= 287){\n        $a39eeb69bf620de6$var$static_ltree[n * 2 + 1] = 8;\n        n++;\n        bl_count[8]++;\n    }\n    /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */ $a39eeb69bf620de6$var$gen_codes($a39eeb69bf620de6$var$static_ltree, $a39eeb69bf620de6$var$L_CODES$1 + 1, bl_count);\n    /* The static distance tree is trivial: */ for(n = 0; n < $a39eeb69bf620de6$var$D_CODES$1; n++){\n        $a39eeb69bf620de6$var$static_dtree[n * 2 + 1] = 5;\n        $a39eeb69bf620de6$var$static_dtree[n * 2] = $a39eeb69bf620de6$var$bi_reverse(n, 5);\n    }\n    // Now data ready and we can init static trees\n    $a39eeb69bf620de6$var$static_l_desc = new $a39eeb69bf620de6$var$StaticTreeDesc($a39eeb69bf620de6$var$static_ltree, $a39eeb69bf620de6$var$extra_lbits, $a39eeb69bf620de6$var$LITERALS$1 + 1, $a39eeb69bf620de6$var$L_CODES$1, $a39eeb69bf620de6$var$MAX_BITS$1);\n    $a39eeb69bf620de6$var$static_d_desc = new $a39eeb69bf620de6$var$StaticTreeDesc($a39eeb69bf620de6$var$static_dtree, $a39eeb69bf620de6$var$extra_dbits, 0, $a39eeb69bf620de6$var$D_CODES$1, $a39eeb69bf620de6$var$MAX_BITS$1);\n    $a39eeb69bf620de6$var$static_bl_desc = new $a39eeb69bf620de6$var$StaticTreeDesc(new Array(0), $a39eeb69bf620de6$var$extra_blbits, 0, $a39eeb69bf620de6$var$BL_CODES$1, $a39eeb69bf620de6$var$MAX_BL_BITS);\n//static_init_done = true;\n};\n/* ===========================================================================\n * Initialize a new block.\n */ const $a39eeb69bf620de6$var$init_block = (s)=>{\n    let n; /* iterates over tree elements */ \n    /* Initialize the trees. */ for(n = 0; n < $a39eeb69bf620de6$var$L_CODES$1; n++)s.dyn_ltree[n * 2] = 0;\n    for(n = 0; n < $a39eeb69bf620de6$var$D_CODES$1; n++)s.dyn_dtree[n * 2] = 0;\n    for(n = 0; n < $a39eeb69bf620de6$var$BL_CODES$1; n++)s.bl_tree[n * 2] = 0;\n    s.dyn_ltree[$a39eeb69bf620de6$var$END_BLOCK * 2] = 1;\n    s.opt_len = s.static_len = 0;\n    s.sym_next = s.matches = 0;\n};\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */ const $a39eeb69bf620de6$var$bi_windup = (s)=>{\n    if (s.bi_valid > 8) $a39eeb69bf620de6$var$put_short(s, s.bi_buf);\n    else if (s.bi_valid > 0) //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n};\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */ const $a39eeb69bf620de6$var$smaller = (tree, n, m, depth)=>{\n    const _n2 = n * 2;\n    const _m2 = m * 2;\n    return tree[_n2] < tree[_m2] || tree[_n2] === tree[_m2] && depth[n] <= depth[m];\n};\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */ const $a39eeb69bf620de6$var$pqdownheap = (s, tree, k)=>{\n    //    deflate_state *s;\n    //    ct_data *tree;  /* the tree to restore */\n    //    int k;               /* node to move down */\n    const v = s.heap[k];\n    let j = k << 1; /* left son of k */ \n    while(j <= s.heap_len){\n        /* Set j to the smallest of the two sons: */ if (j < s.heap_len && $a39eeb69bf620de6$var$smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) j++;\n        /* Exit if v is smaller than both sons */ if ($a39eeb69bf620de6$var$smaller(tree, v, s.heap[j], s.depth)) break;\n        /* Exchange v with the smallest son */ s.heap[k] = s.heap[j];\n        k = j;\n        /* And continue down the tree, setting j to the left son of k */ j <<= 1;\n    }\n    s.heap[k] = v;\n};\n// inlined manually\n// const SMALLEST = 1;\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */ const $a39eeb69bf620de6$var$compress_block = (s, ltree, dtree)=>{\n    //    deflate_state *s;\n    //    const ct_data *ltree; /* literal tree */\n    //    const ct_data *dtree; /* distance tree */\n    let dist; /* distance of matched string */ \n    let lc; /* match length or unmatched char (if dist == 0) */ \n    let sx = 0; /* running index in sym_buf */ \n    let code; /* the code to send */ \n    let extra; /* number of extra bits to send */ \n    if (s.sym_next !== 0) do {\n        dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n        dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n        lc = s.pending_buf[s.sym_buf + sx++];\n        if (dist === 0) $a39eeb69bf620de6$var$send_code(s, lc, ltree); /* send a literal byte */ \n        else {\n            /* Here, lc is the match length - MIN_MATCH */ code = $a39eeb69bf620de6$var$_length_code[lc];\n            $a39eeb69bf620de6$var$send_code(s, code + $a39eeb69bf620de6$var$LITERALS$1 + 1, ltree); /* send the length code */ \n            extra = $a39eeb69bf620de6$var$extra_lbits[code];\n            if (extra !== 0) {\n                lc -= $a39eeb69bf620de6$var$base_length[code];\n                $a39eeb69bf620de6$var$send_bits(s, lc, extra); /* send the extra length bits */ \n            }\n            dist--; /* dist is now the match distance - 1 */ \n            code = $a39eeb69bf620de6$var$d_code(dist);\n            //Assert (code < D_CODES, \"bad d_code\");\n            $a39eeb69bf620de6$var$send_code(s, code, dtree); /* send the distance code */ \n            extra = $a39eeb69bf620de6$var$extra_dbits[code];\n            if (extra !== 0) {\n                dist -= $a39eeb69bf620de6$var$base_dist[code];\n                $a39eeb69bf620de6$var$send_bits(s, dist, extra); /* send the extra distance bits */ \n            }\n        } /* literal or match pair ? */ \n    /* Check that the overlay between pending_buf and sym_buf is ok: */ //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n    }while (sx < s.sym_next);\n    $a39eeb69bf620de6$var$send_code(s, $a39eeb69bf620de6$var$END_BLOCK, ltree);\n};\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */ const $a39eeb69bf620de6$var$build_tree = (s, desc)=>{\n    //    deflate_state *s;\n    //    tree_desc *desc; /* the tree descriptor */\n    const tree = desc.dyn_tree;\n    const stree = desc.stat_desc.static_tree;\n    const has_stree = desc.stat_desc.has_stree;\n    const elems = desc.stat_desc.elems;\n    let n, m; /* iterate over heap elements */ \n    let max_code = -1; /* largest code with non zero frequency */ \n    let node; /* new node being created */ \n    /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */ s.heap_len = 0;\n    s.heap_max = $a39eeb69bf620de6$var$HEAP_SIZE$1;\n    for(n = 0; n < elems; n++)if (tree[n * 2] !== 0) {\n        s.heap[++s.heap_len] = max_code = n;\n        s.depth[n] = 0;\n    } else tree[n * 2 + 1] = 0;\n    /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */ while(s.heap_len < 2){\n        node = s.heap[++s.heap_len] = max_code < 2 ? ++max_code : 0;\n        tree[node * 2] = 1;\n        s.depth[node] = 0;\n        s.opt_len--;\n        if (has_stree) s.static_len -= stree[node * 2 + 1] /*.Len*/ ;\n    /* node is 0 or 1 so it does not have extra bits */ }\n    desc.max_code = max_code;\n    /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */ for(n = s.heap_len >> 1 /*int /2*/ ; n >= 1; n--)$a39eeb69bf620de6$var$pqdownheap(s, tree, n);\n    /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */ node = elems; /* next internal node of the tree */ \n    do {\n        //pqremove(s, tree, n);  /* n = node of least frequency */\n        /*** pqremove ***/ n = s.heap[1 /*SMALLEST*/ ];\n        s.heap[1 /*SMALLEST*/ ] = s.heap[s.heap_len--];\n        $a39eeb69bf620de6$var$pqdownheap(s, tree, 1 /*SMALLEST*/ );\n        /***/ m = s.heap[1 /*SMALLEST*/ ]; /* m = node of next least frequency */ \n        s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */ \n        s.heap[--s.heap_max] = m;\n        /* Create a new node father of n and m */ tree[node * 2] = tree[n * 2] + tree[m * 2] /*.Freq*/ ;\n        s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n        tree[n * 2 + 1] = tree[m * 2 + 1] = node;\n        /* and insert the new node in the heap */ s.heap[1 /*SMALLEST*/ ] = node++;\n        $a39eeb69bf620de6$var$pqdownheap(s, tree, 1 /*SMALLEST*/ );\n    }while (s.heap_len >= 2);\n    s.heap[--s.heap_max] = s.heap[1 /*SMALLEST*/ ];\n    /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */ $a39eeb69bf620de6$var$gen_bitlen(s, desc);\n    /* The field len is now set, we can generate the bit codes */ $a39eeb69bf620de6$var$gen_codes(tree, max_code, s.bl_count);\n};\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */ const $a39eeb69bf620de6$var$scan_tree = (s, tree, max_code)=>{\n    //    deflate_state *s;\n    //    ct_data *tree;   /* the tree to be scanned */\n    //    int max_code;    /* and its largest code of non zero frequency */\n    let n; /* iterates over all tree elements */ \n    let prevlen = -1; /* last emitted length */ \n    let curlen; /* length of current code */ \n    let nextlen = tree[1] /*.Len*/ ; /* length of next code */ \n    let count = 0; /* repeat count of the current code */ \n    let max_count = 7; /* max repeat count */ \n    let min_count = 4; /* min repeat count */ \n    if (nextlen === 0) {\n        max_count = 138;\n        min_count = 3;\n    }\n    tree[(max_code + 1) * 2 + 1] = 0xffff; /* guard */ \n    for(n = 0; n <= max_code; n++){\n        curlen = nextlen;\n        nextlen = tree[(n + 1) * 2 + 1] /*.Len*/ ;\n        if (++count < max_count && curlen === nextlen) continue;\n        else if (count < min_count) s.bl_tree[curlen * 2] += count;\n        else if (curlen !== 0) {\n            if (curlen !== prevlen) s.bl_tree[curlen * 2]++;\n            s.bl_tree[$a39eeb69bf620de6$var$REP_3_6 * 2]++;\n        } else if (count <= 10) s.bl_tree[$a39eeb69bf620de6$var$REPZ_3_10 * 2]++;\n        else s.bl_tree[$a39eeb69bf620de6$var$REPZ_11_138 * 2]++;\n        count = 0;\n        prevlen = curlen;\n        if (nextlen === 0) {\n            max_count = 138;\n            min_count = 3;\n        } else if (curlen === nextlen) {\n            max_count = 6;\n            min_count = 3;\n        } else {\n            max_count = 7;\n            min_count = 4;\n        }\n    }\n};\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */ const $a39eeb69bf620de6$var$send_tree = (s, tree, max_code)=>{\n    //    deflate_state *s;\n    //    ct_data *tree; /* the tree to be scanned */\n    //    int max_code;       /* and its largest code of non zero frequency */\n    let n; /* iterates over all tree elements */ \n    let prevlen = -1; /* last emitted length */ \n    let curlen; /* length of current code */ \n    let nextlen = tree[1] /*.Len*/ ; /* length of next code */ \n    let count = 0; /* repeat count of the current code */ \n    let max_count = 7; /* max repeat count */ \n    let min_count = 4; /* min repeat count */ \n    /* tree[max_code+1].Len = -1; */ /* guard already set */ if (nextlen === 0) {\n        max_count = 138;\n        min_count = 3;\n    }\n    for(n = 0; n <= max_code; n++){\n        curlen = nextlen;\n        nextlen = tree[(n + 1) * 2 + 1] /*.Len*/ ;\n        if (++count < max_count && curlen === nextlen) continue;\n        else if (count < min_count) do $a39eeb69bf620de6$var$send_code(s, curlen, s.bl_tree);\n        while (--count !== 0);\n        else if (curlen !== 0) {\n            if (curlen !== prevlen) {\n                $a39eeb69bf620de6$var$send_code(s, curlen, s.bl_tree);\n                count--;\n            }\n            //Assert(count >= 3 && count <= 6, \" 3_6?\");\n            $a39eeb69bf620de6$var$send_code(s, $a39eeb69bf620de6$var$REP_3_6, s.bl_tree);\n            $a39eeb69bf620de6$var$send_bits(s, count - 3, 2);\n        } else if (count <= 10) {\n            $a39eeb69bf620de6$var$send_code(s, $a39eeb69bf620de6$var$REPZ_3_10, s.bl_tree);\n            $a39eeb69bf620de6$var$send_bits(s, count - 3, 3);\n        } else {\n            $a39eeb69bf620de6$var$send_code(s, $a39eeb69bf620de6$var$REPZ_11_138, s.bl_tree);\n            $a39eeb69bf620de6$var$send_bits(s, count - 11, 7);\n        }\n        count = 0;\n        prevlen = curlen;\n        if (nextlen === 0) {\n            max_count = 138;\n            min_count = 3;\n        } else if (curlen === nextlen) {\n            max_count = 6;\n            min_count = 3;\n        } else {\n            max_count = 7;\n            min_count = 4;\n        }\n    }\n};\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */ const $a39eeb69bf620de6$var$build_bl_tree = (s)=>{\n    let max_blindex; /* index of last bit length code of non zero freq */ \n    /* Determine the bit length frequencies for literal and distance trees */ $a39eeb69bf620de6$var$scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n    $a39eeb69bf620de6$var$scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n    /* Build the bit length tree: */ $a39eeb69bf620de6$var$build_tree(s, s.bl_desc);\n    /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */ /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */ for(max_blindex = $a39eeb69bf620de6$var$BL_CODES$1 - 1; max_blindex >= 3; max_blindex--){\n        if (s.bl_tree[$a39eeb69bf620de6$var$bl_order[max_blindex] * 2 + 1] !== 0) break;\n    }\n    /* Update opt_len to include the bit length tree and counts */ s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n    //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n    //        s->opt_len, s->static_len));\n    return max_blindex;\n};\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */ const $a39eeb69bf620de6$var$send_all_trees = (s, lcodes, dcodes, blcodes)=>{\n    //    deflate_state *s;\n    //    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n    let rank; /* index in bl_order */ \n    //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n    //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n    //        \"too many codes\");\n    //Tracev((stderr, \"\\nbl counts: \"));\n    $a39eeb69bf620de6$var$send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */ \n    $a39eeb69bf620de6$var$send_bits(s, dcodes - 1, 5);\n    $a39eeb69bf620de6$var$send_bits(s, blcodes - 4, 4); /* not -3 as stated in appnote.txt */ \n    for(rank = 0; rank < blcodes; rank++)//Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    $a39eeb69bf620de6$var$send_bits(s, s.bl_tree[$a39eeb69bf620de6$var$bl_order[rank] * 2 + 1], 3);\n    //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n    $a39eeb69bf620de6$var$send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */ \n    //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n    $a39eeb69bf620de6$var$send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */ \n//Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */ const $a39eeb69bf620de6$var$detect_data_type = (s)=>{\n    /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */ let block_mask = 0xf3ffc07f;\n    let n;\n    /* Check for non-textual (\"block-listed\") bytes. */ for(n = 0; n <= 31; n++, block_mask >>>= 1){\n        if (block_mask & 1 && s.dyn_ltree[n * 2] !== 0) return $a39eeb69bf620de6$var$Z_BINARY;\n    }\n    /* Check for textual (\"allow-listed\") bytes. */ if (s.dyn_ltree[18] !== 0 || s.dyn_ltree[20] !== 0 || s.dyn_ltree[26] !== 0) return $a39eeb69bf620de6$var$Z_TEXT;\n    for(n = 32; n < $a39eeb69bf620de6$var$LITERALS$1; n++){\n        if (s.dyn_ltree[n * 2] !== 0) return $a39eeb69bf620de6$var$Z_TEXT;\n    }\n    /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */ return $a39eeb69bf620de6$var$Z_BINARY;\n};\nlet $a39eeb69bf620de6$var$static_init_done = false;\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */ const $a39eeb69bf620de6$var$_tr_init$1 = (s)=>{\n    if (!$a39eeb69bf620de6$var$static_init_done) {\n        $a39eeb69bf620de6$var$tr_static_init();\n        $a39eeb69bf620de6$var$static_init_done = true;\n    }\n    s.l_desc = new $a39eeb69bf620de6$var$TreeDesc(s.dyn_ltree, $a39eeb69bf620de6$var$static_l_desc);\n    s.d_desc = new $a39eeb69bf620de6$var$TreeDesc(s.dyn_dtree, $a39eeb69bf620de6$var$static_d_desc);\n    s.bl_desc = new $a39eeb69bf620de6$var$TreeDesc(s.bl_tree, $a39eeb69bf620de6$var$static_bl_desc);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n    /* Initialize the first block of the first file: */ $a39eeb69bf620de6$var$init_block(s);\n};\n/* ===========================================================================\n * Send a stored block\n */ const $a39eeb69bf620de6$var$_tr_stored_block$1 = (s, buf, stored_len, last)=>{\n    //DeflateState *s;\n    //charf *buf;       /* input block */\n    //ulg stored_len;   /* length of input block */\n    //int last;         /* one if this is the last block for a file */\n    $a39eeb69bf620de6$var$send_bits(s, ($a39eeb69bf620de6$var$STORED_BLOCK << 1) + (last ? 1 : 0), 3); /* send block type */ \n    $a39eeb69bf620de6$var$bi_windup(s); /* align on byte boundary */ \n    $a39eeb69bf620de6$var$put_short(s, stored_len);\n    $a39eeb69bf620de6$var$put_short(s, ~stored_len);\n    if (stored_len) s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n    s.pending += stored_len;\n};\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */ const $a39eeb69bf620de6$var$_tr_align$1 = (s)=>{\n    $a39eeb69bf620de6$var$send_bits(s, $a39eeb69bf620de6$var$STATIC_TREES << 1, 3);\n    $a39eeb69bf620de6$var$send_code(s, $a39eeb69bf620de6$var$END_BLOCK, $a39eeb69bf620de6$var$static_ltree);\n    $a39eeb69bf620de6$var$bi_flush(s);\n};\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */ const $a39eeb69bf620de6$var$_tr_flush_block$1 = (s, buf, stored_len, last)=>{\n    //DeflateState *s;\n    //charf *buf;       /* input block, or NULL if too old */\n    //ulg stored_len;   /* length of input block */\n    //int last;         /* one if this is the last block for a file */\n    let opt_lenb, static_lenb; /* opt_len and static_len in bytes */ \n    let max_blindex = 0; /* index of last bit length code of non zero freq */ \n    /* Build the Huffman trees unless a stored block is forced */ if (s.level > 0) {\n        /* Check if the file is binary or text */ if (s.strm.data_type === $a39eeb69bf620de6$var$Z_UNKNOWN$1) s.strm.data_type = $a39eeb69bf620de6$var$detect_data_type(s);\n        /* Construct the literal and distance trees */ $a39eeb69bf620de6$var$build_tree(s, s.l_desc);\n        // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n        //        s->static_len));\n        $a39eeb69bf620de6$var$build_tree(s, s.d_desc);\n        // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n        //        s->static_len));\n        /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */ /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */ max_blindex = $a39eeb69bf620de6$var$build_bl_tree(s);\n        /* Determine the best encoding. Compute the block lengths in bytes. */ opt_lenb = s.opt_len + 3 + 7 >>> 3;\n        static_lenb = s.static_len + 3 + 7 >>> 3;\n        // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n        //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n        //        s->sym_next / 3));\n        if (static_lenb <= opt_lenb) opt_lenb = static_lenb;\n    } else // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */ \n    if (stored_len + 4 <= opt_lenb && buf !== -1) /* 4: two words for the lengths */ /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */ $a39eeb69bf620de6$var$_tr_stored_block$1(s, buf, stored_len, last);\n    else if (s.strategy === $a39eeb69bf620de6$var$Z_FIXED$1 || static_lenb === opt_lenb) {\n        $a39eeb69bf620de6$var$send_bits(s, ($a39eeb69bf620de6$var$STATIC_TREES << 1) + (last ? 1 : 0), 3);\n        $a39eeb69bf620de6$var$compress_block(s, $a39eeb69bf620de6$var$static_ltree, $a39eeb69bf620de6$var$static_dtree);\n    } else {\n        $a39eeb69bf620de6$var$send_bits(s, ($a39eeb69bf620de6$var$DYN_TREES << 1) + (last ? 1 : 0), 3);\n        $a39eeb69bf620de6$var$send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n        $a39eeb69bf620de6$var$compress_block(s, s.dyn_ltree, s.dyn_dtree);\n    }\n    // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n    /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */ $a39eeb69bf620de6$var$init_block(s);\n    if (last) $a39eeb69bf620de6$var$bi_windup(s);\n// Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n//       s->compressed_len-7*last));\n};\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */ const $a39eeb69bf620de6$var$_tr_tally$1 = (s, dist, lc)=>{\n    //    deflate_state *s;\n    //    unsigned dist;  /* distance of matched string */\n    //    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n    s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n    s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n    s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n    if (dist === 0) /* lc is the unmatched char */ s.dyn_ltree[lc * 2]++;\n    else {\n        s.matches++;\n        /* Here, lc is the match length - MIN_MATCH */ dist--; /* dist = match distance - 1 */ \n        //Assert((ush)dist < (ush)MAX_DIST(s) &&\n        //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n        //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n        s.dyn_ltree[($a39eeb69bf620de6$var$_length_code[lc] + $a39eeb69bf620de6$var$LITERALS$1 + 1) * 2]++;\n        s.dyn_dtree[$a39eeb69bf620de6$var$d_code(dist) * 2]++;\n    }\n    return s.sym_next === s.sym_end;\n};\nvar $a39eeb69bf620de6$var$_tr_init_1 = $a39eeb69bf620de6$var$_tr_init$1;\nvar $a39eeb69bf620de6$var$_tr_stored_block_1 = $a39eeb69bf620de6$var$_tr_stored_block$1;\nvar $a39eeb69bf620de6$var$_tr_flush_block_1 = $a39eeb69bf620de6$var$_tr_flush_block$1;\nvar $a39eeb69bf620de6$var$_tr_tally_1 = $a39eeb69bf620de6$var$_tr_tally$1;\nvar $a39eeb69bf620de6$var$_tr_align_1 = $a39eeb69bf620de6$var$_tr_align$1;\nvar $a39eeb69bf620de6$var$trees = {\n    _tr_init: $a39eeb69bf620de6$var$_tr_init_1,\n    _tr_stored_block: $a39eeb69bf620de6$var$_tr_stored_block_1,\n    _tr_flush_block: $a39eeb69bf620de6$var$_tr_flush_block_1,\n    _tr_tally: $a39eeb69bf620de6$var$_tr_tally_1,\n    _tr_align: $a39eeb69bf620de6$var$_tr_align_1\n};\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\nconst $a39eeb69bf620de6$var$adler32 = (adler, buf, len, pos)=>{\n    let s1 = adler & 0xffff | 0, s2 = adler >>> 16 & 0xffff | 0, n = 0;\n    while(len !== 0){\n        // Set limit ~ twice less than 5552, to keep\n        // s2 in 31-bits, because we force signed ints.\n        // in other case %= will fail.\n        n = len > 2000 ? 2000 : len;\n        len -= n;\n        do {\n            s1 = s1 + buf[pos++] | 0;\n            s2 = s2 + s1 | 0;\n        }while (--n);\n        s1 %= 65521;\n        s2 %= 65521;\n    }\n    return s1 | s2 << 16 | 0;\n};\nvar $a39eeb69bf620de6$var$adler32_1 = $a39eeb69bf620de6$var$adler32;\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n// Use ordinary array, since untyped makes no boost here\nconst $a39eeb69bf620de6$var$makeTable = ()=>{\n    let c, table = [];\n    for(var n = 0; n < 256; n++){\n        c = n;\n        for(var k = 0; k < 8; k++)c = c & 1 ? 0xEDB88320 ^ c >>> 1 : c >>> 1;\n        table[n] = c;\n    }\n    return table;\n};\n// Create table on load. Just 255 signed longs. Not a problem.\nconst $a39eeb69bf620de6$var$crcTable = new Uint32Array($a39eeb69bf620de6$var$makeTable());\nconst $a39eeb69bf620de6$var$crc32 = (crc, buf, len, pos)=>{\n    const t = $a39eeb69bf620de6$var$crcTable;\n    const end = pos + len;\n    crc ^= -1;\n    for(let i = pos; i < end; i++)crc = crc >>> 8 ^ t[(crc ^ buf[i]) & 0xFF];\n    return crc ^ -1; // >>> 0;\n};\nvar $a39eeb69bf620de6$var$crc32_1 = $a39eeb69bf620de6$var$crc32;\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\nvar $a39eeb69bf620de6$var$messages = {\n    2: \"need dictionary\",\n    /* Z_NEED_DICT       2  */ 1: \"stream end\",\n    /* Z_STREAM_END      1  */ 0: \"\",\n    /* Z_OK              0  */ \"-1\": \"file error\",\n    /* Z_ERRNO         (-1) */ \"-2\": \"stream error\",\n    /* Z_STREAM_ERROR  (-2) */ \"-3\": \"data error\",\n    /* Z_DATA_ERROR    (-3) */ \"-4\": \"insufficient memory\",\n    /* Z_MEM_ERROR     (-4) */ \"-5\": \"buffer error\",\n    /* Z_BUF_ERROR     (-5) */ \"-6\": \"incompatible version\" /* Z_VERSION_ERROR (-6) */ \n};\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\nvar $a39eeb69bf620de6$var$constants$2 = {\n    /* Allowed flush values; see deflate() and inflate() below for details */ Z_NO_FLUSH: 0,\n    Z_PARTIAL_FLUSH: 1,\n    Z_SYNC_FLUSH: 2,\n    Z_FULL_FLUSH: 3,\n    Z_FINISH: 4,\n    Z_BLOCK: 5,\n    Z_TREES: 6,\n    /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */ Z_OK: 0,\n    Z_STREAM_END: 1,\n    Z_NEED_DICT: 2,\n    Z_ERRNO: -1,\n    Z_STREAM_ERROR: -2,\n    Z_DATA_ERROR: -3,\n    Z_MEM_ERROR: -4,\n    Z_BUF_ERROR: -5,\n    //Z_VERSION_ERROR: -6,\n    /* compression levels */ Z_NO_COMPRESSION: 0,\n    Z_BEST_SPEED: 1,\n    Z_BEST_COMPRESSION: 9,\n    Z_DEFAULT_COMPRESSION: -1,\n    Z_FILTERED: 1,\n    Z_HUFFMAN_ONLY: 2,\n    Z_RLE: 3,\n    Z_FIXED: 4,\n    Z_DEFAULT_STRATEGY: 0,\n    /* Possible values of the data_type field (though see inflate()) */ Z_BINARY: 0,\n    Z_TEXT: 1,\n    //Z_ASCII:                1, // = Z_TEXT (deprecated)\n    Z_UNKNOWN: 2,\n    /* The deflate compression method */ Z_DEFLATED: 8\n};\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\nconst { _tr_init: $a39eeb69bf620de6$var$_tr_init, _tr_stored_block: $a39eeb69bf620de6$var$_tr_stored_block, _tr_flush_block: $a39eeb69bf620de6$var$_tr_flush_block, _tr_tally: $a39eeb69bf620de6$var$_tr_tally, _tr_align: $a39eeb69bf620de6$var$_tr_align } = $a39eeb69bf620de6$var$trees;\n/* Public constants ==========================================================*/ /* ===========================================================================*/ const { Z_NO_FLUSH: $a39eeb69bf620de6$var$Z_NO_FLUSH$2, Z_PARTIAL_FLUSH: $a39eeb69bf620de6$var$Z_PARTIAL_FLUSH, Z_FULL_FLUSH: $a39eeb69bf620de6$var$Z_FULL_FLUSH$1, Z_FINISH: $a39eeb69bf620de6$var$Z_FINISH$3, Z_BLOCK: $a39eeb69bf620de6$var$Z_BLOCK$1, Z_OK: $a39eeb69bf620de6$var$Z_OK$3, Z_STREAM_END: $a39eeb69bf620de6$var$Z_STREAM_END$3, Z_STREAM_ERROR: $a39eeb69bf620de6$var$Z_STREAM_ERROR$2, Z_DATA_ERROR: $a39eeb69bf620de6$var$Z_DATA_ERROR$2, Z_BUF_ERROR: $a39eeb69bf620de6$var$Z_BUF_ERROR$1, Z_DEFAULT_COMPRESSION: $a39eeb69bf620de6$var$Z_DEFAULT_COMPRESSION$1, Z_FILTERED: $a39eeb69bf620de6$var$Z_FILTERED, Z_HUFFMAN_ONLY: $a39eeb69bf620de6$var$Z_HUFFMAN_ONLY, Z_RLE: $a39eeb69bf620de6$var$Z_RLE, Z_FIXED: $a39eeb69bf620de6$var$Z_FIXED, Z_DEFAULT_STRATEGY: $a39eeb69bf620de6$var$Z_DEFAULT_STRATEGY$1, Z_UNKNOWN: $a39eeb69bf620de6$var$Z_UNKNOWN, Z_DEFLATED: $a39eeb69bf620de6$var$Z_DEFLATED$2 } = $a39eeb69bf620de6$var$constants$2;\n/*============================================================================*/ const $a39eeb69bf620de6$var$MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */ const $a39eeb69bf620de6$var$MAX_WBITS$1 = 15;\n/* 32K LZ77 window */ const $a39eeb69bf620de6$var$DEF_MEM_LEVEL = 8;\nconst $a39eeb69bf620de6$var$LENGTH_CODES = 29;\n/* number of length codes, not counting the special END_BLOCK code */ const $a39eeb69bf620de6$var$LITERALS = 256;\n/* number of literal bytes 0..255 */ const $a39eeb69bf620de6$var$L_CODES = $a39eeb69bf620de6$var$LITERALS + 1 + $a39eeb69bf620de6$var$LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */ const $a39eeb69bf620de6$var$D_CODES = 30;\n/* number of distance codes */ const $a39eeb69bf620de6$var$BL_CODES = 19;\n/* number of codes used to transfer the bit lengths */ const $a39eeb69bf620de6$var$HEAP_SIZE = 2 * $a39eeb69bf620de6$var$L_CODES + 1;\n/* maximum heap size */ const $a39eeb69bf620de6$var$MAX_BITS = 15;\n/* All codes must not exceed MAX_BITS bits */ const $a39eeb69bf620de6$var$MIN_MATCH = 3;\nconst $a39eeb69bf620de6$var$MAX_MATCH = 258;\nconst $a39eeb69bf620de6$var$MIN_LOOKAHEAD = $a39eeb69bf620de6$var$MAX_MATCH + $a39eeb69bf620de6$var$MIN_MATCH + 1;\nconst $a39eeb69bf620de6$var$PRESET_DICT = 0x20;\nconst $a39eeb69bf620de6$var$INIT_STATE = 42; /* zlib header -> BUSY_STATE */ \n//#ifdef GZIP\nconst $a39eeb69bf620de6$var$GZIP_STATE = 57; /* gzip header -> BUSY_STATE | EXTRA_STATE */ \n//#endif\nconst $a39eeb69bf620de6$var$EXTRA_STATE = 69; /* gzip extra block -> NAME_STATE */ \nconst $a39eeb69bf620de6$var$NAME_STATE = 73; /* gzip file name -> COMMENT_STATE */ \nconst $a39eeb69bf620de6$var$COMMENT_STATE = 91; /* gzip comment -> HCRC_STATE */ \nconst $a39eeb69bf620de6$var$HCRC_STATE = 103; /* gzip header CRC -> BUSY_STATE */ \nconst $a39eeb69bf620de6$var$BUSY_STATE = 113; /* deflate -> FINISH_STATE */ \nconst $a39eeb69bf620de6$var$FINISH_STATE = 666; /* stream complete */ \nconst $a39eeb69bf620de6$var$BS_NEED_MORE = 1; /* block not completed, need more input or more output */ \nconst $a39eeb69bf620de6$var$BS_BLOCK_DONE = 2; /* block flush performed */ \nconst $a39eeb69bf620de6$var$BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */ \nconst $a39eeb69bf620de6$var$BS_FINISH_DONE = 4; /* finish done, accept no more input or output */ \nconst $a39eeb69bf620de6$var$OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\nconst $a39eeb69bf620de6$var$err = (strm, errorCode)=>{\n    strm.msg = $a39eeb69bf620de6$var$messages[errorCode];\n    return errorCode;\n};\nconst $a39eeb69bf620de6$var$rank = (f)=>{\n    return f * 2 - (f > 4 ? 9 : 0);\n};\nconst $a39eeb69bf620de6$var$zero = (buf)=>{\n    let len = buf.length;\n    while(--len >= 0)buf[len] = 0;\n};\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */ const $a39eeb69bf620de6$var$slide_hash = (s)=>{\n    let n, m;\n    let p;\n    let wsize = s.w_size;\n    n = s.hash_size;\n    p = n;\n    do {\n        m = s.head[--p];\n        s.head[p] = m >= wsize ? m - wsize : 0;\n    }while (--n);\n    n = wsize;\n    //#ifndef FASTEST\n    p = n;\n    do {\n        m = s.prev[--p];\n        s.prev[p] = m >= wsize ? m - wsize : 0;\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */ }while (--n);\n//#endif\n};\n/* eslint-disable new-cap */ let $a39eeb69bf620de6$var$HASH_ZLIB = (s, prev, data)=>(prev << s.hash_shift ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet $a39eeb69bf620de6$var$HASH = $a39eeb69bf620de6$var$HASH_ZLIB;\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */ const $a39eeb69bf620de6$var$flush_pending = (strm)=>{\n    const s = strm.state;\n    //_tr_flush_bits(s);\n    let len = s.pending;\n    if (len > strm.avail_out) len = strm.avail_out;\n    if (len === 0) return;\n    strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n    strm.next_out += len;\n    s.pending_out += len;\n    strm.total_out += len;\n    strm.avail_out -= len;\n    s.pending -= len;\n    if (s.pending === 0) s.pending_out = 0;\n};\nconst $a39eeb69bf620de6$var$flush_block_only = (s, last)=>{\n    $a39eeb69bf620de6$var$_tr_flush_block(s, s.block_start >= 0 ? s.block_start : -1, s.strstart - s.block_start, last);\n    s.block_start = s.strstart;\n    $a39eeb69bf620de6$var$flush_pending(s.strm);\n};\nconst $a39eeb69bf620de6$var$put_byte = (s, b)=>{\n    s.pending_buf[s.pending++] = b;\n};\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */ const $a39eeb69bf620de6$var$putShortMSB = (s, b)=>{\n    //  put_byte(s, (Byte)(b >> 8));\n    //  put_byte(s, (Byte)(b & 0xff));\n    s.pending_buf[s.pending++] = b >>> 8 & 0xff;\n    s.pending_buf[s.pending++] = b & 0xff;\n};\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */ const $a39eeb69bf620de6$var$read_buf = (strm, buf, start, size)=>{\n    let len = strm.avail_in;\n    if (len > size) len = size;\n    if (len === 0) return 0;\n    strm.avail_in -= len;\n    // zmemcpy(buf, strm->next_in, len);\n    buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n    if (strm.state.wrap === 1) strm.adler = $a39eeb69bf620de6$var$adler32_1(strm.adler, buf, len, start);\n    else if (strm.state.wrap === 2) strm.adler = $a39eeb69bf620de6$var$crc32_1(strm.adler, buf, len, start);\n    strm.next_in += len;\n    strm.total_in += len;\n    return len;\n};\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */ const $a39eeb69bf620de6$var$longest_match = (s, cur_match)=>{\n    let chain_length = s.max_chain_length; /* max hash chain length */ \n    let scan = s.strstart; /* current string */ \n    let match; /* matched string */ \n    let len; /* length of current match */ \n    let best_len = s.prev_length; /* best match length so far */ \n    let nice_match = s.nice_match; /* stop if match long enough */ \n    const limit = s.strstart > s.w_size - $a39eeb69bf620de6$var$MIN_LOOKAHEAD ? s.strstart - (s.w_size - $a39eeb69bf620de6$var$MIN_LOOKAHEAD) : 0 /*NIL*/ ;\n    const _win = s.window; // shortcut\n    const wmask = s.w_mask;\n    const prev = s.prev;\n    /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */ const strend = s.strstart + $a39eeb69bf620de6$var$MAX_MATCH;\n    let scan_end1 = _win[scan + best_len - 1];\n    let scan_end = _win[scan + best_len];\n    /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */ // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n    /* Do not waste too much time if we already have a good match: */ if (s.prev_length >= s.good_match) chain_length >>= 2;\n    /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */ if (nice_match > s.lookahead) nice_match = s.lookahead;\n    // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n    do {\n        // Assert(cur_match < s->strstart, \"no future\");\n        match = cur_match;\n        /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */ if (_win[match + best_len] !== scan_end || _win[match + best_len - 1] !== scan_end1 || _win[match] !== _win[scan] || _win[++match] !== _win[scan + 1]) continue;\n        /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */ scan += 2;\n        match++;\n        // Assert(*scan == *match, \"match[2]?\");\n        /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */ do ;\n        while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && scan < strend);\n        // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n        len = $a39eeb69bf620de6$var$MAX_MATCH - (strend - scan);\n        scan = strend - $a39eeb69bf620de6$var$MAX_MATCH;\n        if (len > best_len) {\n            s.match_start = cur_match;\n            best_len = len;\n            if (len >= nice_match) break;\n            scan_end1 = _win[scan + best_len - 1];\n            scan_end = _win[scan + best_len];\n        }\n    }while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n    if (best_len <= s.lookahead) return best_len;\n    return s.lookahead;\n};\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */ const $a39eeb69bf620de6$var$fill_window = (s)=>{\n    const _w_size = s.w_size;\n    let n, more, str;\n    //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n    do {\n        more = s.window_size - s.lookahead - s.strstart;\n        // JS ints have 32 bit, block below not needed\n        /* Deal with !@#$% 64K limit: */ //if (sizeof(int) <= 2) {\n        //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n        //        more = wsize;\n        //\n        //  } else if (more == (unsigned)(-1)) {\n        //        /* Very unlikely, but possible on 16 bit machine if\n        //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n        //         */\n        //        more--;\n        //    }\n        //}\n        /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */ if (s.strstart >= _w_size + (_w_size - $a39eeb69bf620de6$var$MIN_LOOKAHEAD)) {\n            s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n            s.match_start -= _w_size;\n            s.strstart -= _w_size;\n            /* we now have strstart >= MAX_DIST */ s.block_start -= _w_size;\n            if (s.insert > s.strstart) s.insert = s.strstart;\n            $a39eeb69bf620de6$var$slide_hash(s);\n            more += _w_size;\n        }\n        if (s.strm.avail_in === 0) break;\n        /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */ //Assert(more >= 2, \"more < 2\");\n        n = $a39eeb69bf620de6$var$read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n        s.lookahead += n;\n        /* Initialize the hash value now that we have some input: */ if (s.lookahead + s.insert >= $a39eeb69bf620de6$var$MIN_MATCH) {\n            str = s.strstart - s.insert;\n            s.ins_h = s.window[str];\n            /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */ s.ins_h = $a39eeb69bf620de6$var$HASH(s, s.ins_h, s.window[str + 1]);\n            //#if MIN_MATCH != 3\n            //        Call update_hash() MIN_MATCH-3 more times\n            //#endif\n            while(s.insert){\n                /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */ s.ins_h = $a39eeb69bf620de6$var$HASH(s, s.ins_h, s.window[str + $a39eeb69bf620de6$var$MIN_MATCH - 1]);\n                s.prev[str & s.w_mask] = s.head[s.ins_h];\n                s.head[s.ins_h] = str;\n                str++;\n                s.insert--;\n                if (s.lookahead + s.insert < $a39eeb69bf620de6$var$MIN_MATCH) break;\n            }\n        }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */ }while (s.lookahead < $a39eeb69bf620de6$var$MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n/* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */ //  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */ const $a39eeb69bf620de6$var$deflate_stored = (s, flush)=>{\n    /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */ let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n    /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */ let len, left, have, last = 0;\n    let used = s.strm.avail_in;\n    do {\n        /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */ len = 65535 /* MAX_STORED */ ; /* maximum deflate stored block length */ \n        have = s.bi_valid + 42 >> 3; /* number of header bytes */ \n        if (s.strm.avail_out < have) break;\n        /* maximum stored block length that will fit in avail_out: */ have = s.strm.avail_out - have;\n        left = s.strstart - s.block_start; /* bytes left in window */ \n        if (len > left + s.strm.avail_in) len = left + s.strm.avail_in; /* limit len to the input */ \n        if (len > have) len = have; /* limit len to the output */ \n        /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */ if (len < min_block && (len === 0 && flush !== $a39eeb69bf620de6$var$Z_FINISH$3 || flush === $a39eeb69bf620de6$var$Z_NO_FLUSH$2 || len !== left + s.strm.avail_in)) break;\n        /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */ last = flush === $a39eeb69bf620de6$var$Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n        $a39eeb69bf620de6$var$_tr_stored_block(s, 0, 0, last);\n        /* Replace the lengths in the dummy stored block with len. */ s.pending_buf[s.pending - 4] = len;\n        s.pending_buf[s.pending - 3] = len >> 8;\n        s.pending_buf[s.pending - 2] = ~len;\n        s.pending_buf[s.pending - 1] = ~len >> 8;\n        /* Write the stored block header bytes. */ $a39eeb69bf620de6$var$flush_pending(s.strm);\n        //#ifdef ZLIB_DEBUG\n        //    /* Update debugging counts for the data about to be copied. */\n        //    s->compressed_len += len << 3;\n        //    s->bits_sent += len << 3;\n        //#endif\n        /* Copy uncompressed bytes from the window to next_out. */ if (left) {\n            if (left > len) left = len;\n            //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n            s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n            s.strm.next_out += left;\n            s.strm.avail_out -= left;\n            s.strm.total_out += left;\n            s.block_start += left;\n            len -= left;\n        }\n        /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */ if (len) {\n            $a39eeb69bf620de6$var$read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n            s.strm.next_out += len;\n            s.strm.avail_out -= len;\n            s.strm.total_out += len;\n        }\n    }while (last === 0);\n    /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */ used -= s.strm.avail_in; /* number of input bytes directly copied */ \n    if (used) {\n        /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */ if (used >= s.w_size) {\n            s.matches = 2; /* clear hash */ \n            //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n            s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n            s.strstart = s.w_size;\n            s.insert = s.strstart;\n        } else {\n            if (s.window_size - s.strstart <= used) {\n                /* Slide the window down. */ s.strstart -= s.w_size;\n                //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n                s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n                if (s.matches < 2) s.matches++; /* add a pending slide_hash() */ \n                if (s.insert > s.strstart) s.insert = s.strstart;\n            }\n            //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n            s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n            s.strstart += used;\n            s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n        }\n        s.block_start = s.strstart;\n    }\n    if (s.high_water < s.strstart) s.high_water = s.strstart;\n    /* If the last block was written to next_out, then done. */ if (last) return $a39eeb69bf620de6$var$BS_FINISH_DONE;\n    /* If flushing and all input has been consumed, then done. */ if (flush !== $a39eeb69bf620de6$var$Z_NO_FLUSH$2 && flush !== $a39eeb69bf620de6$var$Z_FINISH$3 && s.strm.avail_in === 0 && s.strstart === s.block_start) return $a39eeb69bf620de6$var$BS_BLOCK_DONE;\n    /* Fill the window with any remaining input. */ have = s.window_size - s.strstart;\n    if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n        /* Slide the window down. */ s.block_start -= s.w_size;\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) s.matches++; /* add a pending slide_hash() */ \n        have += s.w_size; /* more space now */ \n        if (s.insert > s.strstart) s.insert = s.strstart;\n    }\n    if (have > s.strm.avail_in) have = s.strm.avail_in;\n    if (have) {\n        $a39eeb69bf620de6$var$read_buf(s.strm, s.window, s.strstart, have);\n        s.strstart += have;\n        s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n    }\n    if (s.high_water < s.strstart) s.high_water = s.strstart;\n    /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */ have = s.bi_valid + 42 >> 3; /* number of header bytes */ \n    /* maximum stored block length that will fit in pending: */ have = s.pending_buf_size - have > 65535 /* MAX_STORED */  ? 65535 /* MAX_STORED */  : s.pending_buf_size - have;\n    min_block = have > s.w_size ? s.w_size : have;\n    left = s.strstart - s.block_start;\n    if (left >= min_block || (left || flush === $a39eeb69bf620de6$var$Z_FINISH$3) && flush !== $a39eeb69bf620de6$var$Z_NO_FLUSH$2 && s.strm.avail_in === 0 && left <= have) {\n        len = left > have ? have : left;\n        last = flush === $a39eeb69bf620de6$var$Z_FINISH$3 && s.strm.avail_in === 0 && len === left ? 1 : 0;\n        $a39eeb69bf620de6$var$_tr_stored_block(s, s.block_start, len, last);\n        s.block_start += len;\n        $a39eeb69bf620de6$var$flush_pending(s.strm);\n    }\n    /* We've done all we can with the available input and output. */ return last ? $a39eeb69bf620de6$var$BS_FINISH_STARTED : $a39eeb69bf620de6$var$BS_NEED_MORE;\n};\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */ const $a39eeb69bf620de6$var$deflate_fast = (s, flush)=>{\n    let hash_head; /* head of the hash chain */ \n    let bflush; /* set if current block must be flushed */ \n    for(;;){\n        /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */ if (s.lookahead < $a39eeb69bf620de6$var$MIN_LOOKAHEAD) {\n            $a39eeb69bf620de6$var$fill_window(s);\n            if (s.lookahead < $a39eeb69bf620de6$var$MIN_LOOKAHEAD && flush === $a39eeb69bf620de6$var$Z_NO_FLUSH$2) return $a39eeb69bf620de6$var$BS_NEED_MORE;\n            if (s.lookahead === 0) break; /* flush the current block */ \n        }\n        /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */ hash_head = 0 /*NIL*/ ;\n        if (s.lookahead >= $a39eeb69bf620de6$var$MIN_MATCH) {\n            /*** INSERT_STRING(s, s.strstart, hash_head); ***/ s.ins_h = $a39eeb69bf620de6$var$HASH(s, s.ins_h, s.window[s.strstart + $a39eeb69bf620de6$var$MIN_MATCH - 1]);\n            hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n            s.head[s.ins_h] = s.strstart;\n        /***/ }\n        /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */ if (hash_head !== 0 /*NIL*/  && s.strstart - hash_head <= s.w_size - $a39eeb69bf620de6$var$MIN_LOOKAHEAD) /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */ s.match_length = $a39eeb69bf620de6$var$longest_match(s, hash_head);\n        if (s.match_length >= $a39eeb69bf620de6$var$MIN_MATCH) {\n            // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n            /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/ bflush = $a39eeb69bf620de6$var$_tr_tally(s, s.strstart - s.match_start, s.match_length - $a39eeb69bf620de6$var$MIN_MATCH);\n            s.lookahead -= s.match_length;\n            /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */ if (s.match_length <= s.max_lazy_match /*max_insert_length*/  && s.lookahead >= $a39eeb69bf620de6$var$MIN_MATCH) {\n                s.match_length--; /* string at strstart already in table */ \n                do {\n                    s.strstart++;\n                    /*** INSERT_STRING(s, s.strstart, hash_head); ***/ s.ins_h = $a39eeb69bf620de6$var$HASH(s, s.ins_h, s.window[s.strstart + $a39eeb69bf620de6$var$MIN_MATCH - 1]);\n                    hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n                    s.head[s.ins_h] = s.strstart;\n                /***/ /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */ }while (--s.match_length !== 0);\n                s.strstart++;\n            } else {\n                s.strstart += s.match_length;\n                s.match_length = 0;\n                s.ins_h = s.window[s.strstart];\n                /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */ s.ins_h = $a39eeb69bf620de6$var$HASH(s, s.ins_h, s.window[s.strstart + 1]);\n            //#if MIN_MATCH != 3\n            //                Call UPDATE_HASH() MIN_MATCH-3 more times\n            //#endif\n            /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */ }\n        } else {\n            /* No match, output a literal byte */ //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n            /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/ bflush = $a39eeb69bf620de6$var$_tr_tally(s, 0, s.window[s.strstart]);\n            s.lookahead--;\n            s.strstart++;\n        }\n        if (bflush) {\n            /*** FLUSH_BLOCK(s, 0); ***/ $a39eeb69bf620de6$var$flush_block_only(s, false);\n            if (s.strm.avail_out === 0) return $a39eeb69bf620de6$var$BS_NEED_MORE;\n        /***/ }\n    }\n    s.insert = s.strstart < $a39eeb69bf620de6$var$MIN_MATCH - 1 ? s.strstart : $a39eeb69bf620de6$var$MIN_MATCH - 1;\n    if (flush === $a39eeb69bf620de6$var$Z_FINISH$3) {\n        /*** FLUSH_BLOCK(s, 1); ***/ $a39eeb69bf620de6$var$flush_block_only(s, true);\n        if (s.strm.avail_out === 0) return $a39eeb69bf620de6$var$BS_FINISH_STARTED;\n        /***/ return $a39eeb69bf620de6$var$BS_FINISH_DONE;\n    }\n    if (s.sym_next) {\n        /*** FLUSH_BLOCK(s, 0); ***/ $a39eeb69bf620de6$var$flush_block_only(s, false);\n        if (s.strm.avail_out === 0) return $a39eeb69bf620de6$var$BS_NEED_MORE;\n    /***/ }\n    return $a39eeb69bf620de6$var$BS_BLOCK_DONE;\n};\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */ const $a39eeb69bf620de6$var$deflate_slow = (s, flush)=>{\n    let hash_head; /* head of hash chain */ \n    let bflush; /* set if current block must be flushed */ \n    let max_insert;\n    /* Process the input block. */ for(;;){\n        /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */ if (s.lookahead < $a39eeb69bf620de6$var$MIN_LOOKAHEAD) {\n            $a39eeb69bf620de6$var$fill_window(s);\n            if (s.lookahead < $a39eeb69bf620de6$var$MIN_LOOKAHEAD && flush === $a39eeb69bf620de6$var$Z_NO_FLUSH$2) return $a39eeb69bf620de6$var$BS_NEED_MORE;\n            if (s.lookahead === 0) break;\n             /* flush the current block */ \n        }\n        /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */ hash_head = 0 /*NIL*/ ;\n        if (s.lookahead >= $a39eeb69bf620de6$var$MIN_MATCH) {\n            /*** INSERT_STRING(s, s.strstart, hash_head); ***/ s.ins_h = $a39eeb69bf620de6$var$HASH(s, s.ins_h, s.window[s.strstart + $a39eeb69bf620de6$var$MIN_MATCH - 1]);\n            hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n            s.head[s.ins_h] = s.strstart;\n        /***/ }\n        /* Find the longest match, discarding those <= prev_length.\n     */ s.prev_length = s.match_length;\n        s.prev_match = s.match_start;\n        s.match_length = $a39eeb69bf620de6$var$MIN_MATCH - 1;\n        if (hash_head !== 0 /*NIL*/  && s.prev_length < s.max_lazy_match && s.strstart - hash_head <= s.w_size - $a39eeb69bf620de6$var$MIN_LOOKAHEAD) {\n            /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */ s.match_length = $a39eeb69bf620de6$var$longest_match(s, hash_head);\n            /* longest_match() sets match_start */ if (s.match_length <= 5 && (s.strategy === $a39eeb69bf620de6$var$Z_FILTERED || s.match_length === $a39eeb69bf620de6$var$MIN_MATCH && s.strstart - s.match_start > 4096 /*TOO_FAR*/ )) /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */ s.match_length = $a39eeb69bf620de6$var$MIN_MATCH - 1;\n        }\n        /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */ if (s.prev_length >= $a39eeb69bf620de6$var$MIN_MATCH && s.match_length <= s.prev_length) {\n            max_insert = s.strstart + s.lookahead - $a39eeb69bf620de6$var$MIN_MATCH;\n            /* Do not insert strings in hash table beyond this. */ //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n            /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/ bflush = $a39eeb69bf620de6$var$_tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - $a39eeb69bf620de6$var$MIN_MATCH);\n            /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */ s.lookahead -= s.prev_length - 1;\n            s.prev_length -= 2;\n            do if (++s.strstart <= max_insert) {\n                /*** INSERT_STRING(s, s.strstart, hash_head); ***/ s.ins_h = $a39eeb69bf620de6$var$HASH(s, s.ins_h, s.window[s.strstart + $a39eeb69bf620de6$var$MIN_MATCH - 1]);\n                hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n                s.head[s.ins_h] = s.strstart;\n            /***/ }\n            while (--s.prev_length !== 0);\n            s.match_available = 0;\n            s.match_length = $a39eeb69bf620de6$var$MIN_MATCH - 1;\n            s.strstart++;\n            if (bflush) {\n                /*** FLUSH_BLOCK(s, 0); ***/ $a39eeb69bf620de6$var$flush_block_only(s, false);\n                if (s.strm.avail_out === 0) return $a39eeb69bf620de6$var$BS_NEED_MORE;\n            /***/ }\n        } else if (s.match_available) {\n            /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */ //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n            /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/ bflush = $a39eeb69bf620de6$var$_tr_tally(s, 0, s.window[s.strstart - 1]);\n            if (bflush) /*** FLUSH_BLOCK_ONLY(s, 0) ***/ $a39eeb69bf620de6$var$flush_block_only(s, false);\n            s.strstart++;\n            s.lookahead--;\n            if (s.strm.avail_out === 0) return $a39eeb69bf620de6$var$BS_NEED_MORE;\n        } else {\n            /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */ s.match_available = 1;\n            s.strstart++;\n            s.lookahead--;\n        }\n    }\n    //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n    if (s.match_available) {\n        //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n        /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/ bflush = $a39eeb69bf620de6$var$_tr_tally(s, 0, s.window[s.strstart - 1]);\n        s.match_available = 0;\n    }\n    s.insert = s.strstart < $a39eeb69bf620de6$var$MIN_MATCH - 1 ? s.strstart : $a39eeb69bf620de6$var$MIN_MATCH - 1;\n    if (flush === $a39eeb69bf620de6$var$Z_FINISH$3) {\n        /*** FLUSH_BLOCK(s, 1); ***/ $a39eeb69bf620de6$var$flush_block_only(s, true);\n        if (s.strm.avail_out === 0) return $a39eeb69bf620de6$var$BS_FINISH_STARTED;\n        /***/ return $a39eeb69bf620de6$var$BS_FINISH_DONE;\n    }\n    if (s.sym_next) {\n        /*** FLUSH_BLOCK(s, 0); ***/ $a39eeb69bf620de6$var$flush_block_only(s, false);\n        if (s.strm.avail_out === 0) return $a39eeb69bf620de6$var$BS_NEED_MORE;\n    /***/ }\n    return $a39eeb69bf620de6$var$BS_BLOCK_DONE;\n};\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */ const $a39eeb69bf620de6$var$deflate_rle = (s, flush)=>{\n    let bflush; /* set if current block must be flushed */ \n    let prev; /* byte at distance one to match */ \n    let scan, strend; /* scan goes up to strend for length of run */ \n    const _win = s.window;\n    for(;;){\n        /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */ if (s.lookahead <= $a39eeb69bf620de6$var$MAX_MATCH) {\n            $a39eeb69bf620de6$var$fill_window(s);\n            if (s.lookahead <= $a39eeb69bf620de6$var$MAX_MATCH && flush === $a39eeb69bf620de6$var$Z_NO_FLUSH$2) return $a39eeb69bf620de6$var$BS_NEED_MORE;\n            if (s.lookahead === 0) break;\n             /* flush the current block */ \n        }\n        /* See how many times the previous byte repeats */ s.match_length = 0;\n        if (s.lookahead >= $a39eeb69bf620de6$var$MIN_MATCH && s.strstart > 0) {\n            scan = s.strstart - 1;\n            prev = _win[scan];\n            if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n                strend = s.strstart + $a39eeb69bf620de6$var$MAX_MATCH;\n                do ;\n                while (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && scan < strend);\n                s.match_length = $a39eeb69bf620de6$var$MAX_MATCH - (strend - scan);\n                if (s.match_length > s.lookahead) s.match_length = s.lookahead;\n            }\n        //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n        }\n        /* Emit match if have run of MIN_MATCH or longer, else emit literal */ if (s.match_length >= $a39eeb69bf620de6$var$MIN_MATCH) {\n            //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n            /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/ bflush = $a39eeb69bf620de6$var$_tr_tally(s, 1, s.match_length - $a39eeb69bf620de6$var$MIN_MATCH);\n            s.lookahead -= s.match_length;\n            s.strstart += s.match_length;\n            s.match_length = 0;\n        } else {\n            /* No match, output a literal byte */ //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n            /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/ bflush = $a39eeb69bf620de6$var$_tr_tally(s, 0, s.window[s.strstart]);\n            s.lookahead--;\n            s.strstart++;\n        }\n        if (bflush) {\n            /*** FLUSH_BLOCK(s, 0); ***/ $a39eeb69bf620de6$var$flush_block_only(s, false);\n            if (s.strm.avail_out === 0) return $a39eeb69bf620de6$var$BS_NEED_MORE;\n        /***/ }\n    }\n    s.insert = 0;\n    if (flush === $a39eeb69bf620de6$var$Z_FINISH$3) {\n        /*** FLUSH_BLOCK(s, 1); ***/ $a39eeb69bf620de6$var$flush_block_only(s, true);\n        if (s.strm.avail_out === 0) return $a39eeb69bf620de6$var$BS_FINISH_STARTED;\n        /***/ return $a39eeb69bf620de6$var$BS_FINISH_DONE;\n    }\n    if (s.sym_next) {\n        /*** FLUSH_BLOCK(s, 0); ***/ $a39eeb69bf620de6$var$flush_block_only(s, false);\n        if (s.strm.avail_out === 0) return $a39eeb69bf620de6$var$BS_NEED_MORE;\n    /***/ }\n    return $a39eeb69bf620de6$var$BS_BLOCK_DONE;\n};\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */ const $a39eeb69bf620de6$var$deflate_huff = (s, flush)=>{\n    let bflush; /* set if current block must be flushed */ \n    for(;;){\n        /* Make sure that we have a literal to write. */ if (s.lookahead === 0) {\n            $a39eeb69bf620de6$var$fill_window(s);\n            if (s.lookahead === 0) {\n                if (flush === $a39eeb69bf620de6$var$Z_NO_FLUSH$2) return $a39eeb69bf620de6$var$BS_NEED_MORE;\n                break; /* flush the current block */ \n            }\n        }\n        /* Output a literal byte */ s.match_length = 0;\n        //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n        /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/ bflush = $a39eeb69bf620de6$var$_tr_tally(s, 0, s.window[s.strstart]);\n        s.lookahead--;\n        s.strstart++;\n        if (bflush) {\n            /*** FLUSH_BLOCK(s, 0); ***/ $a39eeb69bf620de6$var$flush_block_only(s, false);\n            if (s.strm.avail_out === 0) return $a39eeb69bf620de6$var$BS_NEED_MORE;\n        /***/ }\n    }\n    s.insert = 0;\n    if (flush === $a39eeb69bf620de6$var$Z_FINISH$3) {\n        /*** FLUSH_BLOCK(s, 1); ***/ $a39eeb69bf620de6$var$flush_block_only(s, true);\n        if (s.strm.avail_out === 0) return $a39eeb69bf620de6$var$BS_FINISH_STARTED;\n        /***/ return $a39eeb69bf620de6$var$BS_FINISH_DONE;\n    }\n    if (s.sym_next) {\n        /*** FLUSH_BLOCK(s, 0); ***/ $a39eeb69bf620de6$var$flush_block_only(s, false);\n        if (s.strm.avail_out === 0) return $a39eeb69bf620de6$var$BS_NEED_MORE;\n    /***/ }\n    return $a39eeb69bf620de6$var$BS_BLOCK_DONE;\n};\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */ function $a39eeb69bf620de6$var$Config(good_length, max_lazy, nice_length, max_chain, func) {\n    this.good_length = good_length;\n    this.max_lazy = max_lazy;\n    this.nice_length = nice_length;\n    this.max_chain = max_chain;\n    this.func = func;\n}\nconst $a39eeb69bf620de6$var$configuration_table = [\n    /*      good lazy nice chain */ new $a39eeb69bf620de6$var$Config(0, 0, 0, 0, $a39eeb69bf620de6$var$deflate_stored),\n    /* 0 store only */ new $a39eeb69bf620de6$var$Config(4, 4, 8, 4, $a39eeb69bf620de6$var$deflate_fast),\n    /* 1 max speed, no lazy matches */ new $a39eeb69bf620de6$var$Config(4, 5, 16, 8, $a39eeb69bf620de6$var$deflate_fast),\n    /* 2 */ new $a39eeb69bf620de6$var$Config(4, 6, 32, 32, $a39eeb69bf620de6$var$deflate_fast),\n    /* 3 */ new $a39eeb69bf620de6$var$Config(4, 4, 16, 16, $a39eeb69bf620de6$var$deflate_slow),\n    /* 4 lazy matches */ new $a39eeb69bf620de6$var$Config(8, 16, 32, 32, $a39eeb69bf620de6$var$deflate_slow),\n    /* 5 */ new $a39eeb69bf620de6$var$Config(8, 16, 128, 128, $a39eeb69bf620de6$var$deflate_slow),\n    /* 6 */ new $a39eeb69bf620de6$var$Config(8, 32, 128, 256, $a39eeb69bf620de6$var$deflate_slow),\n    /* 7 */ new $a39eeb69bf620de6$var$Config(32, 128, 258, 1024, $a39eeb69bf620de6$var$deflate_slow),\n    /* 8 */ new $a39eeb69bf620de6$var$Config(32, 258, 258, 4096, $a39eeb69bf620de6$var$deflate_slow)\n];\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */ const $a39eeb69bf620de6$var$lm_init = (s)=>{\n    s.window_size = 2 * s.w_size;\n    /*** CLEAR_HASH(s); ***/ $a39eeb69bf620de6$var$zero(s.head); // Fill with NIL (= 0);\n    /* Set the default configuration parameters:\n   */ s.max_lazy_match = $a39eeb69bf620de6$var$configuration_table[s.level].max_lazy;\n    s.good_match = $a39eeb69bf620de6$var$configuration_table[s.level].good_length;\n    s.nice_match = $a39eeb69bf620de6$var$configuration_table[s.level].nice_length;\n    s.max_chain_length = $a39eeb69bf620de6$var$configuration_table[s.level].max_chain;\n    s.strstart = 0;\n    s.block_start = 0;\n    s.lookahead = 0;\n    s.insert = 0;\n    s.match_length = s.prev_length = $a39eeb69bf620de6$var$MIN_MATCH - 1;\n    s.match_available = 0;\n    s.ins_h = 0;\n};\nfunction $a39eeb69bf620de6$var$DeflateState() {\n    this.strm = null; /* pointer back to this zlib stream */ \n    this.status = 0; /* as the name implies */ \n    this.pending_buf = null; /* output still pending */ \n    this.pending_buf_size = 0; /* size of pending_buf */ \n    this.pending_out = 0; /* next pending byte to output to the stream */ \n    this.pending = 0; /* nb of bytes in the pending buffer */ \n    this.wrap = 0; /* bit 0 true for zlib, bit 1 true for gzip */ \n    this.gzhead = null; /* gzip header information to write */ \n    this.gzindex = 0; /* where in extra, name, or comment */ \n    this.method = $a39eeb69bf620de6$var$Z_DEFLATED$2; /* can only be DEFLATED */ \n    this.last_flush = -1; /* value of flush param for previous deflate call */ \n    this.w_size = 0; /* LZ77 window size (32K by default) */ \n    this.w_bits = 0; /* log2(w_size)  (8..16) */ \n    this.w_mask = 0; /* w_size - 1 */ \n    this.window = null;\n    /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */ this.window_size = 0;\n    /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */ this.prev = null;\n    /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */ this.head = null; /* Heads of the hash chains or NIL. */ \n    this.ins_h = 0; /* hash index of string to be inserted */ \n    this.hash_size = 0; /* number of elements in hash table */ \n    this.hash_bits = 0; /* log2(hash_size) */ \n    this.hash_mask = 0; /* hash_size-1 */ \n    this.hash_shift = 0;\n    /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */ this.block_start = 0;\n    /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */ this.match_length = 0; /* length of best match */ \n    this.prev_match = 0; /* previous match */ \n    this.match_available = 0; /* set if previous match exists */ \n    this.strstart = 0; /* start of string to insert */ \n    this.match_start = 0; /* start of matching string */ \n    this.lookahead = 0; /* number of valid bytes ahead in window */ \n    this.prev_length = 0;\n    /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */ this.max_chain_length = 0;\n    /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */ this.max_lazy_match = 0;\n    /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */ // That's alias to max_lazy_match, don't use directly\n    //this.max_insert_length = 0;\n    /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */ this.level = 0; /* compression level (1..9) */ \n    this.strategy = 0; /* favor or force Huffman coding*/ \n    this.good_match = 0;\n    /* Use a faster search when the previous match is longer than this */ this.nice_match = 0; /* Stop searching when current match exceeds this */ \n    /* used by trees.c: */ /* Didn't use ct_data typedef below to suppress compiler warning */ // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n    // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n    // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n    // Use flat array of DOUBLE size, with interleaved fata,\n    // because JS does not support effective\n    this.dyn_ltree = new Uint16Array($a39eeb69bf620de6$var$HEAP_SIZE * 2);\n    this.dyn_dtree = new Uint16Array((2 * $a39eeb69bf620de6$var$D_CODES + 1) * 2);\n    this.bl_tree = new Uint16Array((2 * $a39eeb69bf620de6$var$BL_CODES + 1) * 2);\n    $a39eeb69bf620de6$var$zero(this.dyn_ltree);\n    $a39eeb69bf620de6$var$zero(this.dyn_dtree);\n    $a39eeb69bf620de6$var$zero(this.bl_tree);\n    this.l_desc = null; /* desc. for literal tree */ \n    this.d_desc = null; /* desc. for distance tree */ \n    this.bl_desc = null; /* desc. for bit length tree */ \n    //ush bl_count[MAX_BITS+1];\n    this.bl_count = new Uint16Array($a39eeb69bf620de6$var$MAX_BITS + 1);\n    /* number of codes at each bit length for an optimal tree */ //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n    this.heap = new Uint16Array(2 * $a39eeb69bf620de6$var$L_CODES + 1); /* heap used to build the Huffman trees */ \n    $a39eeb69bf620de6$var$zero(this.heap);\n    this.heap_len = 0; /* number of elements in the heap */ \n    this.heap_max = 0; /* element of largest frequency */ \n    /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */ this.depth = new Uint16Array(2 * $a39eeb69bf620de6$var$L_CODES + 1); //uch depth[2*L_CODES+1];\n    $a39eeb69bf620de6$var$zero(this.depth);\n    /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */ this.sym_buf = 0; /* buffer for distances and literals/lengths */ \n    this.lit_bufsize = 0;\n    /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */ this.sym_next = 0; /* running index in sym_buf */ \n    this.sym_end = 0; /* symbol table full when sym_next reaches this */ \n    this.opt_len = 0; /* bit length of current block with optimal trees */ \n    this.static_len = 0; /* bit length of current block with static trees */ \n    this.matches = 0; /* number of string matches in current block */ \n    this.insert = 0; /* bytes at end of window left to insert */ \n    this.bi_buf = 0;\n    /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */ this.bi_valid = 0;\n/* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */ // Used for window memory init. We safely ignore it for JS. That makes\n// sense only for pointers and memory check tools.\n//this.high_water = 0;\n/* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */ }\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */ const $a39eeb69bf620de6$var$deflateStateCheck = (strm)=>{\n    if (!strm) return 1;\n    const s = strm.state;\n    if (!s || s.strm !== strm || s.status !== $a39eeb69bf620de6$var$INIT_STATE && //#ifdef GZIP\n    s.status !== $a39eeb69bf620de6$var$GZIP_STATE && //#endif\n    s.status !== $a39eeb69bf620de6$var$EXTRA_STATE && s.status !== $a39eeb69bf620de6$var$NAME_STATE && s.status !== $a39eeb69bf620de6$var$COMMENT_STATE && s.status !== $a39eeb69bf620de6$var$HCRC_STATE && s.status !== $a39eeb69bf620de6$var$BUSY_STATE && s.status !== $a39eeb69bf620de6$var$FINISH_STATE) return 1;\n    return 0;\n};\nconst $a39eeb69bf620de6$var$deflateResetKeep = (strm)=>{\n    if ($a39eeb69bf620de6$var$deflateStateCheck(strm)) return $a39eeb69bf620de6$var$err(strm, $a39eeb69bf620de6$var$Z_STREAM_ERROR$2);\n    strm.total_in = strm.total_out = 0;\n    strm.data_type = $a39eeb69bf620de6$var$Z_UNKNOWN;\n    const s = strm.state;\n    s.pending = 0;\n    s.pending_out = 0;\n    if (s.wrap < 0) s.wrap = -s.wrap;\n    s.status = //#ifdef GZIP\n    s.wrap === 2 ? $a39eeb69bf620de6$var$GZIP_STATE : //#endif\n    s.wrap ? $a39eeb69bf620de6$var$INIT_STATE : $a39eeb69bf620de6$var$BUSY_STATE;\n    strm.adler = s.wrap === 2 ? 0 // crc32(0, Z_NULL, 0)\n     : 1; // adler32(0, Z_NULL, 0)\n    s.last_flush = -2;\n    $a39eeb69bf620de6$var$_tr_init(s);\n    return $a39eeb69bf620de6$var$Z_OK$3;\n};\nconst $a39eeb69bf620de6$var$deflateReset = (strm)=>{\n    const ret = $a39eeb69bf620de6$var$deflateResetKeep(strm);\n    if (ret === $a39eeb69bf620de6$var$Z_OK$3) $a39eeb69bf620de6$var$lm_init(strm.state);\n    return ret;\n};\nconst $a39eeb69bf620de6$var$deflateSetHeader = (strm, head)=>{\n    if ($a39eeb69bf620de6$var$deflateStateCheck(strm) || strm.state.wrap !== 2) return $a39eeb69bf620de6$var$Z_STREAM_ERROR$2;\n    strm.state.gzhead = head;\n    return $a39eeb69bf620de6$var$Z_OK$3;\n};\nconst $a39eeb69bf620de6$var$deflateInit2 = (strm, level, method, windowBits, memLevel, strategy)=>{\n    if (!strm) return $a39eeb69bf620de6$var$Z_STREAM_ERROR$2;\n    let wrap = 1;\n    if (level === $a39eeb69bf620de6$var$Z_DEFAULT_COMPRESSION$1) level = 6;\n    if (windowBits < 0) {\n        wrap = 0;\n        windowBits = -windowBits;\n    } else if (windowBits > 15) {\n        wrap = 2; /* write gzip wrapper instead */ \n        windowBits -= 16;\n    }\n    if (memLevel < 1 || memLevel > $a39eeb69bf620de6$var$MAX_MEM_LEVEL || method !== $a39eeb69bf620de6$var$Z_DEFLATED$2 || windowBits < 8 || windowBits > 15 || level < 0 || level > 9 || strategy < 0 || strategy > $a39eeb69bf620de6$var$Z_FIXED || windowBits === 8 && wrap !== 1) return $a39eeb69bf620de6$var$err(strm, $a39eeb69bf620de6$var$Z_STREAM_ERROR$2);\n    if (windowBits === 8) windowBits = 9;\n    /* until 256-byte window bug fixed */ const s = new $a39eeb69bf620de6$var$DeflateState();\n    strm.state = s;\n    s.strm = strm;\n    s.status = $a39eeb69bf620de6$var$INIT_STATE; /* to pass state test in deflateReset() */ \n    s.wrap = wrap;\n    s.gzhead = null;\n    s.w_bits = windowBits;\n    s.w_size = 1 << s.w_bits;\n    s.w_mask = s.w_size - 1;\n    s.hash_bits = memLevel + 7;\n    s.hash_size = 1 << s.hash_bits;\n    s.hash_mask = s.hash_size - 1;\n    s.hash_shift = ~~((s.hash_bits + $a39eeb69bf620de6$var$MIN_MATCH - 1) / $a39eeb69bf620de6$var$MIN_MATCH);\n    s.window = new Uint8Array(s.w_size * 2);\n    s.head = new Uint16Array(s.hash_size);\n    s.prev = new Uint16Array(s.w_size);\n    // Don't need mem init magic for JS.\n    //s.high_water = 0;  /* nothing written to s->window yet */\n    s.lit_bufsize = 1 << memLevel + 6; /* 16K elements by default */ \n    /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */ s.pending_buf_size = s.lit_bufsize * 4;\n    s.pending_buf = new Uint8Array(s.pending_buf_size);\n    // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n    //s->sym_buf = s->pending_buf + s->lit_bufsize;\n    s.sym_buf = s.lit_bufsize;\n    //s->sym_end = (s->lit_bufsize - 1) * 3;\n    s.sym_end = (s.lit_bufsize - 1) * 3;\n    /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */ s.level = level;\n    s.strategy = strategy;\n    s.method = method;\n    return $a39eeb69bf620de6$var$deflateReset(strm);\n};\nconst $a39eeb69bf620de6$var$deflateInit = (strm, level)=>{\n    return $a39eeb69bf620de6$var$deflateInit2(strm, level, $a39eeb69bf620de6$var$Z_DEFLATED$2, $a39eeb69bf620de6$var$MAX_WBITS$1, $a39eeb69bf620de6$var$DEF_MEM_LEVEL, $a39eeb69bf620de6$var$Z_DEFAULT_STRATEGY$1);\n};\n/* ========================================================================= */ const $a39eeb69bf620de6$var$deflate$2 = (strm, flush)=>{\n    if ($a39eeb69bf620de6$var$deflateStateCheck(strm) || flush > $a39eeb69bf620de6$var$Z_BLOCK$1 || flush < 0) return strm ? $a39eeb69bf620de6$var$err(strm, $a39eeb69bf620de6$var$Z_STREAM_ERROR$2) : $a39eeb69bf620de6$var$Z_STREAM_ERROR$2;\n    const s = strm.state;\n    if (!strm.output || strm.avail_in !== 0 && !strm.input || s.status === $a39eeb69bf620de6$var$FINISH_STATE && flush !== $a39eeb69bf620de6$var$Z_FINISH$3) return $a39eeb69bf620de6$var$err(strm, strm.avail_out === 0 ? $a39eeb69bf620de6$var$Z_BUF_ERROR$1 : $a39eeb69bf620de6$var$Z_STREAM_ERROR$2);\n    const old_flush = s.last_flush;\n    s.last_flush = flush;\n    /* Flush as much pending output as possible */ if (s.pending !== 0) {\n        $a39eeb69bf620de6$var$flush_pending(strm);\n        if (strm.avail_out === 0) {\n            /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */ s.last_flush = -1;\n            return $a39eeb69bf620de6$var$Z_OK$3;\n        }\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */ } else if (strm.avail_in === 0 && $a39eeb69bf620de6$var$rank(flush) <= $a39eeb69bf620de6$var$rank(old_flush) && flush !== $a39eeb69bf620de6$var$Z_FINISH$3) return $a39eeb69bf620de6$var$err(strm, $a39eeb69bf620de6$var$Z_BUF_ERROR$1);\n    /* User must not provide more input after the first FINISH: */ if (s.status === $a39eeb69bf620de6$var$FINISH_STATE && strm.avail_in !== 0) return $a39eeb69bf620de6$var$err(strm, $a39eeb69bf620de6$var$Z_BUF_ERROR$1);\n    /* Write the header */ if (s.status === $a39eeb69bf620de6$var$INIT_STATE && s.wrap === 0) s.status = $a39eeb69bf620de6$var$BUSY_STATE;\n    if (s.status === $a39eeb69bf620de6$var$INIT_STATE) {\n        /* zlib header */ let header = $a39eeb69bf620de6$var$Z_DEFLATED$2 + (s.w_bits - 8 << 4) << 8;\n        let level_flags = -1;\n        if (s.strategy >= $a39eeb69bf620de6$var$Z_HUFFMAN_ONLY || s.level < 2) level_flags = 0;\n        else if (s.level < 6) level_flags = 1;\n        else if (s.level === 6) level_flags = 2;\n        else level_flags = 3;\n        header |= level_flags << 6;\n        if (s.strstart !== 0) header |= $a39eeb69bf620de6$var$PRESET_DICT;\n        header += 31 - header % 31;\n        $a39eeb69bf620de6$var$putShortMSB(s, header);\n        /* Save the adler32 of the preset dictionary: */ if (s.strstart !== 0) {\n            $a39eeb69bf620de6$var$putShortMSB(s, strm.adler >>> 16);\n            $a39eeb69bf620de6$var$putShortMSB(s, strm.adler & 0xffff);\n        }\n        strm.adler = 1; // adler32(0L, Z_NULL, 0);\n        s.status = $a39eeb69bf620de6$var$BUSY_STATE;\n        /* Compression must start with an empty pending buffer */ $a39eeb69bf620de6$var$flush_pending(strm);\n        if (s.pending !== 0) {\n            s.last_flush = -1;\n            return $a39eeb69bf620de6$var$Z_OK$3;\n        }\n    }\n    //#ifdef GZIP\n    if (s.status === $a39eeb69bf620de6$var$GZIP_STATE) {\n        /* gzip header */ strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        $a39eeb69bf620de6$var$put_byte(s, 31);\n        $a39eeb69bf620de6$var$put_byte(s, 139);\n        $a39eeb69bf620de6$var$put_byte(s, 8);\n        if (!s.gzhead) {\n            $a39eeb69bf620de6$var$put_byte(s, 0);\n            $a39eeb69bf620de6$var$put_byte(s, 0);\n            $a39eeb69bf620de6$var$put_byte(s, 0);\n            $a39eeb69bf620de6$var$put_byte(s, 0);\n            $a39eeb69bf620de6$var$put_byte(s, 0);\n            $a39eeb69bf620de6$var$put_byte(s, s.level === 9 ? 2 : s.strategy >= $a39eeb69bf620de6$var$Z_HUFFMAN_ONLY || s.level < 2 ? 4 : 0);\n            $a39eeb69bf620de6$var$put_byte(s, $a39eeb69bf620de6$var$OS_CODE);\n            s.status = $a39eeb69bf620de6$var$BUSY_STATE;\n            /* Compression must start with an empty pending buffer */ $a39eeb69bf620de6$var$flush_pending(strm);\n            if (s.pending !== 0) {\n                s.last_flush = -1;\n                return $a39eeb69bf620de6$var$Z_OK$3;\n            }\n        } else {\n            $a39eeb69bf620de6$var$put_byte(s, (s.gzhead.text ? 1 : 0) + (s.gzhead.hcrc ? 2 : 0) + (!s.gzhead.extra ? 0 : 4) + (!s.gzhead.name ? 0 : 8) + (!s.gzhead.comment ? 0 : 16));\n            $a39eeb69bf620de6$var$put_byte(s, s.gzhead.time & 0xff);\n            $a39eeb69bf620de6$var$put_byte(s, s.gzhead.time >> 8 & 0xff);\n            $a39eeb69bf620de6$var$put_byte(s, s.gzhead.time >> 16 & 0xff);\n            $a39eeb69bf620de6$var$put_byte(s, s.gzhead.time >> 24 & 0xff);\n            $a39eeb69bf620de6$var$put_byte(s, s.level === 9 ? 2 : s.strategy >= $a39eeb69bf620de6$var$Z_HUFFMAN_ONLY || s.level < 2 ? 4 : 0);\n            $a39eeb69bf620de6$var$put_byte(s, s.gzhead.os & 0xff);\n            if (s.gzhead.extra && s.gzhead.extra.length) {\n                $a39eeb69bf620de6$var$put_byte(s, s.gzhead.extra.length & 0xff);\n                $a39eeb69bf620de6$var$put_byte(s, s.gzhead.extra.length >> 8 & 0xff);\n            }\n            if (s.gzhead.hcrc) strm.adler = $a39eeb69bf620de6$var$crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n            s.gzindex = 0;\n            s.status = $a39eeb69bf620de6$var$EXTRA_STATE;\n        }\n    }\n    if (s.status === $a39eeb69bf620de6$var$EXTRA_STATE) {\n        if (s.gzhead.extra /* != Z_NULL*/ ) {\n            let beg = s.pending; /* start of bytes to update crc */ \n            let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n            while(s.pending + left > s.pending_buf_size){\n                let copy = s.pending_buf_size - s.pending;\n                // zmemcpy(s.pending_buf + s.pending,\n                //    s.gzhead.extra + s.gzindex, copy);\n                s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n                s.pending = s.pending_buf_size;\n                //--- HCRC_UPDATE(beg) ---//\n                if (s.gzhead.hcrc && s.pending > beg) strm.adler = $a39eeb69bf620de6$var$crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n                //---//\n                s.gzindex += copy;\n                $a39eeb69bf620de6$var$flush_pending(strm);\n                if (s.pending !== 0) {\n                    s.last_flush = -1;\n                    return $a39eeb69bf620de6$var$Z_OK$3;\n                }\n                beg = 0;\n                left -= copy;\n            }\n            // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n            //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n            let gzhead_extra = new Uint8Array(s.gzhead.extra);\n            // zmemcpy(s->pending_buf + s->pending,\n            //     s->gzhead->extra + s->gzindex, left);\n            s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n            s.pending += left;\n            //--- HCRC_UPDATE(beg) ---//\n            if (s.gzhead.hcrc && s.pending > beg) strm.adler = $a39eeb69bf620de6$var$crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n            //---//\n            s.gzindex = 0;\n        }\n        s.status = $a39eeb69bf620de6$var$NAME_STATE;\n    }\n    if (s.status === $a39eeb69bf620de6$var$NAME_STATE) {\n        if (s.gzhead.name /* != Z_NULL*/ ) {\n            let beg = s.pending; /* start of bytes to update crc */ \n            let val;\n            do {\n                if (s.pending === s.pending_buf_size) {\n                    //--- HCRC_UPDATE(beg) ---//\n                    if (s.gzhead.hcrc && s.pending > beg) strm.adler = $a39eeb69bf620de6$var$crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n                    //---//\n                    $a39eeb69bf620de6$var$flush_pending(strm);\n                    if (s.pending !== 0) {\n                        s.last_flush = -1;\n                        return $a39eeb69bf620de6$var$Z_OK$3;\n                    }\n                    beg = 0;\n                }\n                // JS specific: little magic to add zero terminator to end of string\n                if (s.gzindex < s.gzhead.name.length) val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n                else val = 0;\n                $a39eeb69bf620de6$var$put_byte(s, val);\n            }while (val !== 0);\n            //--- HCRC_UPDATE(beg) ---//\n            if (s.gzhead.hcrc && s.pending > beg) strm.adler = $a39eeb69bf620de6$var$crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n            //---//\n            s.gzindex = 0;\n        }\n        s.status = $a39eeb69bf620de6$var$COMMENT_STATE;\n    }\n    if (s.status === $a39eeb69bf620de6$var$COMMENT_STATE) {\n        if (s.gzhead.comment /* != Z_NULL*/ ) {\n            let beg = s.pending; /* start of bytes to update crc */ \n            let val;\n            do {\n                if (s.pending === s.pending_buf_size) {\n                    //--- HCRC_UPDATE(beg) ---//\n                    if (s.gzhead.hcrc && s.pending > beg) strm.adler = $a39eeb69bf620de6$var$crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n                    //---//\n                    $a39eeb69bf620de6$var$flush_pending(strm);\n                    if (s.pending !== 0) {\n                        s.last_flush = -1;\n                        return $a39eeb69bf620de6$var$Z_OK$3;\n                    }\n                    beg = 0;\n                }\n                // JS specific: little magic to add zero terminator to end of string\n                if (s.gzindex < s.gzhead.comment.length) val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n                else val = 0;\n                $a39eeb69bf620de6$var$put_byte(s, val);\n            }while (val !== 0);\n            //--- HCRC_UPDATE(beg) ---//\n            if (s.gzhead.hcrc && s.pending > beg) strm.adler = $a39eeb69bf620de6$var$crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        //---//\n        }\n        s.status = $a39eeb69bf620de6$var$HCRC_STATE;\n    }\n    if (s.status === $a39eeb69bf620de6$var$HCRC_STATE) {\n        if (s.gzhead.hcrc) {\n            if (s.pending + 2 > s.pending_buf_size) {\n                $a39eeb69bf620de6$var$flush_pending(strm);\n                if (s.pending !== 0) {\n                    s.last_flush = -1;\n                    return $a39eeb69bf620de6$var$Z_OK$3;\n                }\n            }\n            $a39eeb69bf620de6$var$put_byte(s, strm.adler & 0xff);\n            $a39eeb69bf620de6$var$put_byte(s, strm.adler >> 8 & 0xff);\n            strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        }\n        s.status = $a39eeb69bf620de6$var$BUSY_STATE;\n        /* Compression must start with an empty pending buffer */ $a39eeb69bf620de6$var$flush_pending(strm);\n        if (s.pending !== 0) {\n            s.last_flush = -1;\n            return $a39eeb69bf620de6$var$Z_OK$3;\n        }\n    }\n    //#endif\n    /* Start a new block or continue the current one.\n   */ if (strm.avail_in !== 0 || s.lookahead !== 0 || flush !== $a39eeb69bf620de6$var$Z_NO_FLUSH$2 && s.status !== $a39eeb69bf620de6$var$FINISH_STATE) {\n        let bstate = s.level === 0 ? $a39eeb69bf620de6$var$deflate_stored(s, flush) : s.strategy === $a39eeb69bf620de6$var$Z_HUFFMAN_ONLY ? $a39eeb69bf620de6$var$deflate_huff(s, flush) : s.strategy === $a39eeb69bf620de6$var$Z_RLE ? $a39eeb69bf620de6$var$deflate_rle(s, flush) : $a39eeb69bf620de6$var$configuration_table[s.level].func(s, flush);\n        if (bstate === $a39eeb69bf620de6$var$BS_FINISH_STARTED || bstate === $a39eeb69bf620de6$var$BS_FINISH_DONE) s.status = $a39eeb69bf620de6$var$FINISH_STATE;\n        if (bstate === $a39eeb69bf620de6$var$BS_NEED_MORE || bstate === $a39eeb69bf620de6$var$BS_FINISH_STARTED) {\n            if (strm.avail_out === 0) s.last_flush = -1;\n            return $a39eeb69bf620de6$var$Z_OK$3;\n        /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */ }\n        if (bstate === $a39eeb69bf620de6$var$BS_BLOCK_DONE) {\n            if (flush === $a39eeb69bf620de6$var$Z_PARTIAL_FLUSH) $a39eeb69bf620de6$var$_tr_align(s);\n            else if (flush !== $a39eeb69bf620de6$var$Z_BLOCK$1) {\n                $a39eeb69bf620de6$var$_tr_stored_block(s, 0, 0, false);\n                /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */ if (flush === $a39eeb69bf620de6$var$Z_FULL_FLUSH$1) {\n                    /*** CLEAR_HASH(s); ***/ /* forget history */ $a39eeb69bf620de6$var$zero(s.head); // Fill with NIL (= 0);\n                    if (s.lookahead === 0) {\n                        s.strstart = 0;\n                        s.block_start = 0;\n                        s.insert = 0;\n                    }\n                }\n            }\n            $a39eeb69bf620de6$var$flush_pending(strm);\n            if (strm.avail_out === 0) {\n                s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */ \n                return $a39eeb69bf620de6$var$Z_OK$3;\n            }\n        }\n    }\n    if (flush !== $a39eeb69bf620de6$var$Z_FINISH$3) return $a39eeb69bf620de6$var$Z_OK$3;\n    if (s.wrap <= 0) return $a39eeb69bf620de6$var$Z_STREAM_END$3;\n    /* Write the trailer */ if (s.wrap === 2) {\n        $a39eeb69bf620de6$var$put_byte(s, strm.adler & 0xff);\n        $a39eeb69bf620de6$var$put_byte(s, strm.adler >> 8 & 0xff);\n        $a39eeb69bf620de6$var$put_byte(s, strm.adler >> 16 & 0xff);\n        $a39eeb69bf620de6$var$put_byte(s, strm.adler >> 24 & 0xff);\n        $a39eeb69bf620de6$var$put_byte(s, strm.total_in & 0xff);\n        $a39eeb69bf620de6$var$put_byte(s, strm.total_in >> 8 & 0xff);\n        $a39eeb69bf620de6$var$put_byte(s, strm.total_in >> 16 & 0xff);\n        $a39eeb69bf620de6$var$put_byte(s, strm.total_in >> 24 & 0xff);\n    } else {\n        $a39eeb69bf620de6$var$putShortMSB(s, strm.adler >>> 16);\n        $a39eeb69bf620de6$var$putShortMSB(s, strm.adler & 0xffff);\n    }\n    $a39eeb69bf620de6$var$flush_pending(strm);\n    /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */ if (s.wrap > 0) s.wrap = -s.wrap;\n    /* write the trailer only once! */ return s.pending !== 0 ? $a39eeb69bf620de6$var$Z_OK$3 : $a39eeb69bf620de6$var$Z_STREAM_END$3;\n};\nconst $a39eeb69bf620de6$var$deflateEnd = (strm)=>{\n    if ($a39eeb69bf620de6$var$deflateStateCheck(strm)) return $a39eeb69bf620de6$var$Z_STREAM_ERROR$2;\n    const status = strm.state.status;\n    strm.state = null;\n    return status === $a39eeb69bf620de6$var$BUSY_STATE ? $a39eeb69bf620de6$var$err(strm, $a39eeb69bf620de6$var$Z_DATA_ERROR$2) : $a39eeb69bf620de6$var$Z_OK$3;\n};\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */ const $a39eeb69bf620de6$var$deflateSetDictionary = (strm, dictionary)=>{\n    let dictLength = dictionary.length;\n    if ($a39eeb69bf620de6$var$deflateStateCheck(strm)) return $a39eeb69bf620de6$var$Z_STREAM_ERROR$2;\n    const s = strm.state;\n    const wrap = s.wrap;\n    if (wrap === 2 || wrap === 1 && s.status !== $a39eeb69bf620de6$var$INIT_STATE || s.lookahead) return $a39eeb69bf620de6$var$Z_STREAM_ERROR$2;\n    /* when using zlib wrappers, compute Adler-32 for provided dictionary */ if (wrap === 1) /* adler32(strm->adler, dictionary, dictLength); */ strm.adler = $a39eeb69bf620de6$var$adler32_1(strm.adler, dictionary, dictLength, 0);\n    s.wrap = 0; /* avoid computing Adler-32 in read_buf */ \n    /* if dictionary would fill window, just replace the history */ if (dictLength >= s.w_size) {\n        if (wrap === 0) {\n            /*** CLEAR_HASH(s); ***/ $a39eeb69bf620de6$var$zero(s.head); // Fill with NIL (= 0);\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n        }\n        /* use the tail */ // dictionary = dictionary.slice(dictLength - s.w_size);\n        let tmpDict = new Uint8Array(s.w_size);\n        tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n        dictionary = tmpDict;\n        dictLength = s.w_size;\n    }\n    /* insert dictionary into window and hash */ const avail = strm.avail_in;\n    const next = strm.next_in;\n    const input = strm.input;\n    strm.avail_in = dictLength;\n    strm.next_in = 0;\n    strm.input = dictionary;\n    $a39eeb69bf620de6$var$fill_window(s);\n    while(s.lookahead >= $a39eeb69bf620de6$var$MIN_MATCH){\n        let str = s.strstart;\n        let n = s.lookahead - ($a39eeb69bf620de6$var$MIN_MATCH - 1);\n        do {\n            /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */ s.ins_h = $a39eeb69bf620de6$var$HASH(s, s.ins_h, s.window[str + $a39eeb69bf620de6$var$MIN_MATCH - 1]);\n            s.prev[str & s.w_mask] = s.head[s.ins_h];\n            s.head[s.ins_h] = str;\n            str++;\n        }while (--n);\n        s.strstart = str;\n        s.lookahead = $a39eeb69bf620de6$var$MIN_MATCH - 1;\n        $a39eeb69bf620de6$var$fill_window(s);\n    }\n    s.strstart += s.lookahead;\n    s.block_start = s.strstart;\n    s.insert = s.lookahead;\n    s.lookahead = 0;\n    s.match_length = s.prev_length = $a39eeb69bf620de6$var$MIN_MATCH - 1;\n    s.match_available = 0;\n    strm.next_in = next;\n    strm.input = input;\n    strm.avail_in = avail;\n    s.wrap = wrap;\n    return $a39eeb69bf620de6$var$Z_OK$3;\n};\nvar $a39eeb69bf620de6$var$deflateInit_1 = $a39eeb69bf620de6$var$deflateInit;\nvar $a39eeb69bf620de6$var$deflateInit2_1 = $a39eeb69bf620de6$var$deflateInit2;\nvar $a39eeb69bf620de6$var$deflateReset_1 = $a39eeb69bf620de6$var$deflateReset;\nvar $a39eeb69bf620de6$var$deflateResetKeep_1 = $a39eeb69bf620de6$var$deflateResetKeep;\nvar $a39eeb69bf620de6$var$deflateSetHeader_1 = $a39eeb69bf620de6$var$deflateSetHeader;\nvar $a39eeb69bf620de6$var$deflate_2$1 = $a39eeb69bf620de6$var$deflate$2;\nvar $a39eeb69bf620de6$var$deflateEnd_1 = $a39eeb69bf620de6$var$deflateEnd;\nvar $a39eeb69bf620de6$var$deflateSetDictionary_1 = $a39eeb69bf620de6$var$deflateSetDictionary;\nvar $a39eeb69bf620de6$var$deflateInfo = \"pako deflate (from Nodeca project)\";\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/ var $a39eeb69bf620de6$var$deflate_1$2 = {\n    deflateInit: $a39eeb69bf620de6$var$deflateInit_1,\n    deflateInit2: $a39eeb69bf620de6$var$deflateInit2_1,\n    deflateReset: $a39eeb69bf620de6$var$deflateReset_1,\n    deflateResetKeep: $a39eeb69bf620de6$var$deflateResetKeep_1,\n    deflateSetHeader: $a39eeb69bf620de6$var$deflateSetHeader_1,\n    deflate: $a39eeb69bf620de6$var$deflate_2$1,\n    deflateEnd: $a39eeb69bf620de6$var$deflateEnd_1,\n    deflateSetDictionary: $a39eeb69bf620de6$var$deflateSetDictionary_1,\n    deflateInfo: $a39eeb69bf620de6$var$deflateInfo\n};\nconst $a39eeb69bf620de6$var$_has = (obj, key)=>{\n    return Object.prototype.hasOwnProperty.call(obj, key);\n};\nvar $a39eeb69bf620de6$var$assign = function(obj /*from1, from2, from3, ...*/ ) {\n    const sources = Array.prototype.slice.call(arguments, 1);\n    while(sources.length){\n        const source = sources.shift();\n        if (!source) continue;\n        if (typeof source !== \"object\") throw new TypeError(source + \"must be non-object\");\n        for(const p in source)if ($a39eeb69bf620de6$var$_has(source, p)) obj[p] = source[p];\n    }\n    return obj;\n};\n// Join array of chunks to single array.\nvar $a39eeb69bf620de6$var$flattenChunks = (chunks)=>{\n    // calculate data length\n    let len = 0;\n    for(let i = 0, l = chunks.length; i < l; i++)len += chunks[i].length;\n    // join chunks\n    const result = new Uint8Array(len);\n    for(let i = 0, pos = 0, l = chunks.length; i < l; i++){\n        let chunk = chunks[i];\n        result.set(chunk, pos);\n        pos += chunk.length;\n    }\n    return result;\n};\nvar $a39eeb69bf620de6$var$common = {\n    assign: $a39eeb69bf620de6$var$assign,\n    flattenChunks: $a39eeb69bf620de6$var$flattenChunks\n};\n// String encode/decode helpers\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet $a39eeb69bf620de6$var$STR_APPLY_UIA_OK = true;\ntry {\n    String.fromCharCode.apply(null, new Uint8Array(1));\n} catch (__) {\n    $a39eeb69bf620de6$var$STR_APPLY_UIA_OK = false;\n}\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst $a39eeb69bf620de6$var$_utf8len = new Uint8Array(256);\nfor(let q = 0; q < 256; q++)$a39eeb69bf620de6$var$_utf8len[q] = q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1;\n$a39eeb69bf620de6$var$_utf8len[254] = $a39eeb69bf620de6$var$_utf8len[254] = 1; // Invalid sequence start\n// convert string to array (typed, when possible)\nvar $a39eeb69bf620de6$var$string2buf = (str)=>{\n    if (typeof TextEncoder === \"function\" && TextEncoder.prototype.encode) return new TextEncoder().encode(str);\n    let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n    // count binary size\n    for(m_pos = 0; m_pos < str_len; m_pos++){\n        c = str.charCodeAt(m_pos);\n        if ((c & 0xfc00) === 0xd800 && m_pos + 1 < str_len) {\n            c2 = str.charCodeAt(m_pos + 1);\n            if ((c2 & 0xfc00) === 0xdc00) {\n                c = 0x10000 + (c - 0xd800 << 10) + (c2 - 0xdc00);\n                m_pos++;\n            }\n        }\n        buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n    }\n    // allocate buffer\n    buf = new Uint8Array(buf_len);\n    // convert\n    for(i = 0, m_pos = 0; i < buf_len; m_pos++){\n        c = str.charCodeAt(m_pos);\n        if ((c & 0xfc00) === 0xd800 && m_pos + 1 < str_len) {\n            c2 = str.charCodeAt(m_pos + 1);\n            if ((c2 & 0xfc00) === 0xdc00) {\n                c = 0x10000 + (c - 0xd800 << 10) + (c2 - 0xdc00);\n                m_pos++;\n            }\n        }\n        if (c < 0x80) /* one byte */ buf[i++] = c;\n        else if (c < 0x800) {\n            /* two bytes */ buf[i++] = 0xC0 | c >>> 6;\n            buf[i++] = 0x80 | c & 0x3f;\n        } else if (c < 0x10000) {\n            /* three bytes */ buf[i++] = 0xE0 | c >>> 12;\n            buf[i++] = 0x80 | c >>> 6 & 0x3f;\n            buf[i++] = 0x80 | c & 0x3f;\n        } else {\n            /* four bytes */ buf[i++] = 0xf0 | c >>> 18;\n            buf[i++] = 0x80 | c >>> 12 & 0x3f;\n            buf[i++] = 0x80 | c >>> 6 & 0x3f;\n            buf[i++] = 0x80 | c & 0x3f;\n        }\n    }\n    return buf;\n};\n// Helper\nconst $a39eeb69bf620de6$var$buf2binstring = (buf, len)=>{\n    // On Chrome, the arguments in a function call that are allowed is `65534`.\n    // If the length of the buffer is smaller than that, we can use this optimization,\n    // otherwise we will take a slower path.\n    if (len < 65534) {\n        if (buf.subarray && $a39eeb69bf620de6$var$STR_APPLY_UIA_OK) return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n    let result = \"\";\n    for(let i = 0; i < len; i++)result += String.fromCharCode(buf[i]);\n    return result;\n};\n// convert array to string\nvar $a39eeb69bf620de6$var$buf2string = (buf, max)=>{\n    const len = max || buf.length;\n    if (typeof TextDecoder === \"function\" && TextDecoder.prototype.decode) return new TextDecoder().decode(buf.subarray(0, max));\n    let i, out;\n    // Reserve max possible length (2 words per char)\n    // NB: by unknown reasons, Array is significantly faster for\n    //     String.fromCharCode.apply than Uint16Array.\n    const utf16buf = new Array(len * 2);\n    for(out = 0, i = 0; i < len;){\n        let c = buf[i++];\n        // quick process ascii\n        if (c < 0x80) {\n            utf16buf[out++] = c;\n            continue;\n        }\n        let c_len = $a39eeb69bf620de6$var$_utf8len[c];\n        // skip 5 & 6 byte codes\n        if (c_len > 4) {\n            utf16buf[out++] = 0xfffd;\n            i += c_len - 1;\n            continue;\n        }\n        // apply mask on first byte\n        c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n        // join the rest\n        while(c_len > 1 && i < len){\n            c = c << 6 | buf[i++] & 0x3f;\n            c_len--;\n        }\n        // terminated by end of string?\n        if (c_len > 1) {\n            utf16buf[out++] = 0xfffd;\n            continue;\n        }\n        if (c < 0x10000) utf16buf[out++] = c;\n        else {\n            c -= 0x10000;\n            utf16buf[out++] = 0xd800 | c >> 10 & 0x3ff;\n            utf16buf[out++] = 0xdc00 | c & 0x3ff;\n        }\n    }\n    return $a39eeb69bf620de6$var$buf2binstring(utf16buf, out);\n};\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar $a39eeb69bf620de6$var$utf8border = (buf, max)=>{\n    max = max || buf.length;\n    if (max > buf.length) max = buf.length;\n    // go back from last position, until start of sequence found\n    let pos = max - 1;\n    while(pos >= 0 && (buf[pos] & 0xC0) === 0x80)pos--;\n    // Very small and broken sequence,\n    // return max, because we should return something anyway.\n    if (pos < 0) return max;\n    // If we came to start of buffer - that means buffer is too small,\n    // return max too.\n    if (pos === 0) return max;\n    return pos + $a39eeb69bf620de6$var$_utf8len[buf[pos]] > max ? pos : max;\n};\nvar $a39eeb69bf620de6$var$strings = {\n    string2buf: $a39eeb69bf620de6$var$string2buf,\n    buf2string: $a39eeb69bf620de6$var$buf2string,\n    utf8border: $a39eeb69bf620de6$var$utf8border\n};\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\nfunction $a39eeb69bf620de6$var$ZStream() {\n    /* next input byte */ this.input = null; // JS specific, because we have no pointers\n    this.next_in = 0;\n    /* number of bytes available at input */ this.avail_in = 0;\n    /* total number of input bytes read so far */ this.total_in = 0;\n    /* next output byte should be put there */ this.output = null; // JS specific, because we have no pointers\n    this.next_out = 0;\n    /* remaining free space at output */ this.avail_out = 0;\n    /* total number of bytes output so far */ this.total_out = 0;\n    /* last error message, NULL if no error */ this.msg = \"\" /*Z_NULL*/ ;\n    /* not visible by applications */ this.state = null;\n    /* best guess about the data type: binary or text */ this.data_type = 2 /*Z_UNKNOWN*/ ;\n    /* adler32 value of the uncompressed data */ this.adler = 0;\n}\nvar $a39eeb69bf620de6$var$zstream = $a39eeb69bf620de6$var$ZStream;\nconst $a39eeb69bf620de6$var$toString$1 = Object.prototype.toString;\n/* Public constants ==========================================================*/ /* ===========================================================================*/ const { Z_NO_FLUSH: $a39eeb69bf620de6$var$Z_NO_FLUSH$1, Z_SYNC_FLUSH: $a39eeb69bf620de6$var$Z_SYNC_FLUSH, Z_FULL_FLUSH: $a39eeb69bf620de6$var$Z_FULL_FLUSH, Z_FINISH: $a39eeb69bf620de6$var$Z_FINISH$2, Z_OK: $a39eeb69bf620de6$var$Z_OK$2, Z_STREAM_END: $a39eeb69bf620de6$var$Z_STREAM_END$2, Z_DEFAULT_COMPRESSION: $a39eeb69bf620de6$var$Z_DEFAULT_COMPRESSION, Z_DEFAULT_STRATEGY: $a39eeb69bf620de6$var$Z_DEFAULT_STRATEGY, Z_DEFLATED: $a39eeb69bf620de6$var$Z_DEFLATED$1 } = $a39eeb69bf620de6$var$constants$2;\n/* ===========================================================================*/ /**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/ /* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/ /**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/ /**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/ /**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/ /**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/ function $a39eeb69bf620de6$var$Deflate$1(options) {\n    this.options = $a39eeb69bf620de6$var$common.assign({\n        level: $a39eeb69bf620de6$var$Z_DEFAULT_COMPRESSION,\n        method: $a39eeb69bf620de6$var$Z_DEFLATED$1,\n        chunkSize: 16384,\n        windowBits: 15,\n        memLevel: 8,\n        strategy: $a39eeb69bf620de6$var$Z_DEFAULT_STRATEGY\n    }, options || {});\n    let opt = this.options;\n    if (opt.raw && opt.windowBits > 0) opt.windowBits = -opt.windowBits;\n    else if (opt.gzip && opt.windowBits > 0 && opt.windowBits < 16) opt.windowBits += 16;\n    this.err = 0; // error code, if happens (0 = Z_OK)\n    this.msg = \"\"; // error message\n    this.ended = false; // used to avoid multiple onEnd() calls\n    this.chunks = []; // chunks of compressed data\n    this.strm = new $a39eeb69bf620de6$var$zstream();\n    this.strm.avail_out = 0;\n    let status = $a39eeb69bf620de6$var$deflate_1$2.deflateInit2(this.strm, opt.level, opt.method, opt.windowBits, opt.memLevel, opt.strategy);\n    if (status !== $a39eeb69bf620de6$var$Z_OK$2) throw new Error($a39eeb69bf620de6$var$messages[status]);\n    if (opt.header) $a39eeb69bf620de6$var$deflate_1$2.deflateSetHeader(this.strm, opt.header);\n    if (opt.dictionary) {\n        let dict;\n        // Convert data if needed\n        if (typeof opt.dictionary === \"string\") // If we need to compress text, change encoding to utf8.\n        dict = $a39eeb69bf620de6$var$strings.string2buf(opt.dictionary);\n        else if ($a39eeb69bf620de6$var$toString$1.call(opt.dictionary) === \"[object ArrayBuffer]\") dict = new Uint8Array(opt.dictionary);\n        else dict = opt.dictionary;\n        status = $a39eeb69bf620de6$var$deflate_1$2.deflateSetDictionary(this.strm, dict);\n        if (status !== $a39eeb69bf620de6$var$Z_OK$2) throw new Error($a39eeb69bf620de6$var$messages[status]);\n        this._dict_set = true;\n    }\n}\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/ $a39eeb69bf620de6$var$Deflate$1.prototype.push = function(data, flush_mode) {\n    const strm = this.strm;\n    const chunkSize = this.options.chunkSize;\n    let status, _flush_mode;\n    if (this.ended) return false;\n    if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n    else _flush_mode = flush_mode === true ? $a39eeb69bf620de6$var$Z_FINISH$2 : $a39eeb69bf620de6$var$Z_NO_FLUSH$1;\n    // Convert data if needed\n    if (typeof data === \"string\") // If we need to compress text, change encoding to utf8.\n    strm.input = $a39eeb69bf620de6$var$strings.string2buf(data);\n    else if ($a39eeb69bf620de6$var$toString$1.call(data) === \"[object ArrayBuffer]\") strm.input = new Uint8Array(data);\n    else strm.input = data;\n    strm.next_in = 0;\n    strm.avail_in = strm.input.length;\n    for(;;){\n        if (strm.avail_out === 0) {\n            strm.output = new Uint8Array(chunkSize);\n            strm.next_out = 0;\n            strm.avail_out = chunkSize;\n        }\n        // Make sure avail_out > 6 to avoid repeating markers\n        if ((_flush_mode === $a39eeb69bf620de6$var$Z_SYNC_FLUSH || _flush_mode === $a39eeb69bf620de6$var$Z_FULL_FLUSH) && strm.avail_out <= 6) {\n            this.onData(strm.output.subarray(0, strm.next_out));\n            strm.avail_out = 0;\n            continue;\n        }\n        status = $a39eeb69bf620de6$var$deflate_1$2.deflate(strm, _flush_mode);\n        // Ended => flush and finish\n        if (status === $a39eeb69bf620de6$var$Z_STREAM_END$2) {\n            if (strm.next_out > 0) this.onData(strm.output.subarray(0, strm.next_out));\n            status = $a39eeb69bf620de6$var$deflate_1$2.deflateEnd(this.strm);\n            this.onEnd(status);\n            this.ended = true;\n            return status === $a39eeb69bf620de6$var$Z_OK$2;\n        }\n        // Flush if out buffer full\n        if (strm.avail_out === 0) {\n            this.onData(strm.output);\n            continue;\n        }\n        // Flush if requested and has data\n        if (_flush_mode > 0 && strm.next_out > 0) {\n            this.onData(strm.output.subarray(0, strm.next_out));\n            strm.avail_out = 0;\n            continue;\n        }\n        if (strm.avail_in === 0) break;\n    }\n    return true;\n};\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/ $a39eeb69bf620de6$var$Deflate$1.prototype.onData = function(chunk) {\n    this.chunks.push(chunk);\n};\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/ $a39eeb69bf620de6$var$Deflate$1.prototype.onEnd = function(status) {\n    // On success - join\n    if (status === $a39eeb69bf620de6$var$Z_OK$2) this.result = $a39eeb69bf620de6$var$common.flattenChunks(this.chunks);\n    this.chunks = [];\n    this.err = status;\n    this.msg = this.strm.msg;\n};\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/ function $a39eeb69bf620de6$var$deflate$1(input, options) {\n    const deflator = new $a39eeb69bf620de6$var$Deflate$1(options);\n    deflator.push(input, true);\n    // That will never happens, if you don't cheat with options :)\n    if (deflator.err) throw deflator.msg || $a39eeb69bf620de6$var$messages[deflator.err];\n    return deflator.result;\n}\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/ function $a39eeb69bf620de6$var$deflateRaw$1(input, options) {\n    options = options || {};\n    options.raw = true;\n    return $a39eeb69bf620de6$var$deflate$1(input, options);\n}\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/ function $a39eeb69bf620de6$var$gzip$1(input, options) {\n    options = options || {};\n    options.gzip = true;\n    return $a39eeb69bf620de6$var$deflate$1(input, options);\n}\nvar $a39eeb69bf620de6$var$Deflate_1$1 = $a39eeb69bf620de6$var$Deflate$1;\nvar $a39eeb69bf620de6$var$deflate_2 = $a39eeb69bf620de6$var$deflate$1;\nvar $a39eeb69bf620de6$var$deflateRaw_1$1 = $a39eeb69bf620de6$var$deflateRaw$1;\nvar $a39eeb69bf620de6$var$gzip_1$1 = $a39eeb69bf620de6$var$gzip$1;\nvar $a39eeb69bf620de6$var$constants$1 = $a39eeb69bf620de6$var$constants$2;\nvar $a39eeb69bf620de6$var$deflate_1$1 = {\n    Deflate: $a39eeb69bf620de6$var$Deflate_1$1,\n    deflate: $a39eeb69bf620de6$var$deflate_2,\n    deflateRaw: $a39eeb69bf620de6$var$deflateRaw_1$1,\n    gzip: $a39eeb69bf620de6$var$gzip_1$1,\n    constants: $a39eeb69bf620de6$var$constants$1\n};\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n// See state defs from inflate.js\nconst $a39eeb69bf620de6$var$BAD$1 = 16209; /* got a data error -- remain here until reset */ \nconst $a39eeb69bf620de6$var$TYPE$1 = 16191; /* i: waiting for type bits, including last-flag bit */ \n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */ var $a39eeb69bf620de6$var$inffast = function inflate_fast(strm, start) {\n    let _in; /* local strm.input */ \n    let last; /* have enough input while in < last */ \n    let _out; /* local strm.output */ \n    let beg; /* inflate()'s initial strm.output */ \n    let end; /* while out < end, enough space available */ \n    //#ifdef INFLATE_STRICT\n    let dmax; /* maximum distance from zlib header */ \n    //#endif\n    let wsize; /* window size or zero if not using window */ \n    let whave; /* valid bytes in the window */ \n    let wnext; /* window write index */ \n    // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n    let s_window; /* allocated sliding window, if wsize != 0 */ \n    let hold; /* local strm.hold */ \n    let bits; /* local strm.bits */ \n    let lcode; /* local strm.lencode */ \n    let dcode; /* local strm.distcode */ \n    let lmask; /* mask for first level of length codes */ \n    let dmask; /* mask for first level of distance codes */ \n    let here; /* retrieved table entry */ \n    let op; /* code bits, operation, extra bits, or */ \n    /*  window position, window bytes to copy */ let len; /* match length, unused bytes */ \n    let dist; /* match distance */ \n    let from; /* where to copy match from */ \n    let from_source;\n    let input, output; // JS specific, because we have no pointers\n    /* copy state to local variables */ const state = strm.state;\n    //here = state.here;\n    _in = strm.next_in;\n    input = strm.input;\n    last = _in + (strm.avail_in - 5);\n    _out = strm.next_out;\n    output = strm.output;\n    beg = _out - (start - strm.avail_out);\n    end = _out + (strm.avail_out - 257);\n    //#ifdef INFLATE_STRICT\n    dmax = state.dmax;\n    //#endif\n    wsize = state.wsize;\n    whave = state.whave;\n    wnext = state.wnext;\n    s_window = state.window;\n    hold = state.hold;\n    bits = state.bits;\n    lcode = state.lencode;\n    dcode = state.distcode;\n    lmask = (1 << state.lenbits) - 1;\n    dmask = (1 << state.distbits) - 1;\n    /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */ top: do {\n        if (bits < 15) {\n            hold += input[_in++] << bits;\n            bits += 8;\n            hold += input[_in++] << bits;\n            bits += 8;\n        }\n        here = lcode[hold & lmask];\n        dolen: for(;;){\n            op = here >>> 24 /*here.bits*/ ;\n            hold >>>= op;\n            bits -= op;\n            op = here >>> 16 & 0xff /*here.op*/ ;\n            if (op === 0) //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n            //        \"inflate:         literal '%c'\\n\" :\n            //        \"inflate:         literal 0x%02x\\n\", here.val));\n            output[_out++] = here & 0xffff /*here.val*/ ;\n            else if (op & 16) {\n                len = here & 0xffff /*here.val*/ ;\n                op &= 15; /* number of extra bits */ \n                if (op) {\n                    if (bits < op) {\n                        hold += input[_in++] << bits;\n                        bits += 8;\n                    }\n                    len += hold & (1 << op) - 1;\n                    hold >>>= op;\n                    bits -= op;\n                }\n                //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n                if (bits < 15) {\n                    hold += input[_in++] << bits;\n                    bits += 8;\n                    hold += input[_in++] << bits;\n                    bits += 8;\n                }\n                here = dcode[hold & dmask];\n                dodist: for(;;){\n                    op = here >>> 24 /*here.bits*/ ;\n                    hold >>>= op;\n                    bits -= op;\n                    op = here >>> 16 & 0xff /*here.op*/ ;\n                    if (op & 16) {\n                        dist = here & 0xffff /*here.val*/ ;\n                        op &= 15; /* number of extra bits */ \n                        if (bits < op) {\n                            hold += input[_in++] << bits;\n                            bits += 8;\n                            if (bits < op) {\n                                hold += input[_in++] << bits;\n                                bits += 8;\n                            }\n                        }\n                        dist += hold & (1 << op) - 1;\n                        //#ifdef INFLATE_STRICT\n                        if (dist > dmax) {\n                            strm.msg = \"invalid distance too far back\";\n                            state.mode = $a39eeb69bf620de6$var$BAD$1;\n                            break top;\n                        }\n                        //#endif\n                        hold >>>= op;\n                        bits -= op;\n                        //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n                        op = _out - beg; /* max distance in output */ \n                        if (dist > op) {\n                            op = dist - op; /* distance back in window */ \n                            if (op > whave) {\n                                if (state.sane) {\n                                    strm.msg = \"invalid distance too far back\";\n                                    state.mode = $a39eeb69bf620de6$var$BAD$1;\n                                    break top;\n                                }\n                            }\n                            from = 0; // window index\n                            from_source = s_window;\n                            if (wnext === 0) {\n                                from += wsize - op;\n                                if (op < len) {\n                                    len -= op;\n                                    do output[_out++] = s_window[from++];\n                                    while (--op);\n                                    from = _out - dist; /* rest from output */ \n                                    from_source = output;\n                                }\n                            } else if (wnext < op) {\n                                from += wsize + wnext - op;\n                                op -= wnext;\n                                if (op < len) {\n                                    len -= op;\n                                    do output[_out++] = s_window[from++];\n                                    while (--op);\n                                    from = 0;\n                                    if (wnext < len) {\n                                        op = wnext;\n                                        len -= op;\n                                        do output[_out++] = s_window[from++];\n                                        while (--op);\n                                        from = _out - dist; /* rest from output */ \n                                        from_source = output;\n                                    }\n                                }\n                            } else {\n                                from += wnext - op;\n                                if (op < len) {\n                                    len -= op;\n                                    do output[_out++] = s_window[from++];\n                                    while (--op);\n                                    from = _out - dist; /* rest from output */ \n                                    from_source = output;\n                                }\n                            }\n                            while(len > 2){\n                                output[_out++] = from_source[from++];\n                                output[_out++] = from_source[from++];\n                                output[_out++] = from_source[from++];\n                                len -= 3;\n                            }\n                            if (len) {\n                                output[_out++] = from_source[from++];\n                                if (len > 1) output[_out++] = from_source[from++];\n                            }\n                        } else {\n                            from = _out - dist; /* copy direct from output */ \n                            do {\n                                output[_out++] = output[from++];\n                                output[_out++] = output[from++];\n                                output[_out++] = output[from++];\n                                len -= 3;\n                            }while (len > 2);\n                            if (len) {\n                                output[_out++] = output[from++];\n                                if (len > 1) output[_out++] = output[from++];\n                            }\n                        }\n                    } else if ((op & 64) === 0) {\n                        here = dcode[(here & 0xffff) + (hold & (1 << op) - 1)];\n                        continue dodist;\n                    } else {\n                        strm.msg = \"invalid distance code\";\n                        state.mode = $a39eeb69bf620de6$var$BAD$1;\n                        break top;\n                    }\n                    break; // need to emulate goto via \"continue\"\n                }\n            } else if ((op & 64) === 0) {\n                here = lcode[(here & 0xffff) + (hold & (1 << op) - 1)];\n                continue dolen;\n            } else if (op & 32) {\n                //Tracevv((stderr, \"inflate:         end of block\\n\"));\n                state.mode = $a39eeb69bf620de6$var$TYPE$1;\n                break top;\n            } else {\n                strm.msg = \"invalid literal/length code\";\n                state.mode = $a39eeb69bf620de6$var$BAD$1;\n                break top;\n            }\n            break; // need to emulate goto via \"continue\"\n        }\n    }while (_in < last && _out < end);\n    /* return unused bytes (on entry, bits < 8, so in won't go too far back) */ len = bits >> 3;\n    _in -= len;\n    bits -= len << 3;\n    hold &= (1 << bits) - 1;\n    /* update state and return */ strm.next_in = _in;\n    strm.next_out = _out;\n    strm.avail_in = _in < last ? 5 + (last - _in) : 5 - (_in - last);\n    strm.avail_out = _out < end ? 257 + (end - _out) : 257 - (_out - end);\n    state.hold = hold;\n    state.bits = bits;\n    return;\n};\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\nconst $a39eeb69bf620de6$var$MAXBITS = 15;\nconst $a39eeb69bf620de6$var$ENOUGH_LENS$1 = 852;\nconst $a39eeb69bf620de6$var$ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\nconst $a39eeb69bf620de6$var$CODES$1 = 0;\nconst $a39eeb69bf620de6$var$LENS$1 = 1;\nconst $a39eeb69bf620de6$var$DISTS$1 = 2;\nconst $a39eeb69bf620de6$var$lbase = new Uint16Array([\n    /* Length codes 257..285 base */ 3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    13,\n    15,\n    17,\n    19,\n    23,\n    27,\n    31,\n    35,\n    43,\n    51,\n    59,\n    67,\n    83,\n    99,\n    115,\n    131,\n    163,\n    195,\n    227,\n    258,\n    0,\n    0\n]);\nconst $a39eeb69bf620de6$var$lext = new Uint8Array([\n    /* Length codes 257..285 extra */ 16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    16,\n    17,\n    17,\n    17,\n    17,\n    18,\n    18,\n    18,\n    18,\n    19,\n    19,\n    19,\n    19,\n    20,\n    20,\n    20,\n    20,\n    21,\n    21,\n    21,\n    21,\n    16,\n    72,\n    78\n]);\nconst $a39eeb69bf620de6$var$dbase = new Uint16Array([\n    /* Distance codes 0..29 base */ 1,\n    2,\n    3,\n    4,\n    5,\n    7,\n    9,\n    13,\n    17,\n    25,\n    33,\n    49,\n    65,\n    97,\n    129,\n    193,\n    257,\n    385,\n    513,\n    769,\n    1025,\n    1537,\n    2049,\n    3073,\n    4097,\n    6145,\n    8193,\n    12289,\n    16385,\n    24577,\n    0,\n    0\n]);\nconst $a39eeb69bf620de6$var$dext = new Uint8Array([\n    /* Distance codes 0..29 extra */ 16,\n    16,\n    16,\n    16,\n    17,\n    17,\n    18,\n    18,\n    19,\n    19,\n    20,\n    20,\n    21,\n    21,\n    22,\n    22,\n    23,\n    23,\n    24,\n    24,\n    25,\n    25,\n    26,\n    26,\n    27,\n    27,\n    28,\n    28,\n    29,\n    29,\n    64,\n    64\n]);\nconst $a39eeb69bf620de6$var$inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts)=>{\n    const bits = opts.bits;\n    //here = opts.here; /* table entry for duplication */\n    let len = 0; /* a code's length in bits */ \n    let sym = 0; /* index of code symbols */ \n    let min = 0, max = 0; /* minimum and maximum code lengths */ \n    let root = 0; /* number of index bits for root table */ \n    let curr = 0; /* number of index bits for current table */ \n    let drop = 0; /* code bits to drop for sub-table */ \n    let left = 0; /* number of prefix codes available */ \n    let used = 0; /* code entries in table used */ \n    let huff = 0; /* Huffman code */ \n    let incr; /* for incrementing code, index */ \n    let fill; /* index for replicating entries */ \n    let low; /* low bits for current root entry */ \n    let mask; /* mask for low root bits */ \n    let next; /* next available space in table */ \n    let base = null; /* base value table to use */ \n    //  let shoextra;    /* extra bits table to use */\n    let match; /* use base and extra for symbol >= match */ \n    const count = new Uint16Array($a39eeb69bf620de6$var$MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n    const offs = new Uint16Array($a39eeb69bf620de6$var$MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n    let extra = null;\n    let here_bits, here_op, here_val;\n    /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */ /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */ for(len = 0; len <= $a39eeb69bf620de6$var$MAXBITS; len++)count[len] = 0;\n    for(sym = 0; sym < codes; sym++)count[lens[lens_index + sym]]++;\n    /* bound code lengths, force root to be within code lengths */ root = bits;\n    for(max = $a39eeb69bf620de6$var$MAXBITS; max >= 1; max--){\n        if (count[max] !== 0) break;\n    }\n    if (root > max) root = max;\n    if (max === 0) {\n        //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n        //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n        //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n        table[table_index++] = 20971520;\n        //table.op[opts.table_index] = 64;\n        //table.bits[opts.table_index] = 1;\n        //table.val[opts.table_index++] = 0;\n        table[table_index++] = 20971520;\n        opts.bits = 1;\n        return 0; /* no symbols, but wait for decoding to report error */ \n    }\n    for(min = 1; min < max; min++){\n        if (count[min] !== 0) break;\n    }\n    if (root < min) root = min;\n    /* check for an over-subscribed or incomplete set of lengths */ left = 1;\n    for(len = 1; len <= $a39eeb69bf620de6$var$MAXBITS; len++){\n        left <<= 1;\n        left -= count[len];\n        if (left < 0) return -1;\n         /* over-subscribed */ \n    }\n    if (left > 0 && (type === $a39eeb69bf620de6$var$CODES$1 || max !== 1)) return -1; /* incomplete set */ \n    /* generate offsets into symbol table for each length for sorting */ offs[1] = 0;\n    for(len = 1; len < $a39eeb69bf620de6$var$MAXBITS; len++)offs[len + 1] = offs[len] + count[len];\n    /* sort symbols by length, by symbol order within each length */ for(sym = 0; sym < codes; sym++)if (lens[lens_index + sym] !== 0) work[offs[lens[lens_index + sym]]++] = sym;\n    /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */ /* set up for code type */ // poor man optimization - use if-else instead of switch,\n    // to avoid deopts in old v8\n    if (type === $a39eeb69bf620de6$var$CODES$1) {\n        base = extra = work; /* dummy value--not used */ \n        match = 20;\n    } else if (type === $a39eeb69bf620de6$var$LENS$1) {\n        base = $a39eeb69bf620de6$var$lbase;\n        extra = $a39eeb69bf620de6$var$lext;\n        match = 257;\n    } else {\n        base = $a39eeb69bf620de6$var$dbase;\n        extra = $a39eeb69bf620de6$var$dext;\n        match = 0;\n    }\n    /* initialize opts for loop */ huff = 0; /* starting code */ \n    sym = 0; /* starting code symbol */ \n    len = min; /* starting code length */ \n    next = table_index; /* current table to fill in */ \n    curr = root; /* current table index bits */ \n    drop = 0; /* current bits to drop from code for index */ \n    low = -1; /* trigger new sub-table when len > root */ \n    used = 1 << root; /* use root table entries */ \n    mask = used - 1; /* mask for comparing low */ \n    /* check available table space */ if (type === $a39eeb69bf620de6$var$LENS$1 && used > $a39eeb69bf620de6$var$ENOUGH_LENS$1 || type === $a39eeb69bf620de6$var$DISTS$1 && used > $a39eeb69bf620de6$var$ENOUGH_DISTS$1) return 1;\n    /* process all codes and make table entries */ for(;;){\n        /* create table entry */ here_bits = len - drop;\n        if (work[sym] + 1 < match) {\n            here_op = 0;\n            here_val = work[sym];\n        } else if (work[sym] >= match) {\n            here_op = extra[work[sym] - match];\n            here_val = base[work[sym] - match];\n        } else {\n            here_op = 96; /* end of block */ \n            here_val = 0;\n        }\n        /* replicate for those indices with low len bits equal to huff */ incr = 1 << len - drop;\n        fill = 1 << curr;\n        min = fill; /* save offset to next table */ \n        do {\n            fill -= incr;\n            table[next + (huff >> drop) + fill] = here_bits << 24 | here_op << 16 | here_val | 0;\n        }while (fill !== 0);\n        /* backwards increment the len-bit code huff */ incr = 1 << len - 1;\n        while(huff & incr)incr >>= 1;\n        if (incr !== 0) {\n            huff &= incr - 1;\n            huff += incr;\n        } else huff = 0;\n        /* go to next symbol, update count, len */ sym++;\n        if (--count[len] === 0) {\n            if (len === max) break;\n            len = lens[lens_index + work[sym]];\n        }\n        /* create new sub-table if needed */ if (len > root && (huff & mask) !== low) {\n            /* if first time, transition to sub-tables */ if (drop === 0) drop = root;\n            /* increment past last table */ next += min; /* here min is 1 << curr */ \n            /* determine length of next table */ curr = len - drop;\n            left = 1 << curr;\n            while(curr + drop < max){\n                left -= count[curr + drop];\n                if (left <= 0) break;\n                curr++;\n                left <<= 1;\n            }\n            /* check for enough space */ used += 1 << curr;\n            if (type === $a39eeb69bf620de6$var$LENS$1 && used > $a39eeb69bf620de6$var$ENOUGH_LENS$1 || type === $a39eeb69bf620de6$var$DISTS$1 && used > $a39eeb69bf620de6$var$ENOUGH_DISTS$1) return 1;\n            /* point entry in root table to sub-table */ low = huff & mask;\n            /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/ table[low] = root << 24 | curr << 16 | next - table_index | 0;\n        }\n    }\n    /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */ if (huff !== 0) //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = len - drop << 24 | 4194304;\n    /* set return parameters */ //opts.table_index += used;\n    opts.bits = root;\n    return 0;\n};\nvar $a39eeb69bf620de6$var$inftrees = $a39eeb69bf620de6$var$inflate_table;\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\nconst $a39eeb69bf620de6$var$CODES = 0;\nconst $a39eeb69bf620de6$var$LENS = 1;\nconst $a39eeb69bf620de6$var$DISTS = 2;\n/* Public constants ==========================================================*/ /* ===========================================================================*/ const { Z_FINISH: $a39eeb69bf620de6$var$Z_FINISH$1, Z_BLOCK: $a39eeb69bf620de6$var$Z_BLOCK, Z_TREES: $a39eeb69bf620de6$var$Z_TREES, Z_OK: $a39eeb69bf620de6$var$Z_OK$1, Z_STREAM_END: $a39eeb69bf620de6$var$Z_STREAM_END$1, Z_NEED_DICT: $a39eeb69bf620de6$var$Z_NEED_DICT$1, Z_STREAM_ERROR: $a39eeb69bf620de6$var$Z_STREAM_ERROR$1, Z_DATA_ERROR: $a39eeb69bf620de6$var$Z_DATA_ERROR$1, Z_MEM_ERROR: $a39eeb69bf620de6$var$Z_MEM_ERROR$1, Z_BUF_ERROR: $a39eeb69bf620de6$var$Z_BUF_ERROR, Z_DEFLATED: $a39eeb69bf620de6$var$Z_DEFLATED } = $a39eeb69bf620de6$var$constants$2;\n/* STATES ====================================================================*/ /* ===========================================================================*/ const $a39eeb69bf620de6$var$HEAD = 16180; /* i: waiting for magic header */ \nconst $a39eeb69bf620de6$var$FLAGS = 16181; /* i: waiting for method and flags (gzip) */ \nconst $a39eeb69bf620de6$var$TIME = 16182; /* i: waiting for modification time (gzip) */ \nconst $a39eeb69bf620de6$var$OS = 16183; /* i: waiting for extra flags and operating system (gzip) */ \nconst $a39eeb69bf620de6$var$EXLEN = 16184; /* i: waiting for extra length (gzip) */ \nconst $a39eeb69bf620de6$var$EXTRA = 16185; /* i: waiting for extra bytes (gzip) */ \nconst $a39eeb69bf620de6$var$NAME = 16186; /* i: waiting for end of file name (gzip) */ \nconst $a39eeb69bf620de6$var$COMMENT = 16187; /* i: waiting for end of comment (gzip) */ \nconst $a39eeb69bf620de6$var$HCRC = 16188; /* i: waiting for header crc (gzip) */ \nconst $a39eeb69bf620de6$var$DICTID = 16189; /* i: waiting for dictionary check value */ \nconst $a39eeb69bf620de6$var$DICT = 16190; /* waiting for inflateSetDictionary() call */ \nconst $a39eeb69bf620de6$var$TYPE = 16191; /* i: waiting for type bits, including last-flag bit */ \nconst $a39eeb69bf620de6$var$TYPEDO = 16192; /* i: same, but skip check to exit inflate on new block */ \nconst $a39eeb69bf620de6$var$STORED = 16193; /* i: waiting for stored size (length and complement) */ \nconst $a39eeb69bf620de6$var$COPY_ = 16194; /* i/o: same as COPY below, but only first time in */ \nconst $a39eeb69bf620de6$var$COPY = 16195; /* i/o: waiting for input or output to copy stored block */ \nconst $a39eeb69bf620de6$var$TABLE = 16196; /* i: waiting for dynamic block table lengths */ \nconst $a39eeb69bf620de6$var$LENLENS = 16197; /* i: waiting for code length code lengths */ \nconst $a39eeb69bf620de6$var$CODELENS = 16198; /* i: waiting for length/lit and distance code lengths */ \nconst $a39eeb69bf620de6$var$LEN_ = 16199; /* i: same as LEN below, but only first time in */ \nconst $a39eeb69bf620de6$var$LEN = 16200; /* i: waiting for length/lit/eob code */ \nconst $a39eeb69bf620de6$var$LENEXT = 16201; /* i: waiting for length extra bits */ \nconst $a39eeb69bf620de6$var$DIST = 16202; /* i: waiting for distance code */ \nconst $a39eeb69bf620de6$var$DISTEXT = 16203; /* i: waiting for distance extra bits */ \nconst $a39eeb69bf620de6$var$MATCH = 16204; /* o: waiting for output space to copy string */ \nconst $a39eeb69bf620de6$var$LIT = 16205; /* o: waiting for output space to write literal */ \nconst $a39eeb69bf620de6$var$CHECK = 16206; /* i: waiting for 32-bit check value */ \nconst $a39eeb69bf620de6$var$LENGTH = 16207; /* i: waiting for 32-bit length (gzip) */ \nconst $a39eeb69bf620de6$var$DONE = 16208; /* finished check, done -- remain here until reset */ \nconst $a39eeb69bf620de6$var$BAD = 16209; /* got a data error -- remain here until reset */ \nconst $a39eeb69bf620de6$var$MEM = 16210; /* got an inflate() memory error -- remain here until reset */ \nconst $a39eeb69bf620de6$var$SYNC = 16211; /* looking for synchronization bytes to restart inflate() */ \n/* ===========================================================================*/ const $a39eeb69bf620de6$var$ENOUGH_LENS = 852;\nconst $a39eeb69bf620de6$var$ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\nconst $a39eeb69bf620de6$var$MAX_WBITS = 15;\n/* 32K LZ77 window */ const $a39eeb69bf620de6$var$DEF_WBITS = $a39eeb69bf620de6$var$MAX_WBITS;\nconst $a39eeb69bf620de6$var$zswap32 = (q)=>{\n    return (q >>> 24 & 0xff) + (q >>> 8 & 0xff00) + ((q & 0xff00) << 8) + ((q & 0xff) << 24);\n};\nfunction $a39eeb69bf620de6$var$InflateState() {\n    this.strm = null; /* pointer back to this zlib stream */ \n    this.mode = 0; /* current inflate mode */ \n    this.last = false; /* true if processing last block */ \n    this.wrap = 0; /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */ \n    this.havedict = false; /* true if dictionary provided */ \n    this.flags = 0; /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */ \n    this.dmax = 0; /* zlib header max distance (INFLATE_STRICT) */ \n    this.check = 0; /* protected copy of check value */ \n    this.total = 0; /* protected copy of output count */ \n    // TODO: may be {}\n    this.head = null; /* where to save gzip header information */ \n    /* sliding window */ this.wbits = 0; /* log base 2 of requested window size */ \n    this.wsize = 0; /* window size or zero if not using window */ \n    this.whave = 0; /* valid bytes in the window */ \n    this.wnext = 0; /* window write index */ \n    this.window = null; /* allocated sliding window, if needed */ \n    /* bit accumulator */ this.hold = 0; /* input bit accumulator */ \n    this.bits = 0; /* number of bits in \"in\" */ \n    /* for string and stored block copying */ this.length = 0; /* literal or length of data to copy */ \n    this.offset = 0; /* distance back to copy string from */ \n    /* for table and code decoding */ this.extra = 0; /* extra bits needed */ \n    /* fixed and dynamic code tables */ this.lencode = null; /* starting table for length/literal codes */ \n    this.distcode = null; /* starting table for distance codes */ \n    this.lenbits = 0; /* index bits for lencode */ \n    this.distbits = 0; /* index bits for distcode */ \n    /* dynamic table building */ this.ncode = 0; /* number of code length code lengths */ \n    this.nlen = 0; /* number of length code lengths */ \n    this.ndist = 0; /* number of distance code lengths */ \n    this.have = 0; /* number of code lengths in lens[] */ \n    this.next = null; /* next available space in codes[] */ \n    this.lens = new Uint16Array(320); /* temporary storage for code lengths */ \n    this.work = new Uint16Array(288); /* work area for code table building */ \n    /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */ //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n    this.lendyn = null; /* dynamic table for length/literal codes (JS specific) */ \n    this.distdyn = null; /* dynamic table for distance codes (JS specific) */ \n    this.sane = 0; /* if false, allow invalid distance too far */ \n    this.back = 0; /* bits back of last unprocessed length/lit */ \n    this.was = 0; /* initial length of match */ \n}\nconst $a39eeb69bf620de6$var$inflateStateCheck = (strm)=>{\n    if (!strm) return 1;\n    const state = strm.state;\n    if (!state || state.strm !== strm || state.mode < $a39eeb69bf620de6$var$HEAD || state.mode > $a39eeb69bf620de6$var$SYNC) return 1;\n    return 0;\n};\nconst $a39eeb69bf620de6$var$inflateResetKeep = (strm)=>{\n    if ($a39eeb69bf620de6$var$inflateStateCheck(strm)) return $a39eeb69bf620de6$var$Z_STREAM_ERROR$1;\n    const state = strm.state;\n    strm.total_in = strm.total_out = state.total = 0;\n    strm.msg = \"\"; /*Z_NULL*/ \n    if (state.wrap) strm.adler = state.wrap & 1;\n    state.mode = $a39eeb69bf620de6$var$HEAD;\n    state.last = 0;\n    state.havedict = 0;\n    state.flags = -1;\n    state.dmax = 32768;\n    state.head = null /*Z_NULL*/ ;\n    state.hold = 0;\n    state.bits = 0;\n    //state.lencode = state.distcode = state.next = state.codes;\n    state.lencode = state.lendyn = new Int32Array($a39eeb69bf620de6$var$ENOUGH_LENS);\n    state.distcode = state.distdyn = new Int32Array($a39eeb69bf620de6$var$ENOUGH_DISTS);\n    state.sane = 1;\n    state.back = -1;\n    //Tracev((stderr, \"inflate: reset\\n\"));\n    return $a39eeb69bf620de6$var$Z_OK$1;\n};\nconst $a39eeb69bf620de6$var$inflateReset = (strm)=>{\n    if ($a39eeb69bf620de6$var$inflateStateCheck(strm)) return $a39eeb69bf620de6$var$Z_STREAM_ERROR$1;\n    const state = strm.state;\n    state.wsize = 0;\n    state.whave = 0;\n    state.wnext = 0;\n    return $a39eeb69bf620de6$var$inflateResetKeep(strm);\n};\nconst $a39eeb69bf620de6$var$inflateReset2 = (strm, windowBits)=>{\n    let wrap;\n    /* get the state */ if ($a39eeb69bf620de6$var$inflateStateCheck(strm)) return $a39eeb69bf620de6$var$Z_STREAM_ERROR$1;\n    const state = strm.state;\n    /* extract wrap request from windowBits parameter */ if (windowBits < 0) {\n        wrap = 0;\n        windowBits = -windowBits;\n    } else {\n        wrap = (windowBits >> 4) + 5;\n        if (windowBits < 48) windowBits &= 15;\n    }\n    /* set number of window bits, free window if different */ if (windowBits && (windowBits < 8 || windowBits > 15)) return $a39eeb69bf620de6$var$Z_STREAM_ERROR$1;\n    if (state.window !== null && state.wbits !== windowBits) state.window = null;\n    /* update state and reset the rest of it */ state.wrap = wrap;\n    state.wbits = windowBits;\n    return $a39eeb69bf620de6$var$inflateReset(strm);\n};\nconst $a39eeb69bf620de6$var$inflateInit2 = (strm, windowBits)=>{\n    if (!strm) return $a39eeb69bf620de6$var$Z_STREAM_ERROR$1;\n    //strm.msg = Z_NULL;                 /* in case we return an error */\n    const state = new $a39eeb69bf620de6$var$InflateState();\n    //if (state === Z_NULL) return Z_MEM_ERROR;\n    //Tracev((stderr, \"inflate: allocated\\n\"));\n    strm.state = state;\n    state.strm = strm;\n    state.window = null /*Z_NULL*/ ;\n    state.mode = $a39eeb69bf620de6$var$HEAD; /* to pass state test in inflateReset2() */ \n    const ret = $a39eeb69bf620de6$var$inflateReset2(strm, windowBits);\n    if (ret !== $a39eeb69bf620de6$var$Z_OK$1) strm.state = null /*Z_NULL*/ ;\n    return ret;\n};\nconst $a39eeb69bf620de6$var$inflateInit = (strm)=>{\n    return $a39eeb69bf620de6$var$inflateInit2(strm, $a39eeb69bf620de6$var$DEF_WBITS);\n};\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */ let $a39eeb69bf620de6$var$virgin = true;\nlet $a39eeb69bf620de6$var$lenfix, $a39eeb69bf620de6$var$distfix; // We have no pointers in JS, so keep tables separate\nconst $a39eeb69bf620de6$var$fixedtables = (state)=>{\n    /* build fixed huffman tables if first call (may not be thread safe) */ if ($a39eeb69bf620de6$var$virgin) {\n        $a39eeb69bf620de6$var$lenfix = new Int32Array(512);\n        $a39eeb69bf620de6$var$distfix = new Int32Array(32);\n        /* literal/length table */ let sym = 0;\n        while(sym < 144)state.lens[sym++] = 8;\n        while(sym < 256)state.lens[sym++] = 9;\n        while(sym < 280)state.lens[sym++] = 7;\n        while(sym < 288)state.lens[sym++] = 8;\n        $a39eeb69bf620de6$var$inftrees($a39eeb69bf620de6$var$LENS, state.lens, 0, 288, $a39eeb69bf620de6$var$lenfix, 0, state.work, {\n            bits: 9\n        });\n        /* distance table */ sym = 0;\n        while(sym < 32)state.lens[sym++] = 5;\n        $a39eeb69bf620de6$var$inftrees($a39eeb69bf620de6$var$DISTS, state.lens, 0, 32, $a39eeb69bf620de6$var$distfix, 0, state.work, {\n            bits: 5\n        });\n        /* do this just once */ $a39eeb69bf620de6$var$virgin = false;\n    }\n    state.lencode = $a39eeb69bf620de6$var$lenfix;\n    state.lenbits = 9;\n    state.distcode = $a39eeb69bf620de6$var$distfix;\n    state.distbits = 5;\n};\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */ const $a39eeb69bf620de6$var$updatewindow = (strm, src, end, copy)=>{\n    let dist;\n    const state = strm.state;\n    /* if it hasn't been done already, allocate space for the window */ if (state.window === null) {\n        state.wsize = 1 << state.wbits;\n        state.wnext = 0;\n        state.whave = 0;\n        state.window = new Uint8Array(state.wsize);\n    }\n    /* copy state->wsize or less output bytes into the circular window */ if (copy >= state.wsize) {\n        state.window.set(src.subarray(end - state.wsize, end), 0);\n        state.wnext = 0;\n        state.whave = state.wsize;\n    } else {\n        dist = state.wsize - state.wnext;\n        if (dist > copy) dist = copy;\n        //zmemcpy(state->window + state->wnext, end - copy, dist);\n        state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n        copy -= dist;\n        if (copy) {\n            //zmemcpy(state->window, end - copy, copy);\n            state.window.set(src.subarray(end - copy, end), 0);\n            state.wnext = copy;\n            state.whave = state.wsize;\n        } else {\n            state.wnext += dist;\n            if (state.wnext === state.wsize) state.wnext = 0;\n            if (state.whave < state.wsize) state.whave += dist;\n        }\n    }\n    return 0;\n};\nconst $a39eeb69bf620de6$var$inflate$2 = (strm, flush)=>{\n    let state;\n    let input, output; // input/output buffers\n    let next; /* next input INDEX */ \n    let put; /* next output INDEX */ \n    let have, left; /* available input and output */ \n    let hold; /* bit buffer */ \n    let bits; /* bits in bit buffer */ \n    let _in, _out; /* save starting available input and output */ \n    let copy; /* number of stored or match bytes to copy */ \n    let from; /* where to copy match bytes from */ \n    let from_source;\n    let here = 0; /* current decoding table entry */ \n    let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n    //let last;                   /* parent table entry */\n    let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n    let len; /* length to copy for repeats, bits to drop */ \n    let ret; /* return code */ \n    const hbuf = new Uint8Array(4); /* buffer for gzip header crc calculation */ \n    let opts;\n    let n; // temporary variable for NEED_BITS\n    const order = /* permutation of code lengths */ new Uint8Array([\n        16,\n        17,\n        18,\n        0,\n        8,\n        7,\n        9,\n        6,\n        10,\n        5,\n        11,\n        4,\n        12,\n        3,\n        13,\n        2,\n        14,\n        1,\n        15\n    ]);\n    if ($a39eeb69bf620de6$var$inflateStateCheck(strm) || !strm.output || !strm.input && strm.avail_in !== 0) return $a39eeb69bf620de6$var$Z_STREAM_ERROR$1;\n    state = strm.state;\n    if (state.mode === $a39eeb69bf620de6$var$TYPE) state.mode = $a39eeb69bf620de6$var$TYPEDO;\n     /* skip check */ \n    //--- LOAD() ---\n    put = strm.next_out;\n    output = strm.output;\n    left = strm.avail_out;\n    next = strm.next_in;\n    input = strm.input;\n    have = strm.avail_in;\n    hold = state.hold;\n    bits = state.bits;\n    //---\n    _in = have;\n    _out = left;\n    ret = $a39eeb69bf620de6$var$Z_OK$1;\n    inf_leave: for(;;)switch(state.mode){\n        case $a39eeb69bf620de6$var$HEAD:\n            if (state.wrap === 0) {\n                state.mode = $a39eeb69bf620de6$var$TYPEDO;\n                break;\n            }\n            //=== NEEDBITS(16);\n            while(bits < 16){\n                if (have === 0) break inf_leave;\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n            }\n            //===//\n            if (state.wrap & 2 && hold === 0x8b1f) {\n                if (state.wbits === 0) state.wbits = 15;\n                state.check = 0 /*crc32(0L, Z_NULL, 0)*/ ;\n                //=== CRC2(state.check, hold);\n                hbuf[0] = hold & 0xff;\n                hbuf[1] = hold >>> 8 & 0xff;\n                state.check = $a39eeb69bf620de6$var$crc32_1(state.check, hbuf, 2, 0);\n                //===//\n                //=== INITBITS();\n                hold = 0;\n                bits = 0;\n                //===//\n                state.mode = $a39eeb69bf620de6$var$FLAGS;\n                break;\n            }\n            if (state.head) state.head.done = false;\n            if (!(state.wrap & 1) || /* check if zlib header allowed */ (((hold & 0xff) << 8) + (hold >> 8)) % 31) {\n                strm.msg = \"incorrect header check\";\n                state.mode = $a39eeb69bf620de6$var$BAD;\n                break;\n            }\n            if ((hold & 0x0f) !== $a39eeb69bf620de6$var$Z_DEFLATED) {\n                strm.msg = \"unknown compression method\";\n                state.mode = $a39eeb69bf620de6$var$BAD;\n                break;\n            }\n            //--- DROPBITS(4) ---//\n            hold >>>= 4;\n            bits -= 4;\n            //---//\n            len = (hold & 0x0f) + 8;\n            if (state.wbits === 0) state.wbits = len;\n            if (len > 15 || len > state.wbits) {\n                strm.msg = \"invalid window size\";\n                state.mode = $a39eeb69bf620de6$var$BAD;\n                break;\n            }\n            // !!! pako patch. Force use `options.windowBits` if passed.\n            // Required to always use max window size by default.\n            state.dmax = 1 << state.wbits;\n            //state.dmax = 1 << len;\n            state.flags = 0; /* indicate zlib header */ \n            //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n            strm.adler = state.check = 1 /*adler32(0L, Z_NULL, 0)*/ ;\n            state.mode = hold & 0x200 ? $a39eeb69bf620de6$var$DICTID : $a39eeb69bf620de6$var$TYPE;\n            //=== INITBITS();\n            hold = 0;\n            bits = 0;\n            break;\n        case $a39eeb69bf620de6$var$FLAGS:\n            //=== NEEDBITS(16); */\n            while(bits < 16){\n                if (have === 0) break inf_leave;\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n            }\n            //===//\n            state.flags = hold;\n            if ((state.flags & 0xff) !== $a39eeb69bf620de6$var$Z_DEFLATED) {\n                strm.msg = \"unknown compression method\";\n                state.mode = $a39eeb69bf620de6$var$BAD;\n                break;\n            }\n            if (state.flags & 0xe000) {\n                strm.msg = \"unknown header flags set\";\n                state.mode = $a39eeb69bf620de6$var$BAD;\n                break;\n            }\n            if (state.head) state.head.text = hold >> 8 & 1;\n            if (state.flags & 0x0200 && state.wrap & 4) {\n                //=== CRC2(state.check, hold);\n                hbuf[0] = hold & 0xff;\n                hbuf[1] = hold >>> 8 & 0xff;\n                state.check = $a39eeb69bf620de6$var$crc32_1(state.check, hbuf, 2, 0);\n            //===//\n            }\n            //=== INITBITS();\n            hold = 0;\n            bits = 0;\n            //===//\n            state.mode = $a39eeb69bf620de6$var$TIME;\n        /* falls through */ case $a39eeb69bf620de6$var$TIME:\n            //=== NEEDBITS(32); */\n            while(bits < 32){\n                if (have === 0) break inf_leave;\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n            }\n            //===//\n            if (state.head) state.head.time = hold;\n            if (state.flags & 0x0200 && state.wrap & 4) {\n                //=== CRC4(state.check, hold)\n                hbuf[0] = hold & 0xff;\n                hbuf[1] = hold >>> 8 & 0xff;\n                hbuf[2] = hold >>> 16 & 0xff;\n                hbuf[3] = hold >>> 24 & 0xff;\n                state.check = $a39eeb69bf620de6$var$crc32_1(state.check, hbuf, 4, 0);\n            //===\n            }\n            //=== INITBITS();\n            hold = 0;\n            bits = 0;\n            //===//\n            state.mode = $a39eeb69bf620de6$var$OS;\n        /* falls through */ case $a39eeb69bf620de6$var$OS:\n            //=== NEEDBITS(16); */\n            while(bits < 16){\n                if (have === 0) break inf_leave;\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n            }\n            //===//\n            if (state.head) {\n                state.head.xflags = hold & 0xff;\n                state.head.os = hold >> 8;\n            }\n            if (state.flags & 0x0200 && state.wrap & 4) {\n                //=== CRC2(state.check, hold);\n                hbuf[0] = hold & 0xff;\n                hbuf[1] = hold >>> 8 & 0xff;\n                state.check = $a39eeb69bf620de6$var$crc32_1(state.check, hbuf, 2, 0);\n            //===//\n            }\n            //=== INITBITS();\n            hold = 0;\n            bits = 0;\n            //===//\n            state.mode = $a39eeb69bf620de6$var$EXLEN;\n        /* falls through */ case $a39eeb69bf620de6$var$EXLEN:\n            if (state.flags & 0x0400) {\n                //=== NEEDBITS(16); */\n                while(bits < 16){\n                    if (have === 0) break inf_leave;\n                    have--;\n                    hold += input[next++] << bits;\n                    bits += 8;\n                }\n                //===//\n                state.length = hold;\n                if (state.head) state.head.extra_len = hold;\n                if (state.flags & 0x0200 && state.wrap & 4) {\n                    //=== CRC2(state.check, hold);\n                    hbuf[0] = hold & 0xff;\n                    hbuf[1] = hold >>> 8 & 0xff;\n                    state.check = $a39eeb69bf620de6$var$crc32_1(state.check, hbuf, 2, 0);\n                //===//\n                }\n                //=== INITBITS();\n                hold = 0;\n                bits = 0;\n            //===//\n            } else if (state.head) state.head.extra = null /*Z_NULL*/ ;\n            state.mode = $a39eeb69bf620de6$var$EXTRA;\n        /* falls through */ case $a39eeb69bf620de6$var$EXTRA:\n            if (state.flags & 0x0400) {\n                copy = state.length;\n                if (copy > have) copy = have;\n                if (copy) {\n                    if (state.head) {\n                        len = state.head.extra_len - state.length;\n                        if (!state.head.extra) // Use untyped array for more convenient processing later\n                        state.head.extra = new Uint8Array(state.head.extra_len);\n                        state.head.extra.set(input.subarray(next, // extra field is limited to 65536 bytes\n                        // - no need for additional size check\n                        next + copy), /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/ len);\n                    //zmemcpy(state.head.extra + len, next,\n                    //        len + copy > state.head.extra_max ?\n                    //        state.head.extra_max - len : copy);\n                    }\n                    if (state.flags & 0x0200 && state.wrap & 4) state.check = $a39eeb69bf620de6$var$crc32_1(state.check, input, copy, next);\n                    have -= copy;\n                    next += copy;\n                    state.length -= copy;\n                }\n                if (state.length) break inf_leave;\n            }\n            state.length = 0;\n            state.mode = $a39eeb69bf620de6$var$NAME;\n        /* falls through */ case $a39eeb69bf620de6$var$NAME:\n            if (state.flags & 0x0800) {\n                if (have === 0) break inf_leave;\n                copy = 0;\n                do {\n                    // TODO: 2 or 1 bytes?\n                    len = input[next + copy++];\n                    /* use constant limit because in js we should not preallocate memory */ if (state.head && len && state.length < 65536 /*state.head.name_max*/ ) state.head.name += String.fromCharCode(len);\n                }while (len && copy < have);\n                if (state.flags & 0x0200 && state.wrap & 4) state.check = $a39eeb69bf620de6$var$crc32_1(state.check, input, copy, next);\n                have -= copy;\n                next += copy;\n                if (len) break inf_leave;\n            } else if (state.head) state.head.name = null;\n            state.length = 0;\n            state.mode = $a39eeb69bf620de6$var$COMMENT;\n        /* falls through */ case $a39eeb69bf620de6$var$COMMENT:\n            if (state.flags & 0x1000) {\n                if (have === 0) break inf_leave;\n                copy = 0;\n                do {\n                    len = input[next + copy++];\n                    /* use constant limit because in js we should not preallocate memory */ if (state.head && len && state.length < 65536 /*state.head.comm_max*/ ) state.head.comment += String.fromCharCode(len);\n                }while (len && copy < have);\n                if (state.flags & 0x0200 && state.wrap & 4) state.check = $a39eeb69bf620de6$var$crc32_1(state.check, input, copy, next);\n                have -= copy;\n                next += copy;\n                if (len) break inf_leave;\n            } else if (state.head) state.head.comment = null;\n            state.mode = $a39eeb69bf620de6$var$HCRC;\n        /* falls through */ case $a39eeb69bf620de6$var$HCRC:\n            if (state.flags & 0x0200) {\n                //=== NEEDBITS(16); */\n                while(bits < 16){\n                    if (have === 0) break inf_leave;\n                    have--;\n                    hold += input[next++] << bits;\n                    bits += 8;\n                }\n                //===//\n                if (state.wrap & 4 && hold !== (state.check & 0xffff)) {\n                    strm.msg = \"header crc mismatch\";\n                    state.mode = $a39eeb69bf620de6$var$BAD;\n                    break;\n                }\n                //=== INITBITS();\n                hold = 0;\n                bits = 0;\n            //===//\n            }\n            if (state.head) {\n                state.head.hcrc = state.flags >> 9 & 1;\n                state.head.done = true;\n            }\n            strm.adler = state.check = 0;\n            state.mode = $a39eeb69bf620de6$var$TYPE;\n            break;\n        case $a39eeb69bf620de6$var$DICTID:\n            //=== NEEDBITS(32); */\n            while(bits < 32){\n                if (have === 0) break inf_leave;\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n            }\n            //===//\n            strm.adler = state.check = $a39eeb69bf620de6$var$zswap32(hold);\n            //=== INITBITS();\n            hold = 0;\n            bits = 0;\n            //===//\n            state.mode = $a39eeb69bf620de6$var$DICT;\n        /* falls through */ case $a39eeb69bf620de6$var$DICT:\n            if (state.havedict === 0) {\n                //--- RESTORE() ---\n                strm.next_out = put;\n                strm.avail_out = left;\n                strm.next_in = next;\n                strm.avail_in = have;\n                state.hold = hold;\n                state.bits = bits;\n                //---\n                return $a39eeb69bf620de6$var$Z_NEED_DICT$1;\n            }\n            strm.adler = state.check = 1 /*adler32(0L, Z_NULL, 0)*/ ;\n            state.mode = $a39eeb69bf620de6$var$TYPE;\n        /* falls through */ case $a39eeb69bf620de6$var$TYPE:\n            if (flush === $a39eeb69bf620de6$var$Z_BLOCK || flush === $a39eeb69bf620de6$var$Z_TREES) break inf_leave;\n        /* falls through */ case $a39eeb69bf620de6$var$TYPEDO:\n            if (state.last) {\n                //--- BYTEBITS() ---//\n                hold >>>= bits & 7;\n                bits -= bits & 7;\n                //---//\n                state.mode = $a39eeb69bf620de6$var$CHECK;\n                break;\n            }\n            //=== NEEDBITS(3); */\n            while(bits < 3){\n                if (have === 0) break inf_leave;\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n            }\n            //===//\n            state.last = hold & 0x01 /*BITS(1)*/ ;\n            //--- DROPBITS(1) ---//\n            hold >>>= 1;\n            bits -= 1;\n            //---//\n            switch(hold & 0x03){\n                case 0:\n                    /* stored block */ //Tracev((stderr, \"inflate:     stored block%s\\n\",\n                    //        state.last ? \" (last)\" : \"\"));\n                    state.mode = $a39eeb69bf620de6$var$STORED;\n                    break;\n                case 1:\n                    /* fixed block */ $a39eeb69bf620de6$var$fixedtables(state);\n                    //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n                    //        state.last ? \" (last)\" : \"\"));\n                    state.mode = $a39eeb69bf620de6$var$LEN_; /* decode codes */ \n                    if (flush === $a39eeb69bf620de6$var$Z_TREES) {\n                        //--- DROPBITS(2) ---//\n                        hold >>>= 2;\n                        bits -= 2;\n                        break inf_leave;\n                    }\n                    break;\n                case 2:\n                    /* dynamic block */ //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n                    //        state.last ? \" (last)\" : \"\"));\n                    state.mode = $a39eeb69bf620de6$var$TABLE;\n                    break;\n                case 3:\n                    strm.msg = \"invalid block type\";\n                    state.mode = $a39eeb69bf620de6$var$BAD;\n            }\n            //--- DROPBITS(2) ---//\n            hold >>>= 2;\n            bits -= 2;\n            break;\n        case $a39eeb69bf620de6$var$STORED:\n            //--- BYTEBITS() ---// /* go to byte boundary */\n            hold >>>= bits & 7;\n            bits -= bits & 7;\n            //---//\n            //=== NEEDBITS(32); */\n            while(bits < 32){\n                if (have === 0) break inf_leave;\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n            }\n            //===//\n            if ((hold & 0xffff) !== (hold >>> 16 ^ 0xffff)) {\n                strm.msg = \"invalid stored block lengths\";\n                state.mode = $a39eeb69bf620de6$var$BAD;\n                break;\n            }\n            state.length = hold & 0xffff;\n            //Tracev((stderr, \"inflate:       stored length %u\\n\",\n            //        state.length));\n            //=== INITBITS();\n            hold = 0;\n            bits = 0;\n            //===//\n            state.mode = $a39eeb69bf620de6$var$COPY_;\n            if (flush === $a39eeb69bf620de6$var$Z_TREES) break inf_leave;\n        /* falls through */ case $a39eeb69bf620de6$var$COPY_:\n            state.mode = $a39eeb69bf620de6$var$COPY;\n        /* falls through */ case $a39eeb69bf620de6$var$COPY:\n            copy = state.length;\n            if (copy) {\n                if (copy > have) copy = have;\n                if (copy > left) copy = left;\n                if (copy === 0) break inf_leave;\n                //--- zmemcpy(put, next, copy); ---\n                output.set(input.subarray(next, next + copy), put);\n                //---//\n                have -= copy;\n                next += copy;\n                left -= copy;\n                put += copy;\n                state.length -= copy;\n                break;\n            }\n            //Tracev((stderr, \"inflate:       stored end\\n\"));\n            state.mode = $a39eeb69bf620de6$var$TYPE;\n            break;\n        case $a39eeb69bf620de6$var$TABLE:\n            //=== NEEDBITS(14); */\n            while(bits < 14){\n                if (have === 0) break inf_leave;\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n            }\n            //===//\n            state.nlen = (hold & 0x1f) + 257;\n            //--- DROPBITS(5) ---//\n            hold >>>= 5;\n            bits -= 5;\n            //---//\n            state.ndist = (hold & 0x1f) + 1;\n            //--- DROPBITS(5) ---//\n            hold >>>= 5;\n            bits -= 5;\n            //---//\n            state.ncode = (hold & 0x0f) + 4;\n            //--- DROPBITS(4) ---//\n            hold >>>= 4;\n            bits -= 4;\n            //---//\n            //#ifndef PKZIP_BUG_WORKAROUND\n            if (state.nlen > 286 || state.ndist > 30) {\n                strm.msg = \"too many length or distance symbols\";\n                state.mode = $a39eeb69bf620de6$var$BAD;\n                break;\n            }\n            //#endif\n            //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n            state.have = 0;\n            state.mode = $a39eeb69bf620de6$var$LENLENS;\n        /* falls through */ case $a39eeb69bf620de6$var$LENLENS:\n            while(state.have < state.ncode){\n                //=== NEEDBITS(3);\n                while(bits < 3){\n                    if (have === 0) break inf_leave;\n                    have--;\n                    hold += input[next++] << bits;\n                    bits += 8;\n                }\n                //===//\n                state.lens[order[state.have++]] = hold & 0x07; //BITS(3);\n                //--- DROPBITS(3) ---//\n                hold >>>= 3;\n                bits -= 3;\n            //---//\n            }\n            while(state.have < 19)state.lens[order[state.have++]] = 0;\n            // We have separate tables & no pointers. 2 commented lines below not needed.\n            //state.next = state.codes;\n            //state.lencode = state.next;\n            // Switch to use dynamic table\n            state.lencode = state.lendyn;\n            state.lenbits = 7;\n            opts = {\n                bits: state.lenbits\n            };\n            ret = $a39eeb69bf620de6$var$inftrees($a39eeb69bf620de6$var$CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n            state.lenbits = opts.bits;\n            if (ret) {\n                strm.msg = \"invalid code lengths set\";\n                state.mode = $a39eeb69bf620de6$var$BAD;\n                break;\n            }\n            //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n            state.have = 0;\n            state.mode = $a39eeb69bf620de6$var$CODELENS;\n        /* falls through */ case $a39eeb69bf620de6$var$CODELENS:\n            while(state.have < state.nlen + state.ndist){\n                for(;;){\n                    here = state.lencode[hold & (1 << state.lenbits) - 1]; /*BITS(state.lenbits)*/ \n                    here_bits = here >>> 24;\n                    here_op = here >>> 16 & 0xff;\n                    here_val = here & 0xffff;\n                    if (here_bits <= bits) break;\n                    //--- PULLBYTE() ---//\n                    if (have === 0) break inf_leave;\n                    have--;\n                    hold += input[next++] << bits;\n                    bits += 8;\n                //---//\n                }\n                if (here_val < 16) {\n                    //--- DROPBITS(here.bits) ---//\n                    hold >>>= here_bits;\n                    bits -= here_bits;\n                    //---//\n                    state.lens[state.have++] = here_val;\n                } else {\n                    if (here_val === 16) {\n                        //=== NEEDBITS(here.bits + 2);\n                        n = here_bits + 2;\n                        while(bits < n){\n                            if (have === 0) break inf_leave;\n                            have--;\n                            hold += input[next++] << bits;\n                            bits += 8;\n                        }\n                        //===//\n                        //--- DROPBITS(here.bits) ---//\n                        hold >>>= here_bits;\n                        bits -= here_bits;\n                        //---//\n                        if (state.have === 0) {\n                            strm.msg = \"invalid bit length repeat\";\n                            state.mode = $a39eeb69bf620de6$var$BAD;\n                            break;\n                        }\n                        len = state.lens[state.have - 1];\n                        copy = 3 + (hold & 0x03); //BITS(2);\n                        //--- DROPBITS(2) ---//\n                        hold >>>= 2;\n                        bits -= 2;\n                    //---//\n                    } else if (here_val === 17) {\n                        //=== NEEDBITS(here.bits + 3);\n                        n = here_bits + 3;\n                        while(bits < n){\n                            if (have === 0) break inf_leave;\n                            have--;\n                            hold += input[next++] << bits;\n                            bits += 8;\n                        }\n                        //===//\n                        //--- DROPBITS(here.bits) ---//\n                        hold >>>= here_bits;\n                        bits -= here_bits;\n                        //---//\n                        len = 0;\n                        copy = 3 + (hold & 0x07); //BITS(3);\n                        //--- DROPBITS(3) ---//\n                        hold >>>= 3;\n                        bits -= 3;\n                    //---//\n                    } else {\n                        //=== NEEDBITS(here.bits + 7);\n                        n = here_bits + 7;\n                        while(bits < n){\n                            if (have === 0) break inf_leave;\n                            have--;\n                            hold += input[next++] << bits;\n                            bits += 8;\n                        }\n                        //===//\n                        //--- DROPBITS(here.bits) ---//\n                        hold >>>= here_bits;\n                        bits -= here_bits;\n                        //---//\n                        len = 0;\n                        copy = 11 + (hold & 0x7f); //BITS(7);\n                        //--- DROPBITS(7) ---//\n                        hold >>>= 7;\n                        bits -= 7;\n                    //---//\n                    }\n                    if (state.have + copy > state.nlen + state.ndist) {\n                        strm.msg = \"invalid bit length repeat\";\n                        state.mode = $a39eeb69bf620de6$var$BAD;\n                        break;\n                    }\n                    while(copy--)state.lens[state.have++] = len;\n                }\n            }\n            /* handle error breaks in while */ if (state.mode === $a39eeb69bf620de6$var$BAD) break;\n            /* check for end-of-block code (better have one) */ if (state.lens[256] === 0) {\n                strm.msg = \"invalid code -- missing end-of-block\";\n                state.mode = $a39eeb69bf620de6$var$BAD;\n                break;\n            }\n            /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */ state.lenbits = 9;\n            opts = {\n                bits: state.lenbits\n            };\n            ret = $a39eeb69bf620de6$var$inftrees($a39eeb69bf620de6$var$LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n            // We have separate tables & no pointers. 2 commented lines below not needed.\n            // state.next_index = opts.table_index;\n            state.lenbits = opts.bits;\n            // state.lencode = state.next;\n            if (ret) {\n                strm.msg = \"invalid literal/lengths set\";\n                state.mode = $a39eeb69bf620de6$var$BAD;\n                break;\n            }\n            state.distbits = 6;\n            //state.distcode.copy(state.codes);\n            // Switch to use dynamic table\n            state.distcode = state.distdyn;\n            opts = {\n                bits: state.distbits\n            };\n            ret = $a39eeb69bf620de6$var$inftrees($a39eeb69bf620de6$var$DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n            // We have separate tables & no pointers. 2 commented lines below not needed.\n            // state.next_index = opts.table_index;\n            state.distbits = opts.bits;\n            // state.distcode = state.next;\n            if (ret) {\n                strm.msg = \"invalid distances set\";\n                state.mode = $a39eeb69bf620de6$var$BAD;\n                break;\n            }\n            //Tracev((stderr, 'inflate:       codes ok\\n'));\n            state.mode = $a39eeb69bf620de6$var$LEN_;\n            if (flush === $a39eeb69bf620de6$var$Z_TREES) break inf_leave;\n        /* falls through */ case $a39eeb69bf620de6$var$LEN_:\n            state.mode = $a39eeb69bf620de6$var$LEN;\n        /* falls through */ case $a39eeb69bf620de6$var$LEN:\n            if (have >= 6 && left >= 258) {\n                //--- RESTORE() ---\n                strm.next_out = put;\n                strm.avail_out = left;\n                strm.next_in = next;\n                strm.avail_in = have;\n                state.hold = hold;\n                state.bits = bits;\n                //---\n                $a39eeb69bf620de6$var$inffast(strm, _out);\n                //--- LOAD() ---\n                put = strm.next_out;\n                output = strm.output;\n                left = strm.avail_out;\n                next = strm.next_in;\n                input = strm.input;\n                have = strm.avail_in;\n                hold = state.hold;\n                bits = state.bits;\n                //---\n                if (state.mode === $a39eeb69bf620de6$var$TYPE) state.back = -1;\n                break;\n            }\n            state.back = 0;\n            for(;;){\n                here = state.lencode[hold & (1 << state.lenbits) - 1]; /*BITS(state.lenbits)*/ \n                here_bits = here >>> 24;\n                here_op = here >>> 16 & 0xff;\n                here_val = here & 0xffff;\n                if (here_bits <= bits) break;\n                //--- PULLBYTE() ---//\n                if (have === 0) break inf_leave;\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n            //---//\n            }\n            if (here_op && (here_op & 0xf0) === 0) {\n                last_bits = here_bits;\n                last_op = here_op;\n                last_val = here_val;\n                for(;;){\n                    here = state.lencode[last_val + ((hold & (1 << last_bits + last_op) - 1) >> last_bits)];\n                    here_bits = here >>> 24;\n                    here_op = here >>> 16 & 0xff;\n                    here_val = here & 0xffff;\n                    if (last_bits + here_bits <= bits) break;\n                    //--- PULLBYTE() ---//\n                    if (have === 0) break inf_leave;\n                    have--;\n                    hold += input[next++] << bits;\n                    bits += 8;\n                //---//\n                }\n                //--- DROPBITS(last.bits) ---//\n                hold >>>= last_bits;\n                bits -= last_bits;\n                //---//\n                state.back += last_bits;\n            }\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.back += here_bits;\n            state.length = here_val;\n            if (here_op === 0) {\n                //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n                //        \"inflate:         literal '%c'\\n\" :\n                //        \"inflate:         literal 0x%02x\\n\", here.val));\n                state.mode = $a39eeb69bf620de6$var$LIT;\n                break;\n            }\n            if (here_op & 32) {\n                //Tracevv((stderr, \"inflate:         end of block\\n\"));\n                state.back = -1;\n                state.mode = $a39eeb69bf620de6$var$TYPE;\n                break;\n            }\n            if (here_op & 64) {\n                strm.msg = \"invalid literal/length code\";\n                state.mode = $a39eeb69bf620de6$var$BAD;\n                break;\n            }\n            state.extra = here_op & 15;\n            state.mode = $a39eeb69bf620de6$var$LENEXT;\n        /* falls through */ case $a39eeb69bf620de6$var$LENEXT:\n            if (state.extra) {\n                //=== NEEDBITS(state.extra);\n                n = state.extra;\n                while(bits < n){\n                    if (have === 0) break inf_leave;\n                    have--;\n                    hold += input[next++] << bits;\n                    bits += 8;\n                }\n                //===//\n                state.length += hold & (1 << state.extra) - 1 /*BITS(state.extra)*/ ;\n                //--- DROPBITS(state.extra) ---//\n                hold >>>= state.extra;\n                bits -= state.extra;\n                //---//\n                state.back += state.extra;\n            }\n            //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n            state.was = state.length;\n            state.mode = $a39eeb69bf620de6$var$DIST;\n        /* falls through */ case $a39eeb69bf620de6$var$DIST:\n            for(;;){\n                here = state.distcode[hold & (1 << state.distbits) - 1]; /*BITS(state.distbits)*/ \n                here_bits = here >>> 24;\n                here_op = here >>> 16 & 0xff;\n                here_val = here & 0xffff;\n                if (here_bits <= bits) break;\n                //--- PULLBYTE() ---//\n                if (have === 0) break inf_leave;\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n            //---//\n            }\n            if ((here_op & 0xf0) === 0) {\n                last_bits = here_bits;\n                last_op = here_op;\n                last_val = here_val;\n                for(;;){\n                    here = state.distcode[last_val + ((hold & (1 << last_bits + last_op) - 1) >> last_bits)];\n                    here_bits = here >>> 24;\n                    here_op = here >>> 16 & 0xff;\n                    here_val = here & 0xffff;\n                    if (last_bits + here_bits <= bits) break;\n                    //--- PULLBYTE() ---//\n                    if (have === 0) break inf_leave;\n                    have--;\n                    hold += input[next++] << bits;\n                    bits += 8;\n                //---//\n                }\n                //--- DROPBITS(last.bits) ---//\n                hold >>>= last_bits;\n                bits -= last_bits;\n                //---//\n                state.back += last_bits;\n            }\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.back += here_bits;\n            if (here_op & 64) {\n                strm.msg = \"invalid distance code\";\n                state.mode = $a39eeb69bf620de6$var$BAD;\n                break;\n            }\n            state.offset = here_val;\n            state.extra = here_op & 15;\n            state.mode = $a39eeb69bf620de6$var$DISTEXT;\n        /* falls through */ case $a39eeb69bf620de6$var$DISTEXT:\n            if (state.extra) {\n                //=== NEEDBITS(state.extra);\n                n = state.extra;\n                while(bits < n){\n                    if (have === 0) break inf_leave;\n                    have--;\n                    hold += input[next++] << bits;\n                    bits += 8;\n                }\n                //===//\n                state.offset += hold & (1 << state.extra) - 1 /*BITS(state.extra)*/ ;\n                //--- DROPBITS(state.extra) ---//\n                hold >>>= state.extra;\n                bits -= state.extra;\n                //---//\n                state.back += state.extra;\n            }\n            //#ifdef INFLATE_STRICT\n            if (state.offset > state.dmax) {\n                strm.msg = \"invalid distance too far back\";\n                state.mode = $a39eeb69bf620de6$var$BAD;\n                break;\n            }\n            //#endif\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n            state.mode = $a39eeb69bf620de6$var$MATCH;\n        /* falls through */ case $a39eeb69bf620de6$var$MATCH:\n            if (left === 0) break inf_leave;\n            copy = _out - left;\n            if (state.offset > copy) {\n                copy = state.offset - copy;\n                if (copy > state.whave) {\n                    if (state.sane) {\n                        strm.msg = \"invalid distance too far back\";\n                        state.mode = $a39eeb69bf620de6$var$BAD;\n                        break;\n                    }\n                }\n                if (copy > state.wnext) {\n                    copy -= state.wnext;\n                    from = state.wsize - copy;\n                } else from = state.wnext - copy;\n                if (copy > state.length) copy = state.length;\n                from_source = state.window;\n            } else {\n                from_source = output;\n                from = put - state.offset;\n                copy = state.length;\n            }\n            if (copy > left) copy = left;\n            left -= copy;\n            state.length -= copy;\n            do output[put++] = from_source[from++];\n            while (--copy);\n            if (state.length === 0) state.mode = $a39eeb69bf620de6$var$LEN;\n            break;\n        case $a39eeb69bf620de6$var$LIT:\n            if (left === 0) break inf_leave;\n            output[put++] = state.length;\n            left--;\n            state.mode = $a39eeb69bf620de6$var$LEN;\n            break;\n        case $a39eeb69bf620de6$var$CHECK:\n            if (state.wrap) {\n                //=== NEEDBITS(32);\n                while(bits < 32){\n                    if (have === 0) break inf_leave;\n                    have--;\n                    // Use '|' instead of '+' to make sure that result is signed\n                    hold |= input[next++] << bits;\n                    bits += 8;\n                }\n                //===//\n                _out -= left;\n                strm.total_out += _out;\n                state.total += _out;\n                if (state.wrap & 4 && _out) strm.adler = state.check = /*UPDATE_CHECK(state.check, put - _out, _out);*/ state.flags ? $a39eeb69bf620de6$var$crc32_1(state.check, output, _out, put - _out) : $a39eeb69bf620de6$var$adler32_1(state.check, output, _out, put - _out);\n                _out = left;\n                // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n                if (state.wrap & 4 && (state.flags ? hold : $a39eeb69bf620de6$var$zswap32(hold)) !== state.check) {\n                    strm.msg = \"incorrect data check\";\n                    state.mode = $a39eeb69bf620de6$var$BAD;\n                    break;\n                }\n                //=== INITBITS();\n                hold = 0;\n                bits = 0;\n            //===//\n            //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n            }\n            state.mode = $a39eeb69bf620de6$var$LENGTH;\n        /* falls through */ case $a39eeb69bf620de6$var$LENGTH:\n            if (state.wrap && state.flags) {\n                //=== NEEDBITS(32);\n                while(bits < 32){\n                    if (have === 0) break inf_leave;\n                    have--;\n                    hold += input[next++] << bits;\n                    bits += 8;\n                }\n                //===//\n                if (state.wrap & 4 && hold !== (state.total & 0xffffffff)) {\n                    strm.msg = \"incorrect length check\";\n                    state.mode = $a39eeb69bf620de6$var$BAD;\n                    break;\n                }\n                //=== INITBITS();\n                hold = 0;\n                bits = 0;\n            //===//\n            //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n            }\n            state.mode = $a39eeb69bf620de6$var$DONE;\n        /* falls through */ case $a39eeb69bf620de6$var$DONE:\n            ret = $a39eeb69bf620de6$var$Z_STREAM_END$1;\n            break inf_leave;\n        case $a39eeb69bf620de6$var$BAD:\n            ret = $a39eeb69bf620de6$var$Z_DATA_ERROR$1;\n            break inf_leave;\n        case $a39eeb69bf620de6$var$MEM:\n            return $a39eeb69bf620de6$var$Z_MEM_ERROR$1;\n        case $a39eeb69bf620de6$var$SYNC:\n        /* falls through */ default:\n            return $a39eeb69bf620de6$var$Z_STREAM_ERROR$1;\n    }\n    // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n    /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */ //--- RESTORE() ---\n    strm.next_out = put;\n    strm.avail_out = left;\n    strm.next_in = next;\n    strm.avail_in = have;\n    state.hold = hold;\n    state.bits = bits;\n    //---\n    if (state.wsize || _out !== strm.avail_out && state.mode < $a39eeb69bf620de6$var$BAD && (state.mode < $a39eeb69bf620de6$var$CHECK || flush !== $a39eeb69bf620de6$var$Z_FINISH$1)) $a39eeb69bf620de6$var$updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out);\n    _in -= strm.avail_in;\n    _out -= strm.avail_out;\n    strm.total_in += _in;\n    strm.total_out += _out;\n    state.total += _out;\n    if (state.wrap & 4 && _out) strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/ state.flags ? $a39eeb69bf620de6$var$crc32_1(state.check, output, _out, strm.next_out - _out) : $a39eeb69bf620de6$var$adler32_1(state.check, output, _out, strm.next_out - _out);\n    strm.data_type = state.bits + (state.last ? 64 : 0) + (state.mode === $a39eeb69bf620de6$var$TYPE ? 128 : 0) + (state.mode === $a39eeb69bf620de6$var$LEN_ || state.mode === $a39eeb69bf620de6$var$COPY_ ? 256 : 0);\n    if ((_in === 0 && _out === 0 || flush === $a39eeb69bf620de6$var$Z_FINISH$1) && ret === $a39eeb69bf620de6$var$Z_OK$1) ret = $a39eeb69bf620de6$var$Z_BUF_ERROR;\n    return ret;\n};\nconst $a39eeb69bf620de6$var$inflateEnd = (strm)=>{\n    if ($a39eeb69bf620de6$var$inflateStateCheck(strm)) return $a39eeb69bf620de6$var$Z_STREAM_ERROR$1;\n    let state = strm.state;\n    if (state.window) state.window = null;\n    strm.state = null;\n    return $a39eeb69bf620de6$var$Z_OK$1;\n};\nconst $a39eeb69bf620de6$var$inflateGetHeader = (strm, head)=>{\n    /* check state */ if ($a39eeb69bf620de6$var$inflateStateCheck(strm)) return $a39eeb69bf620de6$var$Z_STREAM_ERROR$1;\n    const state = strm.state;\n    if ((state.wrap & 2) === 0) return $a39eeb69bf620de6$var$Z_STREAM_ERROR$1;\n    /* save header structure */ state.head = head;\n    head.done = false;\n    return $a39eeb69bf620de6$var$Z_OK$1;\n};\nconst $a39eeb69bf620de6$var$inflateSetDictionary = (strm, dictionary)=>{\n    const dictLength = dictionary.length;\n    let state;\n    let dictid;\n    let ret;\n    /* check state */ if ($a39eeb69bf620de6$var$inflateStateCheck(strm)) return $a39eeb69bf620de6$var$Z_STREAM_ERROR$1;\n    state = strm.state;\n    if (state.wrap !== 0 && state.mode !== $a39eeb69bf620de6$var$DICT) return $a39eeb69bf620de6$var$Z_STREAM_ERROR$1;\n    /* check for correct dictionary identifier */ if (state.mode === $a39eeb69bf620de6$var$DICT) {\n        dictid = 1; /* adler32(0, null, 0)*/ \n        /* dictid = adler32(dictid, dictionary, dictLength); */ dictid = $a39eeb69bf620de6$var$adler32_1(dictid, dictionary, dictLength, 0);\n        if (dictid !== state.check) return $a39eeb69bf620de6$var$Z_DATA_ERROR$1;\n    }\n    /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */ ret = $a39eeb69bf620de6$var$updatewindow(strm, dictionary, dictLength, dictLength);\n    if (ret) {\n        state.mode = $a39eeb69bf620de6$var$MEM;\n        return $a39eeb69bf620de6$var$Z_MEM_ERROR$1;\n    }\n    state.havedict = 1;\n    // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n    return $a39eeb69bf620de6$var$Z_OK$1;\n};\nvar $a39eeb69bf620de6$var$inflateReset_1 = $a39eeb69bf620de6$var$inflateReset;\nvar $a39eeb69bf620de6$var$inflateReset2_1 = $a39eeb69bf620de6$var$inflateReset2;\nvar $a39eeb69bf620de6$var$inflateResetKeep_1 = $a39eeb69bf620de6$var$inflateResetKeep;\nvar $a39eeb69bf620de6$var$inflateInit_1 = $a39eeb69bf620de6$var$inflateInit;\nvar $a39eeb69bf620de6$var$inflateInit2_1 = $a39eeb69bf620de6$var$inflateInit2;\nvar $a39eeb69bf620de6$var$inflate_2$1 = $a39eeb69bf620de6$var$inflate$2;\nvar $a39eeb69bf620de6$var$inflateEnd_1 = $a39eeb69bf620de6$var$inflateEnd;\nvar $a39eeb69bf620de6$var$inflateGetHeader_1 = $a39eeb69bf620de6$var$inflateGetHeader;\nvar $a39eeb69bf620de6$var$inflateSetDictionary_1 = $a39eeb69bf620de6$var$inflateSetDictionary;\nvar $a39eeb69bf620de6$var$inflateInfo = \"pako inflate (from Nodeca project)\";\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/ var $a39eeb69bf620de6$var$inflate_1$2 = {\n    inflateReset: $a39eeb69bf620de6$var$inflateReset_1,\n    inflateReset2: $a39eeb69bf620de6$var$inflateReset2_1,\n    inflateResetKeep: $a39eeb69bf620de6$var$inflateResetKeep_1,\n    inflateInit: $a39eeb69bf620de6$var$inflateInit_1,\n    inflateInit2: $a39eeb69bf620de6$var$inflateInit2_1,\n    inflate: $a39eeb69bf620de6$var$inflate_2$1,\n    inflateEnd: $a39eeb69bf620de6$var$inflateEnd_1,\n    inflateGetHeader: $a39eeb69bf620de6$var$inflateGetHeader_1,\n    inflateSetDictionary: $a39eeb69bf620de6$var$inflateSetDictionary_1,\n    inflateInfo: $a39eeb69bf620de6$var$inflateInfo\n};\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\nfunction $a39eeb69bf620de6$var$GZheader() {\n    /* true if compressed data believed to be text */ this.text = 0;\n    /* modification time */ this.time = 0;\n    /* extra flags (not used when writing a gzip file) */ this.xflags = 0;\n    /* operating system */ this.os = 0;\n    /* pointer to extra field or Z_NULL if none */ this.extra = null;\n    /* extra field length (valid if extra != Z_NULL) */ this.extra_len = 0; // Actually, we don't need it in JS,\n    // but leave for few code modifications\n    //\n    // Setup limits is not necessary because in js we should not preallocate memory\n    // for inflate use constant limit in 65536 bytes\n    //\n    /* space at extra (only when reading header) */ // this.extra_max  = 0;\n    /* pointer to zero-terminated file name or Z_NULL */ this.name = \"\";\n    /* space at name (only when reading header) */ // this.name_max   = 0;\n    /* pointer to zero-terminated comment or Z_NULL */ this.comment = \"\";\n    /* space at comment (only when reading header) */ // this.comm_max   = 0;\n    /* true if there was or will be a header crc */ this.hcrc = 0;\n    /* true when done reading gzip header (not used when writing a gzip file) */ this.done = false;\n}\nvar $a39eeb69bf620de6$var$gzheader = $a39eeb69bf620de6$var$GZheader;\nconst $a39eeb69bf620de6$var$toString = Object.prototype.toString;\n/* Public constants ==========================================================*/ /* ===========================================================================*/ const { Z_NO_FLUSH: $a39eeb69bf620de6$var$Z_NO_FLUSH, Z_FINISH: $a39eeb69bf620de6$var$Z_FINISH, Z_OK: $a39eeb69bf620de6$var$Z_OK, Z_STREAM_END: $a39eeb69bf620de6$var$Z_STREAM_END, Z_NEED_DICT: $a39eeb69bf620de6$var$Z_NEED_DICT, Z_STREAM_ERROR: $a39eeb69bf620de6$var$Z_STREAM_ERROR, Z_DATA_ERROR: $a39eeb69bf620de6$var$Z_DATA_ERROR, Z_MEM_ERROR: $a39eeb69bf620de6$var$Z_MEM_ERROR } = $a39eeb69bf620de6$var$constants$2;\n/* ===========================================================================*/ /**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/ /* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/ /**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/ /**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/ /**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/ /**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/ function $a39eeb69bf620de6$var$Inflate$1(options) {\n    this.options = $a39eeb69bf620de6$var$common.assign({\n        chunkSize: 65536,\n        windowBits: 15,\n        to: \"\"\n    }, options || {});\n    const opt = this.options;\n    // Force window size for `raw` data, if not set directly,\n    // because we have no header for autodetect.\n    if (opt.raw && opt.windowBits >= 0 && opt.windowBits < 16) {\n        opt.windowBits = -opt.windowBits;\n        if (opt.windowBits === 0) opt.windowBits = -15;\n    }\n    // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n    if (opt.windowBits >= 0 && opt.windowBits < 16 && !(options && options.windowBits)) opt.windowBits += 32;\n    // Gzip header has no info about windows size, we can do autodetect only\n    // for deflate. So, if window size not set, force it to max when gzip possible\n    if (opt.windowBits > 15 && opt.windowBits < 48) // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    {\n        if ((opt.windowBits & 15) === 0) opt.windowBits |= 15;\n    }\n    this.err = 0; // error code, if happens (0 = Z_OK)\n    this.msg = \"\"; // error message\n    this.ended = false; // used to avoid multiple onEnd() calls\n    this.chunks = []; // chunks of compressed data\n    this.strm = new $a39eeb69bf620de6$var$zstream();\n    this.strm.avail_out = 0;\n    let status = $a39eeb69bf620de6$var$inflate_1$2.inflateInit2(this.strm, opt.windowBits);\n    if (status !== $a39eeb69bf620de6$var$Z_OK) throw new Error($a39eeb69bf620de6$var$messages[status]);\n    this.header = new $a39eeb69bf620de6$var$gzheader();\n    $a39eeb69bf620de6$var$inflate_1$2.inflateGetHeader(this.strm, this.header);\n    // Setup dictionary\n    if (opt.dictionary) {\n        // Convert data if needed\n        if (typeof opt.dictionary === \"string\") opt.dictionary = $a39eeb69bf620de6$var$strings.string2buf(opt.dictionary);\n        else if ($a39eeb69bf620de6$var$toString.call(opt.dictionary) === \"[object ArrayBuffer]\") opt.dictionary = new Uint8Array(opt.dictionary);\n        if (opt.raw) {\n            status = $a39eeb69bf620de6$var$inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n            if (status !== $a39eeb69bf620de6$var$Z_OK) throw new Error($a39eeb69bf620de6$var$messages[status]);\n        }\n    }\n}\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/ $a39eeb69bf620de6$var$Inflate$1.prototype.push = function(data, flush_mode) {\n    const strm = this.strm;\n    const chunkSize = this.options.chunkSize;\n    const dictionary = this.options.dictionary;\n    let status, _flush_mode, last_avail_out;\n    if (this.ended) return false;\n    if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n    else _flush_mode = flush_mode === true ? $a39eeb69bf620de6$var$Z_FINISH : $a39eeb69bf620de6$var$Z_NO_FLUSH;\n    // Convert data if needed\n    if ($a39eeb69bf620de6$var$toString.call(data) === \"[object ArrayBuffer]\") strm.input = new Uint8Array(data);\n    else strm.input = data;\n    strm.next_in = 0;\n    strm.avail_in = strm.input.length;\n    for(;;){\n        if (strm.avail_out === 0) {\n            strm.output = new Uint8Array(chunkSize);\n            strm.next_out = 0;\n            strm.avail_out = chunkSize;\n        }\n        status = $a39eeb69bf620de6$var$inflate_1$2.inflate(strm, _flush_mode);\n        if (status === $a39eeb69bf620de6$var$Z_NEED_DICT && dictionary) {\n            status = $a39eeb69bf620de6$var$inflate_1$2.inflateSetDictionary(strm, dictionary);\n            if (status === $a39eeb69bf620de6$var$Z_OK) status = $a39eeb69bf620de6$var$inflate_1$2.inflate(strm, _flush_mode);\n            else if (status === $a39eeb69bf620de6$var$Z_DATA_ERROR) // Replace code with more verbose\n            status = $a39eeb69bf620de6$var$Z_NEED_DICT;\n        }\n        // Skip snyc markers if more data follows and not raw mode\n        while(strm.avail_in > 0 && status === $a39eeb69bf620de6$var$Z_STREAM_END && strm.state.wrap > 0 && data[strm.next_in] !== 0){\n            $a39eeb69bf620de6$var$inflate_1$2.inflateReset(strm);\n            status = $a39eeb69bf620de6$var$inflate_1$2.inflate(strm, _flush_mode);\n        }\n        switch(status){\n            case $a39eeb69bf620de6$var$Z_STREAM_ERROR:\n            case $a39eeb69bf620de6$var$Z_DATA_ERROR:\n            case $a39eeb69bf620de6$var$Z_NEED_DICT:\n            case $a39eeb69bf620de6$var$Z_MEM_ERROR:\n                this.onEnd(status);\n                this.ended = true;\n                return false;\n        }\n        // Remember real `avail_out` value, because we may patch out buffer content\n        // to align utf8 strings boundaries.\n        last_avail_out = strm.avail_out;\n        if (strm.next_out) {\n            if (strm.avail_out === 0 || status === $a39eeb69bf620de6$var$Z_STREAM_END) {\n                if (this.options.to === \"string\") {\n                    let next_out_utf8 = $a39eeb69bf620de6$var$strings.utf8border(strm.output, strm.next_out);\n                    let tail = strm.next_out - next_out_utf8;\n                    let utf8str = $a39eeb69bf620de6$var$strings.buf2string(strm.output, next_out_utf8);\n                    // move tail & realign counters\n                    strm.next_out = tail;\n                    strm.avail_out = chunkSize - tail;\n                    if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n                    this.onData(utf8str);\n                } else this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n            }\n        }\n        // Must repeat iteration if out buffer is full\n        if (status === $a39eeb69bf620de6$var$Z_OK && last_avail_out === 0) continue;\n        // Finalize if end of stream reached.\n        if (status === $a39eeb69bf620de6$var$Z_STREAM_END) {\n            status = $a39eeb69bf620de6$var$inflate_1$2.inflateEnd(this.strm);\n            this.onEnd(status);\n            this.ended = true;\n            return true;\n        }\n        if (strm.avail_in === 0) break;\n    }\n    return true;\n};\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/ $a39eeb69bf620de6$var$Inflate$1.prototype.onData = function(chunk) {\n    this.chunks.push(chunk);\n};\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/ $a39eeb69bf620de6$var$Inflate$1.prototype.onEnd = function(status) {\n    // On success - join\n    if (status === $a39eeb69bf620de6$var$Z_OK) {\n        if (this.options.to === \"string\") this.result = this.chunks.join(\"\");\n        else this.result = $a39eeb69bf620de6$var$common.flattenChunks(this.chunks);\n    }\n    this.chunks = [];\n    this.err = status;\n    this.msg = this.strm.msg;\n};\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/ function $a39eeb69bf620de6$var$inflate$1(input, options) {\n    const inflator = new $a39eeb69bf620de6$var$Inflate$1(options);\n    inflator.push(input);\n    // That will never happens, if you don't cheat with options :)\n    if (inflator.err) throw inflator.msg || $a39eeb69bf620de6$var$messages[inflator.err];\n    return inflator.result;\n}\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/ function $a39eeb69bf620de6$var$inflateRaw$1(input, options) {\n    options = options || {};\n    options.raw = true;\n    return $a39eeb69bf620de6$var$inflate$1(input, options);\n}\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/ var $a39eeb69bf620de6$var$Inflate_1$1 = $a39eeb69bf620de6$var$Inflate$1;\nvar $a39eeb69bf620de6$var$inflate_2 = $a39eeb69bf620de6$var$inflate$1;\nvar $a39eeb69bf620de6$var$inflateRaw_1$1 = $a39eeb69bf620de6$var$inflateRaw$1;\nvar $a39eeb69bf620de6$var$ungzip$1 = $a39eeb69bf620de6$var$inflate$1;\nvar $a39eeb69bf620de6$var$constants = $a39eeb69bf620de6$var$constants$2;\nvar $a39eeb69bf620de6$var$inflate_1$1 = {\n    Inflate: $a39eeb69bf620de6$var$Inflate_1$1,\n    inflate: $a39eeb69bf620de6$var$inflate_2,\n    inflateRaw: $a39eeb69bf620de6$var$inflateRaw_1$1,\n    ungzip: $a39eeb69bf620de6$var$ungzip$1,\n    constants: $a39eeb69bf620de6$var$constants\n};\nconst { Deflate: $a39eeb69bf620de6$var$Deflate, deflate: $a39eeb69bf620de6$var$deflate, deflateRaw: $a39eeb69bf620de6$var$deflateRaw, gzip: $a39eeb69bf620de6$var$gzip } = $a39eeb69bf620de6$var$deflate_1$1;\nconst { Inflate: $a39eeb69bf620de6$var$Inflate, inflate: $a39eeb69bf620de6$var$inflate, inflateRaw: $a39eeb69bf620de6$var$inflateRaw, ungzip: $a39eeb69bf620de6$var$ungzip } = $a39eeb69bf620de6$var$inflate_1$1;\nvar $a39eeb69bf620de6$export$ae157b6234afe138 = $a39eeb69bf620de6$var$Deflate;\nvar $a39eeb69bf620de6$export$2316623ecd1285ab = $a39eeb69bf620de6$var$deflate;\nvar $a39eeb69bf620de6$export$e95d6a8f69fb340a = $a39eeb69bf620de6$var$deflateRaw;\nvar $a39eeb69bf620de6$export$69f0ea7cf3a331a8 = $a39eeb69bf620de6$var$gzip;\nvar $a39eeb69bf620de6$export$d1de70a877d6e43c = $a39eeb69bf620de6$var$Inflate;\nvar $a39eeb69bf620de6$export$cae1ce83fe4a1782 = $a39eeb69bf620de6$var$inflate;\nvar $a39eeb69bf620de6$export$d0f0aa2d05c905c5 = $a39eeb69bf620de6$var$inflateRaw;\nvar $a39eeb69bf620de6$export$95adf9d270383091 = $a39eeb69bf620de6$var$ungzip;\nvar $a39eeb69bf620de6$export$1a988e7317c65621 = $a39eeb69bf620de6$var$constants$2;\nvar $a39eeb69bf620de6$export$2e2bcd8739ae039 = {\n    Deflate: $a39eeb69bf620de6$export$ae157b6234afe138,\n    deflate: $a39eeb69bf620de6$export$2316623ecd1285ab,\n    deflateRaw: $a39eeb69bf620de6$export$e95d6a8f69fb340a,\n    gzip: $a39eeb69bf620de6$export$69f0ea7cf3a331a8,\n    Inflate: $a39eeb69bf620de6$export$d1de70a877d6e43c,\n    inflate: $a39eeb69bf620de6$export$cae1ce83fe4a1782,\n    inflateRaw: $a39eeb69bf620de6$export$d0f0aa2d05c905c5,\n    ungzip: $a39eeb69bf620de6$export$95adf9d270383091,\n    constants: $a39eeb69bf620de6$export$1a988e7317c65621\n};\n\n\nconst $3e2f0fa58ba587b4$export$55abd4691b317664 = window.history;\nconst $3e2f0fa58ba587b4$var$location = window.location;\nconst $3e2f0fa58ba587b4$export$c2ed3351cac403d1 = window.localStorage;\nconst $3e2f0fa58ba587b4$var$navigator = window.navigator;\nconst $3e2f0fa58ba587b4$export$128fa18b7194ef = new URL($3e2f0fa58ba587b4$var$location);\nconst $3e2f0fa58ba587b4$export$da1115b7645c376c = $3e2f0fa58ba587b4$export$128fa18b7194ef.searchParams;\nfunction $3e2f0fa58ba587b4$export$22d6d01dd47e89dd(a, b, sort) {\n    if (typeof sort === \"function\") {\n        a = a.toSorted(sort);\n        b = b.toSorted(sort);\n    }\n    return a.length === b.length && a.every((value, index)=>b[index] === value);\n}\nfunction $3e2f0fa58ba587b4$export$22012a5c726bef55(a, b, sort) {\n    return a.some((v)=>$3e2f0fa58ba587b4$export$22d6d01dd47e89dd(v, b, sort));\n}\nfunction $3e2f0fa58ba587b4$export$f09b504682b60c87(str, seed = 0) {\n    let h1 = 0xdeadbeef ^ seed;\n    let h2 = 0x41c6ce57 ^ seed;\n    for(let i = 0, ch; i < str.length; i++){\n        ch = str.charCodeAt(i);\n        h1 = Math.imul(h1 ^ ch, 2654435761);\n        h2 = Math.imul(h2 ^ ch, 1597334677);\n    }\n    h1 = Math.imul(h1 ^ h1 >>> 16, 2246822507);\n    h1 ^= Math.imul(h2 ^ h2 >>> 13, 3266489909);\n    h2 = Math.imul(h2 ^ h2 >>> 16, 2246822507);\n    h2 ^= Math.imul(h1 ^ h1 >>> 13, 3266489909);\n    return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n}\nfunction $3e2f0fa58ba587b4$export$f654b28f82155665() {\n    return new URL($3e2f0fa58ba587b4$var$location.href.split(/[?#]/)[0]);\n}\nfunction $3e2f0fa58ba587b4$export$307b18b61172f7ed(...parts) {\n    return parts.join(\"-\");\n}\nfunction $3e2f0fa58ba587b4$export$c8245504e56d23ee(rand, array, max) {\n    const available = Object.keys(array);\n    if (max > available.length) max = available.length;\n    const picked = [];\n    for(; max > 0; max--)picked.push(Number(available.splice($3e2f0fa58ba587b4$export$f863c42fae7e138a(rand, available.length - 1), 1)[0]));\n    return picked;\n}\nfunction $3e2f0fa58ba587b4$export$d4634d8e0b46181a(num) {\n    const sign = Math.sign(num);\n    if (sign === 0) return \"=\";\n    else if (sign > 0) return \">\";\n    else return \"<\";\n}\nfunction $3e2f0fa58ba587b4$export$afb15ede80c42aab(string) {\n    const binString = window.atob($3e2f0fa58ba587b4$var$base64unescape(string));\n    // noinspection JSCheckFunctionSignatures\n    return new TextDecoder().decode((0, $a39eeb69bf620de6$export$2e2bcd8739ae039).inflate(Uint8Array.from(binString, (c)=>c.codePointAt(0))));\n}\nfunction $3e2f0fa58ba587b4$export$4e633de97d65d1c8(string) {\n    return $3e2f0fa58ba587b4$var$base64escape(window.btoa(String.fromCodePoint(...(0, $a39eeb69bf620de6$export$2e2bcd8739ae039).deflate(new TextEncoder().encode(string)))));\n}\nfunction $3e2f0fa58ba587b4$var$base64escape(string) {\n    // https://en.wikipedia.org/wiki/Base64#URL_applications\n    return string.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n}\nfunction $3e2f0fa58ba587b4$var$base64unescape(string) {\n    return (string + \"===\".slice((string.length + 3) % 4)).replace(/-/g, \"+\").replace(/_/g, \"/\");\n}\nfunction $3e2f0fa58ba587b4$export$b1b145d64c7b5823(value, func) {\n    return value === undefined ? value : func(value);\n}\nfunction $3e2f0fa58ba587b4$export$f863c42fae7e138a(rand, max, min = 0) {\n    return Math.floor(rand() * (max - min + 1) + min);\n}\nfunction $3e2f0fa58ba587b4$export$32da5b5043dcd88c() {\n    $3e2f0fa58ba587b4$var$location.assign($3e2f0fa58ba587b4$export$128fa18b7194ef.search);\n}\nfunction $3e2f0fa58ba587b4$export$4b9a4be687eeedb5(str) {\n    return str.split(\"\").reverse().join(\"\");\n}\nfunction $3e2f0fa58ba587b4$export$448332262467e042(rand, array) {\n    // https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_modern_algorithm\n    for(let i = array.length - 1; i > 0; i--){\n        const j = Math.floor(rand() * (i + 1));\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n    return array;\n}\nfunction $3e2f0fa58ba587b4$export$4f889fe9b45273af(a, b) {\n    return Number(a) - Number(b);\n}\nfunction $3e2f0fa58ba587b4$export$ea27ae0a69e9255c(a) {\n    return function() {\n        a |= 0;\n        a = a + 0x9e3779b9 | 0;\n        let t = a ^ a >>> 16;\n        t = Math.imul(t, 0x21f0aaad);\n        t = t ^ t >>> 15;\n        t = Math.imul(t, 0x735a2d97);\n        return ((t ^ t >>> 15) >>> 0) / 4294967296;\n    };\n}\nasync function $3e2f0fa58ba587b4$export$e84ab21a5791681d(string) {\n    try {\n        await $3e2f0fa58ba587b4$var$navigator.clipboard.writeText(string);\n    } catch (error) {\n        console.error(\"Could not write to clipboard.\", error.message);\n    }\n}\n\n\nconst $f1fc5431671d3192$var$console = window.console = window.console || {\n    debug: function() {}\n};\nconst $f1fc5431671d3192$var$consoleDebug = $f1fc5431671d3192$var$console.debug;\nfunction $f1fc5431671d3192$export$1c9f709888824e05(debug) {\n    $f1fc5431671d3192$var$console.debug = debug ? $f1fc5431671d3192$var$consoleDebug : function() {};\n}\n// Silence debug logging by default\n$f1fc5431671d3192$export$1c9f709888824e05((0, $3e2f0fa58ba587b4$export$da1115b7645c376c).has(\"debug\"));\n\n\n\nconst $56e6a699015083d1$var$direction = \"direction\";\nconst $56e6a699015083d1$var$east = \"east\";\nconst $56e6a699015083d1$var$north = \"north\";\nconst $56e6a699015083d1$var$south = \"south\";\nconst $56e6a699015083d1$var$west = \"west\";\nconst $56e6a699015083d1$export$86ae6e8ac17a67c6 = Object.freeze({\n    East: (0, $3e2f0fa58ba587b4$export$307b18b61172f7ed)($56e6a699015083d1$var$direction, $56e6a699015083d1$var$east),\n    North: (0, $3e2f0fa58ba587b4$export$307b18b61172f7ed)($56e6a699015083d1$var$direction, $56e6a699015083d1$var$north),\n    NorthEast: (0, $3e2f0fa58ba587b4$export$307b18b61172f7ed)($56e6a699015083d1$var$direction, $56e6a699015083d1$var$north, $56e6a699015083d1$var$east),\n    NorthWest: (0, $3e2f0fa58ba587b4$export$307b18b61172f7ed)($56e6a699015083d1$var$direction, $56e6a699015083d1$var$north, $56e6a699015083d1$var$west),\n    South: (0, $3e2f0fa58ba587b4$export$307b18b61172f7ed)($56e6a699015083d1$var$direction, $56e6a699015083d1$var$south),\n    SouthEast: (0, $3e2f0fa58ba587b4$export$307b18b61172f7ed)($56e6a699015083d1$var$direction, $56e6a699015083d1$var$south, $56e6a699015083d1$var$east),\n    SouthWest: (0, $3e2f0fa58ba587b4$export$307b18b61172f7ed)($56e6a699015083d1$var$direction, $56e6a699015083d1$var$south, $56e6a699015083d1$var$west),\n    West: (0, $3e2f0fa58ba587b4$export$307b18b61172f7ed)($56e6a699015083d1$var$direction, $56e6a699015083d1$var$west)\n});\nconst $56e6a699015083d1$var$DiagonalDirections = Object.freeze([\n    $56e6a699015083d1$export$86ae6e8ac17a67c6.NorthEast,\n    $56e6a699015083d1$export$86ae6e8ac17a67c6.NorthWest,\n    $56e6a699015083d1$export$86ae6e8ac17a67c6.SouthEast,\n    $56e6a699015083d1$export$86ae6e8ac17a67c6.SouthWest\n]);\nclass $56e6a699015083d1$export$d6e0f5996cc55599 {\n    column;\n    id;\n    row;\n    #neighbors;\n    constructor(row, column){\n        this.id = [\n            row,\n            column\n        ].join(\",\");\n        this.row = Number(row);\n        this.column = Number(column);\n    }\n    add(other) {\n        return new $56e6a699015083d1$export$d6e0f5996cc55599(this.row + other.row, this.column + other.column);\n    }\n    equals(other) {\n        return this.id === other?.id;\n    }\n    getDirection(other) {\n        return this.getNeighbors().find((neighbor)=>neighbor.coordinates.equals(other))?.direction;\n    }\n    getNeighbors() {\n        if (!this.#neighbors) this.#neighbors = $56e6a699015083d1$export$d6e0f5996cc55599.getNeighbors(this);\n        return this.#neighbors;\n    }\n    getNeighborsCrossing(other) {\n        const crossing = $56e6a699015083d1$export$d6e0f5996cc55599.Crossings[this.getDirection(other)] ?? [];\n        return this.getNeighbors().filter((neighbor)=>crossing.includes(neighbor.direction));\n    }\n    isNeighbor(other) {\n        return this.getNeighbors().some((neighbor)=>neighbor.coordinates.equals(other));\n    }\n    toString() {\n        return this.id;\n    }\n    static getNeighbors(coordinates) {\n        return $56e6a699015083d1$export$d6e0f5996cc55599.Neighbors.map((neighbor)=>new $56e6a699015083d1$export$d6e0f5996cc55599.Neighbor(coordinates.add(neighbor.coordinates), neighbor.direction));\n    }\n    static Crossings = Object.freeze({\n        [$56e6a699015083d1$export$86ae6e8ac17a67c6.NorthEast]: [\n            $56e6a699015083d1$export$86ae6e8ac17a67c6.North,\n            $56e6a699015083d1$export$86ae6e8ac17a67c6.East\n        ],\n        [$56e6a699015083d1$export$86ae6e8ac17a67c6.NorthWest]: [\n            $56e6a699015083d1$export$86ae6e8ac17a67c6.North,\n            $56e6a699015083d1$export$86ae6e8ac17a67c6.West\n        ],\n        [$56e6a699015083d1$export$86ae6e8ac17a67c6.SouthEast]: [\n            $56e6a699015083d1$export$86ae6e8ac17a67c6.South,\n            $56e6a699015083d1$export$86ae6e8ac17a67c6.East\n        ],\n        [$56e6a699015083d1$export$86ae6e8ac17a67c6.SouthWest]: [\n            $56e6a699015083d1$export$86ae6e8ac17a67c6.South,\n            $56e6a699015083d1$export$86ae6e8ac17a67c6.West\n        ]\n    });\n    static Neighbor = class {\n        coordinates;\n        direction;\n        isDirectionDiagonal;\n        constructor(coordinates, direction){\n            this.coordinates = coordinates;\n            this.direction = direction;\n            this.isDirectionDiagonal = $56e6a699015083d1$var$DiagonalDirections.includes(direction);\n        }\n    };\n    static Neighbors = Object.freeze([\n        new $56e6a699015083d1$export$d6e0f5996cc55599.Neighbor(new $56e6a699015083d1$export$d6e0f5996cc55599(0, 1), $56e6a699015083d1$export$86ae6e8ac17a67c6.East),\n        new $56e6a699015083d1$export$d6e0f5996cc55599.Neighbor(new $56e6a699015083d1$export$d6e0f5996cc55599(-1, 0), $56e6a699015083d1$export$86ae6e8ac17a67c6.North),\n        new $56e6a699015083d1$export$d6e0f5996cc55599.Neighbor(new $56e6a699015083d1$export$d6e0f5996cc55599(-1, 1), $56e6a699015083d1$export$86ae6e8ac17a67c6.NorthEast),\n        new $56e6a699015083d1$export$d6e0f5996cc55599.Neighbor(new $56e6a699015083d1$export$d6e0f5996cc55599(-1, -1), $56e6a699015083d1$export$86ae6e8ac17a67c6.NorthWest),\n        new $56e6a699015083d1$export$d6e0f5996cc55599.Neighbor(new $56e6a699015083d1$export$d6e0f5996cc55599(1, 0), $56e6a699015083d1$export$86ae6e8ac17a67c6.South),\n        new $56e6a699015083d1$export$d6e0f5996cc55599.Neighbor(new $56e6a699015083d1$export$d6e0f5996cc55599(1, 1), $56e6a699015083d1$export$86ae6e8ac17a67c6.SouthEast),\n        new $56e6a699015083d1$export$d6e0f5996cc55599.Neighbor(new $56e6a699015083d1$export$d6e0f5996cc55599(1, -1), $56e6a699015083d1$export$86ae6e8ac17a67c6.SouthWest),\n        new $56e6a699015083d1$export$d6e0f5996cc55599.Neighbor(new $56e6a699015083d1$export$d6e0f5996cc55599(0, -1), $56e6a699015083d1$export$86ae6e8ac17a67c6.West)\n    ]);\n}\n\n\n\nlet $6ac6f1f1df04c10e$var$nextValue = 0;\nclass $6ac6f1f1df04c10e$export$48ea269755562084 {\n    name;\n    value;\n    constructor(name){\n        this.name = name;\n        this.value = 1 << $6ac6f1f1df04c10e$var$nextValue++;\n    }\n}\nclass $6ac6f1f1df04c10e$export$434ba092ed0eee4e {\n    #value;\n    constructor(...flags){\n        this.set(...flags);\n    }\n    add(...flags) {\n        flags.forEach((flag)=>{\n            this.#value |= flag.value;\n        });\n        return this;\n    }\n    get() {\n        return this.#value;\n    }\n    has(...flags) {\n        return flags.some((flag)=>(this.#value & flag.value) > 0);\n    }\n    remove(...flags) {\n        flags.forEach((flag)=>{\n            this.#value &= ~flag.value;\n        });\n        return this;\n    }\n    set(...flags) {\n        this.#value = 0;\n        flags.forEach((flag)=>{\n            if (typeof flag === \"number\") this.#value = flag;\n            else if (flag instanceof $6ac6f1f1df04c10e$export$434ba092ed0eee4e) this.#value = flag.get();\n            else if (flag instanceof $6ac6f1f1df04c10e$export$48ea269755562084) this.add(flag);\n        });\n        return this;\n    }\n    toString(flags) {\n        return flags.flatMap((flag)=>this.has(flag) ? [\n                flag.name\n            ] : []).join(\",\");\n    }\n}\n\n\nclass $8ee30938c07750df$export$b20b719ec758a20f {\n    #events = [];\n    #options = {\n        context: undefined,\n        element: document\n    };\n    constructor(options = {}, events = []){\n        this.#options = Object.assign(this.#options, options);\n        this.add(events);\n    }\n    add(options = {}, events = []) {\n        // Allow omission of options\n        if (Array.isArray(options)) {\n            events = options;\n            options = {};\n        }\n        if (events.length === 0) return;\n        this.#events = this.#events.concat(events.map((event)=>{\n            event = Object.assign({}, this.#options, options, event);\n            if (!event.type) throw new Error(\"Event type is required\");\n            else if (!Array.isArray(event.type)) event.type = [\n                event.type\n            ];\n            if (event.context) {\n                if (!Array.isArray(event.context)) event.context = [\n                    event.context\n                ];\n                event.handler = event.handler.bind(...event.context);\n            }\n            event.type.forEach((type)=>event.element.addEventListener(type, event.handler, event.options));\n            return event;\n        }));\n    }\n    remove() {\n        this.#events.forEach((event)=>event.type.forEach((type)=>event.element.removeEventListener(type, event.handler)));\n        this.#events = [];\n    }\n}\n\n\nconst $1c1df06bf88efcc4$var$$grid = document.getElementById(\"grid\");\nclass $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea {\n    #$content = document.createElement(\"span\");\n    #$element = document.createElement(\"div\");\n    #coordinates;\n    #eventListeners = new (0, $8ee30938c07750df$export$b20b719ec758a20f)({\n        context: this,\n        element: this.#$element\n    });\n    #state;\n    constructor(coordinates, state){\n        this.#coordinates = coordinates;\n        this.#state = state;\n        this.#eventListeners.add([\n            {\n                type: \"pointerdown\",\n                handler: this.#onSelect\n            },\n            {\n                type: \"pointerenter\",\n                handler: this.#onSelect\n            }\n        ]);\n        this.#$content.className = \"content\";\n        const $background = document.createElement(\"div\");\n        $background.classList.add(\"background\");\n        $background.append(this.#$content);\n        this.#$element.append($background);\n        this.update();\n    }\n    equals(other) {\n        return this.getIndex() === other.getIndex();\n    }\n    getContent() {\n        return this.#state.content;\n    }\n    getCoordinates() {\n        return this.#coordinates;\n    }\n    getDirection(other) {\n        return this.getCoordinates().getDirection(other.getCoordinates());\n    }\n    getElement() {\n        return this.#$element;\n    }\n    getFlags() {\n        return this.#state.getFlags();\n    }\n    getIndex() {\n        return this.#state.index;\n    }\n    isConnected(other) {\n        return this.getFlags().has($1c1df06bf88efcc4$export$f6f0c3fe4ec306ea.FlagsByName[this.getDirection(other)]);\n    }\n    isNeighbor(other) {\n        return this.getCoordinates().isNeighbor(other?.getCoordinates());\n    }\n    reset() {\n        this.update((state)=>{\n            const flags = new (0, $6ac6f1f1df04c10e$export$434ba092ed0eee4e)();\n            const existing = state.getFlags();\n            $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea.StickyFlags.filter((flag)=>existing.has(flag)).forEach((flag)=>flags.add(flag));\n            return state.copy({\n                flags: flags\n            });\n        });\n    }\n    toString() {\n        return `[${$1c1df06bf88efcc4$export$f6f0c3fe4ec306ea.Name}:${this.getCoordinates.toString()}]`;\n    }\n    update(state) {\n        if (state !== undefined) {\n            if (typeof state === \"function\") state = state(this.#state);\n            if (!(state instanceof $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea.State)) throw new Error(\"Cannot update cell state: value given is not of type Cell.State\");\n            this.#state = state;\n        }\n        this.#$element.className = $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea.Name;\n        this.#$element.dataset.index = this.getIndex();\n        const flags = this.getFlags();\n        const activeFlags = Object.values($1c1df06bf88efcc4$export$f6f0c3fe4ec306ea.Flags).filter((flag)=>flags.has(flag));\n        activeFlags.forEach((flag)=>this.#$element.classList.add((0, $3e2f0fa58ba587b4$export$307b18b61172f7ed)($1c1df06bf88efcc4$export$f6f0c3fe4ec306ea.Name, flag.name)));\n        this.#$content.textContent = this.#state.content;\n        return this.#state;\n    }\n    #onSelect(event) {\n        if (event.type === \"pointerdown\") // Release pointer capture on target so other cells can receive events.\n        event.target.releasePointerCapture(event.pointerId);\n        if (event.buttons > 0) {\n            // User has clicked or touched the cell\n            const detail = {\n                cell: this,\n                event: event\n            };\n            setTimeout(()=>$1c1df06bf88efcc4$var$$grid.dispatchEvent(new CustomEvent($1c1df06bf88efcc4$export$f6f0c3fe4ec306ea.Events.Select, {\n                    detail: detail\n                })));\n        }\n    }\n    static Events = Object.freeze({\n        Select: \"cell-select\"\n    });\n    static Flags = Object.freeze({\n        Active: new (0, $6ac6f1f1df04c10e$export$48ea269755562084)(\"active\"),\n        DirectionEast: new (0, $6ac6f1f1df04c10e$export$48ea269755562084)((0, $56e6a699015083d1$export$86ae6e8ac17a67c6).East),\n        DirectionNorth: new (0, $6ac6f1f1df04c10e$export$48ea269755562084)((0, $56e6a699015083d1$export$86ae6e8ac17a67c6).North),\n        DirectionNorthEast: new (0, $6ac6f1f1df04c10e$export$48ea269755562084)((0, $56e6a699015083d1$export$86ae6e8ac17a67c6).NorthEast),\n        DirectionNorthWest: new (0, $6ac6f1f1df04c10e$export$48ea269755562084)((0, $56e6a699015083d1$export$86ae6e8ac17a67c6).NorthWest),\n        DirectionSouth: new (0, $6ac6f1f1df04c10e$export$48ea269755562084)((0, $56e6a699015083d1$export$86ae6e8ac17a67c6).South),\n        DirectionSouthEast: new (0, $6ac6f1f1df04c10e$export$48ea269755562084)((0, $56e6a699015083d1$export$86ae6e8ac17a67c6).SouthEast),\n        DirectionSouthWest: new (0, $6ac6f1f1df04c10e$export$48ea269755562084)((0, $56e6a699015083d1$export$86ae6e8ac17a67c6).SouthWest),\n        DirectionWest: new (0, $6ac6f1f1df04c10e$export$48ea269755562084)((0, $56e6a699015083d1$export$86ae6e8ac17a67c6).West),\n        First: new (0, $6ac6f1f1df04c10e$export$48ea269755562084)(\"first\"),\n        Hint: new (0, $6ac6f1f1df04c10e$export$48ea269755562084)(\"hint\"),\n        Last: new (0, $6ac6f1f1df04c10e$export$48ea269755562084)(\"last\"),\n        Path: new (0, $6ac6f1f1df04c10e$export$48ea269755562084)(\"path\"),\n        Revealed: new (0, $6ac6f1f1df04c10e$export$48ea269755562084)(\"revealed\"),\n        Selected: new (0, $6ac6f1f1df04c10e$export$48ea269755562084)(\"selected\"),\n        Swap: new (0, $6ac6f1f1df04c10e$export$48ea269755562084)(\"swap\"),\n        Swapped: new (0, $6ac6f1f1df04c10e$export$48ea269755562084)(\"swapped\"),\n        Validated: new (0, $6ac6f1f1df04c10e$export$48ea269755562084)(\"validated\"),\n        WordEnd: new (0, $6ac6f1f1df04c10e$export$48ea269755562084)(\"word-end\"),\n        WordStart: new (0, $6ac6f1f1df04c10e$export$48ea269755562084)(\"word-start\")\n    });\n    static FlagsByName = Object.fromEntries(Object.values($1c1df06bf88efcc4$export$f6f0c3fe4ec306ea.Flags).map((flag)=>[\n            flag.name,\n            flag\n        ]));\n    static StickyFlags = Object.freeze([\n        $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea.Flags.Hint,\n        $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea.Flags.Swapped\n    ]);\n    static Name = \"cell\";\n    static State = class {\n        index;\n        content;\n        flags;\n        #flags;\n        constructor(index, content, flags = 0){\n            this.index = index;\n            this.content = content;\n            this.flags = flags instanceof (0, $6ac6f1f1df04c10e$export$434ba092ed0eee4e) ? flags.get() : flags;\n        }\n        copy(settings) {\n            return new $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea.State(settings.index ?? this.index, settings.content ?? this.content, settings.flags ?? this.flags);\n        }\n        getFlags() {\n            return this.#flags ?? (this.#flags = new (0, $6ac6f1f1df04c10e$export$434ba092ed0eee4e)(this.flags));\n        }\n        static fromObject(obj) {\n            return new $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea.State(obj.index, obj.content, obj.flags);\n        }\n    };\n}\n\n\n\n\nclass $97686966a3fec53f$export$94affb487e701bf2 {\n    encoding;\n    getter;\n    key;\n    setter;\n    constructor(key, getter, setter, encoding = []){\n        this.key = key;\n        this.getter = getter;\n        this.setter = setter;\n        this.encoding = encoding;\n    }\n    copy(settings) {\n        return new $97686966a3fec53f$export$94affb487e701bf2(settings.key ?? this.key, settings.getter ?? this.getter, settings.setter ?? this.setter, settings.encoding ?? this.encoding);\n    }\n    decode(value) {\n        if (value === null || value === undefined) return;\n        if (this.encoding.includes($97686966a3fec53f$export$94affb487e701bf2.Encoders.Base64)) value = (0, $3e2f0fa58ba587b4$export$afb15ede80c42aab)(value);\n        if (this.encoding.includes($97686966a3fec53f$export$94affb487e701bf2.Encoders.Json)) value = JSON.parse(value);\n        return value;\n    }\n    encode(value) {\n        if (value === null || value === undefined) return;\n        if (this.encoding.includes($97686966a3fec53f$export$94affb487e701bf2.Encoders.Json)) value = JSON.stringify(value);\n        if (this.encoding.includes($97686966a3fec53f$export$94affb487e701bf2.Encoders.Base64)) value = (0, $3e2f0fa58ba587b4$export$4e633de97d65d1c8)(value);\n        return value;\n    }\n    get() {\n        return this.decode(this.getter(this.key));\n    }\n    set(value) {\n        return this.setter(this.key, this.encode(value));\n    }\n    static localStorage(key, encoding) {\n        return new $97686966a3fec53f$export$94affb487e701bf2(key, (0, $3e2f0fa58ba587b4$export$c2ed3351cac403d1).getItem.bind((0, $3e2f0fa58ba587b4$export$c2ed3351cac403d1)), (0, $3e2f0fa58ba587b4$export$c2ed3351cac403d1).setItem.bind((0, $3e2f0fa58ba587b4$export$c2ed3351cac403d1)), encoding);\n    }\n    static urlParams(key, encoding) {\n        return new $97686966a3fec53f$export$94affb487e701bf2(key, (0, $3e2f0fa58ba587b4$export$da1115b7645c376c).get.bind((0, $3e2f0fa58ba587b4$export$da1115b7645c376c)), (0, $3e2f0fa58ba587b4$export$da1115b7645c376c).set.bind((0, $3e2f0fa58ba587b4$export$da1115b7645c376c)), encoding);\n    }\n    static Encoders = Object.freeze({\n        Base64: \"base64\",\n        Json: \"json\"\n    });\n}\n\n\nclass $0ca0e02f0a4bc377$export$7254cc27399e90bd {\n    #cache;\n    #persistence;\n    #value;\n    constructor(key, defaultValue, options){\n        options = Object.assign({\n            encoding: [\n                (0, $97686966a3fec53f$export$94affb487e701bf2).Encoders.Json\n            ],\n            overrides: [],\n            persistence: true\n        }, options);\n        this.#cache = (0, $97686966a3fec53f$export$94affb487e701bf2).localStorage(key, options.encoding);\n        this.#persistence = options.persistence !== false;\n        this.#value = structuredClone(defaultValue);\n        if (this.#persistence) try {\n            const value = this.#cache.get();\n            if (value !== undefined) {\n                console.debug(`Found local cache for key '${key}'.`, value);\n                this.set(value);\n            }\n        } catch (e) {\n            console.error(`Could not load cache for key '${key}': ${e.message}`);\n        }\n        const overrides = options.overrides ?? [];\n        overrides.forEach((cache)=>{\n            try {\n                const value = cache.get();\n                if (value !== undefined) {\n                    console.debug(`Overriding local cache at key '${cache.key}'.`, value);\n                    this.set(cache.key, value);\n                }\n            } catch (e) {\n                console.error(`Could not override local cache at key '${cache.key}': ${e.message}`);\n            }\n        });\n    }\n    get(key) {\n        return structuredClone(key === undefined ? this.#value : this.#value[key]);\n    }\n    set(key, value) {\n        if (arguments.length === 1) {\n            value = key;\n            key = this.#cache.key;\n        }\n        if (value === undefined) return;\n        const isCacheKey = key === this.#cache.key;\n        value = structuredClone(value);\n        if (isCacheKey) this.#value = value;\n        else this.#value[key] = value;\n        if (this.#persistence) this.#cache.set(this.#value);\n        return this.get();\n    }\n    update(updater) {\n        const state = this.get();\n        return this.set(updater(state) ?? state);\n    }\n}\n\n\n\nclass $f46a7daf15513d62$export$beccbe55c9efb032 {\n    character;\n    frequency;\n    points;\n    weight;\n    constructor(character){\n        this.character = character;\n        this.frequency = $f46a7daf15513d62$export$beccbe55c9efb032.frequencies[character];\n        // Assign points to the letter based on which tier it falls into. Every letter is worth at least one point and\n        // will gain an additional point for each cumulative tier it is in.\n        this.points = $f46a7daf15513d62$export$beccbe55c9efb032.pointTiers.reduce((points, tier)=>points + (this.frequency < tier ? 1 : 0), 1);\n        // Calculate the weight of the letter based on the cumulative frequency of this letter and all those before it.\n        // Weight is on a sliding scale between 0 and 1.\n        const characters = $f46a7daf15513d62$export$beccbe55c9efb032.characters.slice(0, $f46a7daf15513d62$export$beccbe55c9efb032.characters.indexOf(character) + 1);\n        this.weight = characters.reduce((weight, character)=>weight + $f46a7daf15513d62$export$beccbe55c9efb032.frequencies[character], 0);\n    }\n    /**\n   * Stores letters by their frequency of usage. The values must add up to 1.\n   * @see https://en.wikipedia.org/wiki/Letter_frequency#Relative_frequencies_of_letters_in_the_English_language\n   * @type {Object.<string, number>}\n   */ static frequencies = Object.freeze({\n        a: 0.08167,\n        b: 0.01492,\n        c: 0.02782,\n        d: 0.04253,\n        e: 0.12702,\n        f: 0.02228,\n        g: 0.02015,\n        h: 0.06094,\n        i: 0.06966,\n        j: 0.00153,\n        k: 0.00772,\n        l: 0.04025,\n        m: 0.02406,\n        n: 0.06749,\n        o: 0.07507,\n        p: 0.01929,\n        q: 0.00095,\n        r: 0.05987,\n        s: 0.06327,\n        t: 0.09056,\n        u: 0.02758,\n        v: 0.00978,\n        w: 0.02360,\n        x: 0.00150,\n        y: 0.01974,\n        z: 0.00074\n    });\n    static characters = Object.freeze(Object.keys($f46a7daf15513d62$export$beccbe55c9efb032.frequencies));\n    /**\n   * Defines point tiers based on letter frequency percentage.\n   * @type {number[]} Frequency tiers.\n   */ static pointTiers = [\n        0.1,\n        0.5,\n        1,\n        4,\n        8\n    ].map((n)=>n / 100);\n}\nconst $f46a7daf15513d62$export$e893190d69011f56 = Object.fromEntries($f46a7daf15513d62$export$beccbe55c9efb032.characters.map((character)=>[\n        character,\n        new $f46a7daf15513d62$export$beccbe55c9efb032(character)\n    ]));\nconst $f46a7daf15513d62$export$cf980ec1f8b21744 = Object.values($f46a7daf15513d62$export$e893190d69011f56);\nconst $f46a7daf15513d62$var$$letterPoints = document.getElementById(\"letter-points\");\nconst $f46a7daf15513d62$var$letterPointBuckets = {};\n$f46a7daf15513d62$export$cf980ec1f8b21744.forEach((letter)=>($f46a7daf15513d62$var$letterPointBuckets[letter.points] ?? ($f46a7daf15513d62$var$letterPointBuckets[letter.points] = [])).push(letter));\nfor(const points in $f46a7daf15513d62$var$letterPointBuckets){\n    const $li = document.createElement(\"li\");\n    const $points = document.createElement(\"span\");\n    $points.classList.add(\"points\");\n    $points.textContent = `${points} Point${points > 1 ? \"s\" : \"\"}:`;\n    const $letters = document.createElement(\"span\");\n    $letters.classList.add(\"letters\");\n    $letters.textContent = $f46a7daf15513d62$var$letterPointBuckets[points].map((letter)=>letter.character).join(\", \");\n    $li.append($points, $letters);\n    $f46a7daf15513d62$var$$letterPoints.append($li);\n}\n\n\n\n\nclass $d13164380fe1740a$export$1ee6d718c47c2db0 {\n    content;\n    indexes = [];\n    move;\n    points;\n    constructor(width, cells, move){\n        const content = [];\n        const pointScoringLetters = [];\n        cells.forEach((cell)=>{\n            const character = cell.getContent();\n            content.push(character);\n            const letter = (0, $f46a7daf15513d62$export$e893190d69011f56)[character];\n            if (!cell.getFlags().has((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Swapped) || move.value.match === (0, $feafa30b0856daa8$export$ef2184bd89960b14).Match.Exact) // Points are only scored for letters that are not swapped, unless the word exactly matches a secret word.\n            pointScoringLetters.push(letter);\n            this.indexes.push(cell.getIndex());\n        });\n        this.content = content.join(\"\");\n        this.move = move;\n        const lengthMultiplier = Math.floor(pointScoringLetters.length / $d13164380fe1740a$export$1ee6d718c47c2db0.widthMultiplier(width));\n        this.points = pointScoringLetters.reduce((points, letter)=>points + letter.points, 0) * lengthMultiplier;\n    }\n    static widthMultiplier(width) {\n        return Math.floor(width / 2);\n    }\n    static minimumLength = 3;\n}\n\n\n\n\n\n\n\nclass $925c330059e2cdab$export$4ee70ab773570fb9 {\n    sources = {};\n    words = [];\n    async load(source) {\n        if (this.sources[source.name]) {\n            console.debug(`Dictionary '${source.name}' has already been loaded.`);\n            return;\n        }\n        console.debug(`Loading dictionary '${source.name}' from URL: '${source.url}'`);\n        try {\n            // Always use cached copy if it exists\n            const response = await fetch(source.url, {\n                cache: \"force-cache\"\n            });\n            const text = await response.text();\n            const startIndex = this.words.length;\n            this.words = Array.from(new Set(this.words.concat(text.split(\"\\n\").filter((word)=>word.length >= (0, $d13164380fe1740a$export$1ee6d718c47c2db0).minimumLength))));\n            const range = new $925c330059e2cdab$export$4ee70ab773570fb9.Range(startIndex, this.words.length - 1);\n            this.sources[source.name] = source.withRange(range);\n            console.debug(`Words loaded. New word count: ${this.words.length}`);\n        } catch (e) {\n            console.error(`Could not load words for dictionary '${source.name}' from URL '${source.url}'`, e.message);\n        }\n    }\n    /**\n   * Gets random words from the words dictionary until the length is met.\n   * @param rand A PRNG used to choose indexes from the set of words.\n   * @param length The exact total length of the picked words.\n   * @param maximumWordLength Optional maximum length for a picked word.\n   * @returns {*[]|*} An array of words.\n   */ getWords(rand, length, maximumWordLength) {\n        let availableWords = Array.from(this.words);\n        let count = 0;\n        if (maximumWordLength) availableWords = availableWords.filter((word)=>word.length <= maximumWordLength);\n        console.debug(`getWords: ${length} characters with maximum word length of ${maximumWordLength}.`);\n        const result = [];\n        function next() {\n            let maximumWordLength = length - count - (0, $d13164380fe1740a$export$1ee6d718c47c2db0).minimumLength;\n            if (maximumWordLength >= (0, $d13164380fe1740a$export$1ee6d718c47c2db0).minimumLength) availableWords = availableWords.filter((word)=>word.length <= maximumWordLength);\n            else {\n                maximumWordLength = maximumWordLength + (0, $d13164380fe1740a$export$1ee6d718c47c2db0).minimumLength;\n                availableWords = availableWords.filter((word)=>word.length === maximumWordLength);\n            }\n            console.debug(`getWords ${result.length}: ` + `count = ${count}/${length}, ` + `maximumWordLength = ${maximumWordLength}, ` + `availableWords = ${availableWords.length}`);\n            const nextWordIndex = Math.floor(rand() * availableWords.length);\n            const nextWord = availableWords[nextWordIndex];\n            availableWords.splice(nextWordIndex, 1);\n            console.debug(`getWords picked word '${nextWord}' at index ${nextWordIndex}.`);\n            result.push(nextWord);\n            count += nextWord.length;\n            if (count === length) {\n                // Shuffle the results, since the algorithm is biased towards putting the shortest word last.\n                (0, $3e2f0fa58ba587b4$export$448332262467e042)(rand, result);\n                console.debug(`getWords result: ${result.join(\", \")}`);\n                return result;\n            }\n            return next();\n        }\n        return next();\n    }\n    getSource(word) {\n        const index = this.words.indexOf(word);\n        if (index < 0) return;\n        for(const name in this.sources){\n            if (this.sources[name]?.range.contains(index)) return name;\n        }\n    }\n    isValid(word) {\n        return word.length >= (0, $d13164380fe1740a$export$1ee6d718c47c2db0).minimumLength && this.words.includes(word);\n    }\n    unload(name) {\n        const source = this.sources[name];\n        if (!source) {\n            console.warn(`Dictionary '${name}' has not been loaded.`);\n            return;\n        }\n        console.debug(`Unloading dictionary '${source.name}'. Current word count: ${this.words.length}`);\n        source.range.extract(this.words);\n        delete this.sources[source.name];\n        // Update any sources after this one\n        for(const name in this.sources){\n            const other = this.sources[name];\n            if (other.range.startIndex > source.range.startIndex) {\n                const range = other.range.offset(-source.range.count);\n                console.debug(`Updating range for dictionary '${other.name}' from (${other.range.toString()}) to (${range.toString()}).`);\n                this.sources[name] = other.withRange(range);\n            }\n        }\n        console.debug(`Words unloaded. New word count: ${this.words.length}`);\n    }\n    static Range = class {\n        endIndex;\n        count;\n        startIndex;\n        constructor(startIndex, endIndex){\n            this.startIndex = startIndex;\n            this.endIndex = endIndex;\n            this.count = endIndex - startIndex + 1;\n        }\n        contains(index) {\n            return index >= this.startIndex && index <= this.endIndex;\n        }\n        extract(words) {\n            words.splice(this.startIndex, this.count);\n        }\n        offset(count) {\n            return new $925c330059e2cdab$export$4ee70ab773570fb9.Range(this.startIndex + count, this.endIndex + count);\n        }\n        toString() {\n            return [\n                this.startIndex,\n                this.endIndex\n            ].join(\",\");\n        }\n    };\n    static Source = class {\n        name;\n        range;\n        url;\n        constructor(name, url, range){\n            this.name = name;\n            this.url = url;\n            this.range = range;\n        }\n        withRange(range) {\n            return new $925c330059e2cdab$export$4ee70ab773570fb9.Source(this.name, this.url, range);\n        }\n    };\n    static BaseUrl = \"https://raw.githubusercontent.com/kflorence/word-list/\";\n    static Names = Object.freeze({\n        Default: \"default\",\n        Profanity: \"profanity\"\n    });\n    static Sources = Object.freeze({\n        Default: new $925c330059e2cdab$export$4ee70ab773570fb9.Source($925c330059e2cdab$export$4ee70ab773570fb9.Names.Default, `${$925c330059e2cdab$export$4ee70ab773570fb9.BaseUrl}/d00c2d094a4a4c68da1722eec3e83cd5078af771/words.txt`),\n        Profanity: new $925c330059e2cdab$export$4ee70ab773570fb9.Source($925c330059e2cdab$export$4ee70ab773570fb9.Names.Profanity, `${$925c330059e2cdab$export$4ee70ab773570fb9.BaseUrl}/d00c2d094a4a4c68da1722eec3e83cd5078af771/words-profanity.txt`)\n    });\n    static SourcesByName = Object.freeze(Object.fromEntries(Object.entries($925c330059e2cdab$export$4ee70ab773570fb9.Names).map(([key, name])=>[\n            name,\n            $925c330059e2cdab$export$4ee70ab773570fb9.Sources[key]\n        ])));\n}\n\n\n\n\n\nclass $af5c99d8f208fd5c$export$a0db4e1d2ed78ba0 {\n    characters;\n    configuration;\n    dictionary;\n    rand;\n    wordBoundaries;\n    words;\n    #invalidSteps = {};\n    #maxTries;\n    #path = [];\n    #steps;\n    #tries = 0;\n    #restartThreshold;\n    constructor(configuration, dictionary){\n        this.rand = (0, $3e2f0fa58ba587b4$export$ea27ae0a69e9255c)(configuration.hash);\n        this.words = dictionary.getWords(this.rand, configuration.size, Math.ceil(configuration.width + configuration.width / 2));\n        const words = Array.from(this.words);\n        const characters = words.reduce((characters, word)=>characters.concat(word.split(\"\")), []);\n        if (configuration.mode === (0, $feafa30b0856daa8$export$ef2184bd89960b14).Modes.Challenge) {\n            // Randomly reverse up to half of the words\n            const reverseCount = (0, $3e2f0fa58ba587b4$export$f863c42fae7e138a)(this.rand, Math.floor(words.length / 2));\n            console.debug(`Reversing ${reverseCount} words.`);\n            (0, $3e2f0fa58ba587b4$export$c8245504e56d23ee)(this.rand, words, reverseCount).forEach((index)=>{\n                words[index] = (0, $3e2f0fa58ba587b4$export$4b9a4be687eeedb5)(words[index]);\n            });\n            // Randomly swap up to 1/8 of characters\n            const swapCount = (0, $3e2f0fa58ba587b4$export$f863c42fae7e138a)(this.rand, Math.floor(characters.length / 8)) * 2;\n            console.debug(`Swapping ${swapCount} characters.`);\n            const swapIndexes = (0, $3e2f0fa58ba587b4$export$c8245504e56d23ee)(this.rand, characters, swapCount);\n            while(swapIndexes.length){\n                const [sourceIndex] = swapIndexes.splice(0, 1);\n                const [targetIndex] = swapIndexes.splice(swapIndexes.length - 1, 1);\n                console.debug(`Swapping ${sourceIndex} (${characters[sourceIndex]}) with ${targetIndex} (${characters[targetIndex]})`);\n                const source = characters[sourceIndex];\n                characters[sourceIndex] = characters[targetIndex];\n                characters[targetIndex] = source;\n            }\n        }\n        this.characters = characters;\n        this.configuration = configuration;\n        this.dictionary = dictionary;\n        this.wordBoundaries = $af5c99d8f208fd5c$export$a0db4e1d2ed78ba0.getWordBoundaries(this.words);\n        this.#steps = new Array(configuration.size);\n        this.#restartThreshold = configuration.size * configuration.width;\n        this.#maxTries = this.#restartThreshold * configuration.size;\n    }\n    /**\n   * Generate grid state configuration.\n   * @returns {Grid.State.Configuration}\n   */ generate() {\n        while(this.#path.length < this.configuration.size)this.#step();\n        const cells = this.#steps.map((step)=>step.state);\n        const path = this.#path.map((step)=>step.index);\n        const wordIndexes = this.wordBoundaries.map((boundary)=>boundary.map((index)=>path[index]));\n        console.debug(\"Done.\", path);\n        return new (0, $feafa30b0856daa8$export$ef2184bd89960b14).State.Configuration(cells, path, this.words, wordIndexes);\n    }\n    #getAvailableCellIndexes() {\n        // Return an array of all indexes that don't contain a value\n        return [\n            ...this.#steps\n        ].flatMap((v, i)=>v === undefined ? [\n                i\n            ] : []);\n    }\n    #getConnectableIndexes(pool) {\n        const connectable = [];\n        const queue = [];\n        const visited = {};\n        function dequeue() {\n            const index = queue.pop();\n            connectable.push(index);\n            // Remove this index from the pool\n            pool.splice(pool.indexOf(index), 1);\n            return index;\n        }\n        function enqueue(index) {\n            visited[index] = true;\n            queue.push(index);\n        }\n        // Start processing from the end\n        enqueue(pool[pool.length - 1]);\n        while(queue.length > 0){\n            const index = dequeue();\n            const coordinates = this.configuration.getCoordinates(index);\n            const validIndexes = pool.filter((index)=>!visited[index]);\n            if (validIndexes.length) // Enqueue all valid neighbors\n            this.#getNeighbors(coordinates, validIndexes).forEach((neighbor)=>enqueue(this.configuration.getIndex(neighbor.coordinates)));\n        }\n        return connectable.sort((a, b)=>a - b);\n    }\n    #getConnectableGroups(indexes) {\n        const groups = [];\n        const pool = Array.from(indexes);\n        while(pool.length > 0)groups.push(this.#getConnectableIndexes(pool));\n        return groups;\n    }\n    #getNeighbors(coordinates, validIndexes) {\n        if (!validIndexes.length) return [];\n        return coordinates.getNeighbors().filter((neighbor)=>{\n            if (!this.configuration.isValid(neighbor.coordinates)) return false;\n            const index = this.configuration.getIndex(neighbor.coordinates);\n            if (validIndexes && !validIndexes.includes(index)) return false;\n            if (neighbor.isDirectionDiagonal) {\n                // console.log('neighbor is directional', neighbor)\n                const [source, target] = neighbor.coordinates.getNeighborsCrossing(coordinates).map((neighbor)=>{\n                    const index = this.configuration.getIndex(neighbor.coordinates);\n                    return this.#steps[index];\n                });\n                // console.log(source, target, source?.isConnected(target))\n                if (source?.isConnected(target)) // Eliminate neighbors that cannot be reached due to crossing paths\n                return false;\n            }\n            return true;\n        });\n    }\n    #step() {\n        this.#tries++;\n        const steps = this.#path.length;\n        const stepsRemaining = this.configuration.size - steps;\n        console.debug(`Steps remaining: ${stepsRemaining}. Total tries: ${this.#tries}`);\n        if (this.#tries > this.#maxTries) // Shouldn't happen, but break the loop if it gets stuck for some reason.\n        throw new Error(`Too many tries: ${this.#tries}. Stopping.`);\n        else if (this.#tries % this.#restartThreshold === 0) {\n            // Sometimes a random path causes too many choices. To speed things up, restart every X number of tries.\n            console.debug(\"Exhausted tries on current path. Starting over.\");\n            this.#restart();\n        }\n        const availableCellIndexes = this.#getAvailableCellIndexes();\n        const lastStep = this.#path[steps - 1];\n        if (!lastStep) {\n            // First step\n            const index = (0, $3e2f0fa58ba587b4$export$f863c42fae7e138a)(this.rand, availableCellIndexes.length - 1);\n            this.#addStep(availableCellIndexes[index]);\n            return;\n        }\n        // Filter out any steps we have already determined to be invalid from this point.\n        const validStepIndexes = availableCellIndexes.filter((index)=>!this.#invalidSteps[$af5c99d8f208fd5c$var$Step.key(lastStep.key, index)]);\n        // The minimum group size after picking the next step\n        const minGroupSize = stepsRemaining - 1;\n        const validNeighbors = this.#getNeighbors(lastStep.coordinates, validStepIndexes).filter((neighbor)=>{\n            const index = this.configuration.getIndex(neighbor.coordinates);\n            // Assess groupability of available indexes assuming this neighbor is picked, and so removed from availability.\n            const groupableIndexes = availableCellIndexes.filter((available)=>available !== index);\n            const groups = this.#getConnectableGroups(groupableIndexes);\n            console.debug(\"Found groups\", groups, \"for neighbor\", neighbor, \"with available indexes\", groupableIndexes);\n            if (groups.length > 1) {\n                console.debug(\"Excluding neighbor: multiple groups\", neighbor);\n                return false;\n            } else if (groups.length === 1 && groups[0].length < minGroupSize) {\n                // Picking this neighbor would result in a group that is too small for the number of remaining steps.\n                console.debug(\"Excluding neighbor: group is too small\", neighbor);\n                return false;\n            }\n            return true;\n        });\n        if (!validNeighbors.length) {\n            console.debug(\"No valid steps from here. Removing last step and trying again.\");\n            return this.#removeLastStep();\n        }\n        // Pick a random neighbor from the list of valid neighbors to step to\n        const index = (0, $3e2f0fa58ba587b4$export$f863c42fae7e138a)(this.rand, validNeighbors.length - 1);\n        this.#addStep(this.configuration.getIndex(validNeighbors[index].coordinates), lastStep);\n    }\n    #addStep(index, lastStep) {\n        const coordinates = this.configuration.getCoordinates(index);\n        const character = this.characters[this.#path.length];\n        const step = new $af5c99d8f208fd5c$var$Step(new (0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).State(index, character), coordinates, lastStep);\n        this.#steps[index] = step;\n        this.#path.push(step);\n        console.debug(\"Added step:\", step);\n    }\n    #removeLastStep() {\n        const step = this.#path.pop();\n        const index = step.index;\n        delete this.#steps[index];\n        // Mark this choice as invalid so we don't try it again\n        this.#invalidSteps[step.key] = true;\n        console.debug(\"Removed step:\", step);\n    }\n    #restart() {\n        while(this.#path.length > 0)this.#removeLastStep();\n        for(const key in this.#invalidSteps)this.#invalidSteps[key] = {};\n    }\n    static getWordBoundaries(words) {\n        return words.reduce((boundaries, word)=>{\n            const last = boundaries[boundaries.length - 1];\n            const lastIndex = last ? last[last.length - 1] + 1 : 0;\n            boundaries.push([\n                ...word.split(\"\").map((_, index)=>lastIndex + index)\n            ]);\n            return boundaries;\n        }, []);\n    }\n}\nclass $af5c99d8f208fd5c$var$Step {\n    coordinates;\n    index;\n    key;\n    parent;\n    state;\n    constructor(state, coordinates, parent){\n        this.coordinates = coordinates;\n        this.index = state.index;\n        this.key = parent ? $af5c99d8f208fd5c$var$Step.key(parent.key, this.index) : this.index.toString();\n        this.parent = parent;\n        this.state = state;\n    }\n    equals(other) {\n        return this.index === other?.index;\n    }\n    isConnected(other) {\n        return (this.parent?.equals(other) || other?.parent?.equals(this)) === true;\n    }\n    static key(...parts) {\n        return parts.join(\".\");\n    }\n}\n\n\nconst $feafa30b0856daa8$var$$grid = document.getElementById(\"grid\");\nclass $feafa30b0856daa8$export$ef2184bd89960b14 {\n    #active;\n    #cells = [];\n    #configuration;\n    #dictionary;\n    #eventListeners = new (0, $8ee30938c07750df$export$b20b719ec758a20f)({\n        context: this,\n        element: $feafa30b0856daa8$var$$grid\n    });\n    #pointerIndex = -1;\n    #selection = [];\n    #selectionStart;\n    #state;\n    constructor(dictionary, width, mode){\n        this.#configuration = new $feafa30b0856daa8$export$ef2184bd89960b14.Configuration($feafa30b0856daa8$export$ef2184bd89960b14.getId(), width, mode);\n        this.#dictionary = dictionary;\n        const sharedSolution = $feafa30b0856daa8$export$ef2184bd89960b14.getSolution(this.#configuration.hash);\n        // Don't persist changes locally if a solution is provided in the URL\n        const persistence = sharedSolution === undefined;\n        const initialState = new $feafa30b0856daa8$export$ef2184bd89960b14.State(undefined, sharedSolution, new $feafa30b0856daa8$export$ef2184bd89960b14.State.User(), $feafa30b0856daa8$export$ef2184bd89960b14.State.Version);\n        this.#state = new (0, $0ca0e02f0a4bc377$export$7254cc27399e90bd)(this.#configuration.hash, initialState, {\n            persistence: persistence\n        });\n        const state = this.getState();\n        if (state.version < $feafa30b0856daa8$export$ef2184bd89960b14.State.Version) {\n            console.warn(`Ignoring stale cache with version ${state.version}. Current version: ${$feafa30b0856daa8$export$ef2184bd89960b14.State.Version}`);\n            this.#state.set(initialState);\n        }\n        if ((0, $3e2f0fa58ba587b4$export$da1115b7645c376c).has(\"reset\")) {\n            console.debug(`Resetting solution for path '${this.#configuration.id}'.`);\n            this.#resetSolution();\n            (0, $3e2f0fa58ba587b4$export$da1115b7645c376c).delete(\"reset\");\n            (0, $3e2f0fa58ba587b4$export$55abd4691b317664).replaceState((0, $3e2f0fa58ba587b4$export$55abd4691b317664).state, \"reset\", (0, $3e2f0fa58ba587b4$export$128fa18b7194ef));\n        }\n        document.body.classList.add((0, $3e2f0fa58ba587b4$export$307b18b61172f7ed)($feafa30b0856daa8$export$ef2184bd89960b14.Name, \"mode\", this.#configuration.mode));\n        $feafa30b0856daa8$var$$grid.dataset.width = this.#configuration.width;\n        this.#eventListeners.add([\n            {\n                type: (0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Events.Select,\n                handler: this.#onSelect\n            },\n            {\n                type: \"pointerup\",\n                element: document,\n                handler: this.#onPointerUp\n            }\n        ]);\n    }\n    getConfiguration() {\n        return this.#configuration;\n    }\n    getMoves() {\n        return this.getState().solution.moves;\n    }\n    getSelection() {\n        const cells = Array.from(this.#selection);\n        if (!cells.length) return new $feafa30b0856daa8$export$ef2184bd89960b14.Selection(cells);\n        let pathIndexes = $feafa30b0856daa8$export$ef2184bd89960b14.getIndexes(cells);\n        const lastPathCell = this.#getLastPathCell();\n        if (lastPathCell) {\n            // Make sure the selection can anchor to the existing path.\n            const selectionAnchorIndex = this.#getSelectionAnchorIndex(lastPathCell);\n            if (selectionAnchorIndex < 0) {\n                console.debug(\"Unable to anchor selection to existing path.\");\n                pathIndexes.splice(0);\n            } else if (selectionAnchorIndex !== 0) {\n                console.debug(\"Anchoring selection at end.\");\n                // Reverse pathIndexes to ensure they get stored in state in the proper order.\n                pathIndexes.reverse();\n            } else console.debug(\"Anchoring selection at beginning.\");\n        }\n        let content = $feafa30b0856daa8$export$ef2184bd89960b14.getContent(cells);\n        let isValid = false;\n        if (pathIndexes.length) {\n            isValid = this.#dictionary.isValid(content);\n            if (!isValid) {\n                // Try the selection in reverse\n                const contentReversed = (0, $3e2f0fa58ba587b4$export$4b9a4be687eeedb5)(content);\n                isValid = this.#dictionary.isValid(contentReversed);\n                if (isValid) {\n                    // The word was spelled backwards\n                    cells.reverse();\n                    content = contentReversed;\n                }\n            }\n        }\n        const state = this.getState();\n        const wordIndexes = $feafa30b0856daa8$export$ef2184bd89960b14.getIndexes(cells);\n        const hiddenWordIndex = state.getHiddenWordIndex();\n        const hiddenWordIndexes = state.configuration.wordIndexes[hiddenWordIndex] ?? [];\n        const revealedIndexes = wordIndexes.filter((index)=>hiddenWordIndexes.includes(index));\n        const hintIndexes = revealedIndexes.filter((index)=>!state.solution.hints.includes(index));\n        const isHiddenWord = isValid && (this.#configuration.mode === $feafa30b0856daa8$export$ef2184bd89960b14.Modes.Challenge ? // In challenge mode, the spelled word must exist in the list of words used to generate the grid\n        state.configuration.words.includes(content) : // In pathfinder mode, the content must match that of the current hidden word\n        // and the same path indexes must be used to create the word, regardless of order.\n        isValid && state.configuration.words[hiddenWordIndex] === content && (0, $3e2f0fa58ba587b4$export$22d6d01dd47e89dd)(hiddenWordIndexes, wordIndexes, (0, $3e2f0fa58ba587b4$export$4f889fe9b45273af)));\n        const updateIndexes = lastPathCell ? pathIndexes.concat([\n            lastPathCell.getIndex()\n        ]) : pathIndexes;\n        if (isValid && this.#configuration.mode === $feafa30b0856daa8$export$ef2184bd89960b14.Modes.Pathfinder) {\n            const allHiddenWordHintIndexesUsed = hiddenWordIndexes.every((index)=>!state.solution.hints.includes(index) || wordIndexes.includes(index));\n            const previouslyGuessedWordsByIndex = state.solution.moves.filter((move)=>move.type === $feafa30b0856daa8$export$ef2184bd89960b14.Move.Types.Spell && move.value.hiddenWordIndex === hiddenWordIndex).map((move)=>move.value.index);\n            const previouslyGuessedWordIndexes = state.solution.words.filter((word, index)=>previouslyGuessedWordsByIndex.includes(index));\n            // Reject words where not all previous hint indexes have been used and duplicate guesses (by path index) for the\n            // same hidden word.\n            isValid = allHiddenWordHintIndexesUsed && !(0, $3e2f0fa58ba587b4$export$22012a5c726bef55)(previouslyGuessedWordIndexes, wordIndexes);\n            if (isValid && isHiddenWord) // Ensure that the path matches the generated path to prevent the user from getting stuck in the case they\n            // spell a matching hidden word using the same indexes but in a different order.\n            pathIndexes = Array.from(hiddenWordIndexes);\n        }\n        return new $feafa30b0856daa8$export$ef2184bd89960b14.Selection(cells, content, pathIndexes, hintIndexes, updateIndexes, wordIndexes, hiddenWordIndex, hiddenWordIndexes, isHiddenWord, isValid);\n    }\n    getState() {\n        return $feafa30b0856daa8$export$ef2184bd89960b14.State.fromObject(this.#state.get());\n    }\n    getStatistics(state) {\n        state ??= this.getState();\n        return new $feafa30b0856daa8$export$ef2184bd89960b14.Statistics(this.#configuration, state, this.getWords(state));\n    }\n    getSwaps() {\n        const state = this.getState();\n        return state.solution.swaps.map((indexes)=>indexes.map((index)=>{\n                const cell = this.#cells[index];\n                const content = state.configuration.cells[index].content;\n                const coordinates = cell.getCoordinates().toString();\n                return `${content} (${coordinates})`;\n            }));\n    }\n    getWords(state) {\n        state ??= this.getState();\n        return state.solution.words.map((word, index)=>{\n            const move = state.solution.moves.find((move)=>move.type === $feafa30b0856daa8$export$ef2184bd89960b14.Move.Types.Spell && move.value.index === index);\n            return new (0, $d13164380fe1740a$export$1ee6d718c47c2db0)(this.#configuration.width, word.map((index)=>this.#cells[index]), move);\n        });\n    }\n    hasHint(state) {\n        return this.#getNextHint(state ?? this.getState()) !== undefined;\n    }\n    hint() {\n        if (this.#configuration.mode === $feafa30b0856daa8$export$ef2184bd89960b14.Modes.Challenge) // No hints in challenge mode\n        return;\n        const state = this.getState();\n        const index = this.#getNextHint(state);\n        if (index === undefined) return;\n        state.solution.hints.push(index);\n        state.solution.moves.push(new $feafa30b0856daa8$export$ef2184bd89960b14.Move($feafa30b0856daa8$export$ef2184bd89960b14.Move.Types.Hint, index));\n        this.#setState(state);\n        this.#update([\n            index\n        ]);\n    }\n    #getNextHint(state) {\n        return state.configuration.wordIndexes[state.getHiddenWordIndex()]?.find((index)=>!state.solution.hints.includes(index));\n    }\n    removeSwap(index) {\n        const state = this.getState();\n        // Remove the swap\n        const swap = state.solution.swaps.splice(index, 1)[0];\n        // Update moves\n        const moveIndex = state.solution.moves.findIndex((move)=>move.type === $feafa30b0856daa8$export$ef2184bd89960b14.Move.Types.Swap && move.value === index);\n        state.solution.moves.splice(moveIndex, 1);\n        this.#setState(state);\n        // If one of the swapped cells was part of a word, remove the word, too.\n        const wordIndex = state.solution.words.findIndex((indexes)=>swap.some((index)=>indexes.indexOf(index) >= 0));\n        if (wordIndex >= 0) this.removeWord(wordIndex);\n        this.#update(swap);\n    }\n    removeWord(index) {\n        const state = this.getState();\n        // Remove the word and everything after it\n        const firstRemovedWord = state.solution.words.splice(index)[0];\n        const earliestPathIndex = state.solution.path.findIndex((index)=>firstRemovedWord.indexOf(index) >= 0);\n        // Remove everything after and including the first matched path index.\n        const pathIndexes = state.solution.path.splice(earliestPathIndex);\n        // Update word validation sources\n        state.solution.sources.splice(index);\n        // Update moves\n        state.solution.moves = state.solution.moves.filter((move)=>{\n            // Remove any spell moves including and after the removed word index\n            return !(move.type === $feafa30b0856daa8$export$ef2184bd89960b14.Move.Types.Spell && move.value.index >= index);\n        });\n        this.#setState(state);\n        const lastPathCellIndex = state.solution.path[state.solution.path.length - 1];\n        if (lastPathCellIndex !== undefined) // Also update the last path item so the link can be removed.\n        pathIndexes.push(lastPathCellIndex);\n        this.#update(pathIndexes);\n    }\n    reset() {\n        this.#resetSolution();\n        this.#update($feafa30b0856daa8$export$ef2184bd89960b14.getIndexes(this.#cells));\n    }\n    setup() {\n        let configuration = this.#state.get($feafa30b0856daa8$export$ef2184bd89960b14.State.Keys.Configuration);\n        if (!configuration) {\n            // This grid has not been generated yet. Generate it and cache it.\n            const generator = new (0, $af5c99d8f208fd5c$export$a0db4e1d2ed78ba0)(this.#configuration, this.#dictionary);\n            configuration = generator.generate();\n            this.#state.set($feafa30b0856daa8$export$ef2184bd89960b14.State.Keys.Configuration, configuration);\n        }\n        const solution = this.#state.get($feafa30b0856daa8$export$ef2184bd89960b14.State.Keys.Solution);\n        if (!solution) this.#resetSolution();\n        this.#cells = configuration.cells.map((state)=>new (0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea)(this.#configuration.getCoordinates(state.index), (0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).State.fromObject(state)));\n        this.#update($feafa30b0856daa8$export$ef2184bd89960b14.getIndexes(this.#cells));\n        $feafa30b0856daa8$var$$grid.replaceChildren(...this.#cells.map((cell)=>cell.getElement()));\n        $feafa30b0856daa8$var$$grid.classList.remove($feafa30b0856daa8$export$ef2184bd89960b14.ClassNames.Loading);\n    }\n    undo() {\n        if (this.#selection.length) {\n            // If there is an active selection, de-select it.\n            this.#deselect(this.#selection.splice(0));\n            return;\n        }\n        const state = this.getState();\n        const moves = state.solution.moves.filter((move)=>move.type !== $feafa30b0856daa8$export$ef2184bd89960b14.Move.Types.Hint);\n        if (moves.length === 0) // If there are no moves, nothing to do.\n        return;\n        const move = moves[moves.length - 1];\n        switch(move.type){\n            case $feafa30b0856daa8$export$ef2184bd89960b14.Move.Types.Spell:\n                this.removeWord(move.value.index);\n                break;\n            case $feafa30b0856daa8$export$ef2184bd89960b14.Move.Types.Swap:\n                this.removeSwap(move.value);\n                break;\n        }\n    }\n    #activate(cell) {\n        this.#deactivate();\n        cell.update((state)=>state.copy({\n                flags: state.getFlags().add((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Active)\n            }));\n        this.#active = cell;\n    }\n    #anchorSelection(lastPathItem) {\n        const anchor = this.#selection[this.#getSelectionAnchorIndex(lastPathItem)];\n        if (anchor) {\n            // Visually anchor the selection to the end of the path.\n            const direction = lastPathItem.getDirection(anchor);\n            lastPathItem.update((state)=>state.copy({\n                    flags: state.getFlags().add((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).FlagsByName[direction])\n                }));\n        }\n    }\n    #deactivate() {\n        if (!this.#active) return;\n        this.#active.update((state)=>state.copy({\n                flags: state.getFlags().remove((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Active)\n            }));\n        this.#active = undefined;\n    }\n    #deselect(selection) {\n        selection.forEach((cell)=>cell.reset());\n        const lastPathCell = this.#getLastPathCell();\n        if (lastPathCell) this.#update([\n            lastPathCell.getIndex()\n        ]);\n        this.#dispatch($feafa30b0856daa8$export$ef2184bd89960b14.Events.Selection);\n    }\n    #dispatch(name, detail = null) {\n        const event = new CustomEvent(name, {\n            detail: detail\n        });\n        // Ensure event is emitted after any currently processing events have been handled\n        setTimeout(()=>document.dispatchEvent(event));\n    }\n    #getLastPathCell() {\n        const state = this.getState();\n        const path = state.solution.path;\n        return this.#cells[path[path.length - 1]];\n    }\n    #getSelectionAnchorIndex(lastPathCell) {\n        if (this.#selection.length === 0) return;\n        lastPathCell ??= this.#getLastPathCell();\n        if (!lastPathCell) return;\n        // Try to anchor at the head of the selection first.\n        const indexes = [\n            0\n        ];\n        const lastIndex = this.#selection.length - 1;\n        if (lastIndex !== 0) indexes.push(lastIndex);\n        return indexes.find((index)=>{\n            const cell = this.#selection[index];\n            return !cell.getFlags().has((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Swap) && this.#isValid(lastPathCell, cell);\n        }) ?? -1;\n    }\n    #isCrossing(source, target) {\n        // Get the neighbors that if connected would cause the path to cross\n        const [first, second] = source.getCoordinates().getNeighborsCrossing(target.getCoordinates()).map((neighbor)=>this.#cells[this.#configuration.getIndex(neighbor.coordinates)]);\n        // Check both of them to see if they are connected to the other one in any direction.\n        return first?.isConnected(second) || second?.isConnected(first) || false;\n    }\n    #isValid(source, target) {\n        return source?.isNeighbor(target) && !this.#isCrossing(source, target);\n    }\n    #onPointerUp(event) {\n        this.#deactivate();\n        if (!this.#selectionStart) {\n            // User did not tap on a cell.\n            if (!event.target.closest(\"#grid\") && !event.target.closest(\"#undo\")) // User tapped outside the grid area and not on the undo button, de-select everything.\n            this.#deselect(this.#selection.splice(0));\n            return;\n        }\n        const length = this.#selection.length;\n        const count = length - this.#selectionStart.length;\n        if (count > 1) // User selected multiple cells before pointerup was fired. Validate the selection.\n        this.#validate();\n        else if (length === 2) {\n            const last = this.#selection[length - 1];\n            if (last.getFlags().has((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Swap)) this.#swap(...this.#selection.splice(0));\n        }\n        this.#selectionStart = undefined;\n    }\n    #onSelect(event) {\n        if (!this.#selectionStart && event.detail.event.type !== \"pointerdown\") {\n            console.debug(\"Ignoring cell events prior to pointerdown.\");\n            // Mobile sends out a 'pointerenter' event before the first 'pointerdown'.\n            // Ignore it, otherwise onSelect will get called multiple times for a single touch.\n            return;\n        }\n        const cell = event.detail.cell;\n        this.#activate(cell);\n        if (cell.getFlags().has((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Validated)) // These cells cannot be selected\n        return;\n        // User is doing a multi-select if multiple onSelect events have been fired before pointerup resets selectionStart.\n        const isMultiSelect = this.#selectionStart !== undefined;\n        if (!isMultiSelect) // Save a reference to the first selection event.\n        this.#selectionStart = new $feafa30b0856daa8$export$ef2184bd89960b14.SelectionStart(event, this.#selection.length);\n        else if (this.#selection.length === 0) {\n            console.debug(\"SelectMultiple: Selection was cleared during multi-select. Wait for pointerup before continuing.\");\n            return;\n        }\n        const flags = [];\n        const lastCell = this.#selection[this.#selection.length - 1];\n        const selectedIndex = this.#selection.findIndex((selected)=>selected.equals(cell));\n        if (lastCell?.getFlags().has((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Swap)) this.#onSwap(cell, lastCell, flags, selectedIndex, isMultiSelect);\n        else {\n            const isNeighbor = cell.isNeighbor(lastCell);\n            const isValid = this.#isValid(lastCell, cell);\n            if (isMultiSelect) this.#onSelectMultiple(cell, lastCell, flags, selectedIndex, isValid);\n            else this.#onSelectSingle(cell, lastCell, flags, selectedIndex, isNeighbor, isValid);\n        }\n        if (flags.includes((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Path)) flags.push((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).FlagsByName[cell.getDirection(lastCell)], (0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Selected);\n        const lastPathCell = this.#getLastPathCell();\n        if (lastPathCell) {\n            // Update the visual anchor of selection to path.\n            this.#update([\n                lastPathCell.getIndex()\n            ]);\n            if (this.#selection.length && !flags.includes((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Swap)) this.#anchorSelection(lastPathCell);\n        }\n        if (flags.length) {\n            cell.update((state)=>state.copy({\n                    flags: state.getFlags().add(...flags)\n                }));\n            this.#dispatch($feafa30b0856daa8$export$ef2184bd89960b14.Events.Selection);\n        }\n    }\n    #onSelectMultiple(cell, lastCell, flags, selectedIndex, isValid) {\n        if (selectedIndex >= 0) {\n            console.debug(\"SelectMultiple: Re-selecting a previously selected cell. De-select everything after it.\");\n            this.#deselect(this.#selection.splice(selectedIndex + 1));\n        } else if (isValid) {\n            console.debug(\"SelectMultiple: A valid new cell has been selected.\");\n            this.#selection.push(cell);\n            flags.push((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Path);\n        } else console.debug(\"SelectMultiple: Invalid cell selected. Ignoring.\");\n    }\n    #onSelectSingle(cell, lastCell, flags, selectedIndex, isNeighbor, isValid) {\n        if (selectedIndex >= 0) {\n            // An already selected cell was tapped.\n            if (// No swaps outside of challenge mode\n            this.#configuration.mode === $feafa30b0856daa8$export$ef2184bd89960b14.Modes.Challenge && this.#selection.length === 1 && !cell.getFlags().has((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Swapped)) {\n                console.debug(\"SelectSingle: A non-swapped selected cell has been re-tapped. Mark for swap.\");\n                flags.push((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Swap);\n            } else {\n                const lastSelectionIndex = this.#selection.length - 1;\n                if (this.#selection.length >= (0, $d13164380fe1740a$export$1ee6d718c47c2db0).minimumLength && selectedIndex === lastSelectionIndex) {\n                    console.debug(\"SelectSingle: Submitting selection for validation.\");\n                    this.#validate();\n                } else {\n                    console.debug(\"SelectSingle: Re-selecting a previously selected cell. De-select everything after it.\");\n                    this.#deselect(this.#selection.splice(selectedIndex + 1));\n                }\n            }\n        } else if (!isNeighbor) {\n            if (this.#selection.length) {\n                console.debug(\"SelectSingle: A non-neighboring cell has been selected. De-select everything else.\");\n                this.#deselect(this.#selection.splice(0));\n            }\n            this.#selection.push(cell);\n            flags.push((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Selected);\n        } else if (isValid) {\n            console.debug(\"SelectSingle: A valid new cell has been selected.\");\n            this.#selection.push(cell);\n            flags.push((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Path);\n        } else console.debug(\"SelectSingle: Invalid cell selected. Ignoring.\");\n    }\n    #onSwap(cell, lastCell, flags, selectedIndex, isMultiSelect) {\n        if (isMultiSelect) {\n            console.debug(\"Swap: Multiple target cells selected. De-selecting everything except source cell.\");\n            this.#deselect(this.#selection.splice(1));\n        } else if (// User tapped a cell marked for swap or already swapped\n        cell.getFlags().has((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Swap, (0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Swapped) || // User tapped a cell with the same content as the cell marked for swap\n        cell.getContent() === lastCell.getContent()) {\n            console.debug(\"Swap: Invalid target cell selected. Cancelling swap.\");\n            this.#deselect(this.#selection.splice(0));\n        } else if (!cell.getFlags().has((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Swapped)) {\n            console.debug(\"Swap: Valid target cell selected. Initiating swap.\");\n            flags.push((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Swap);\n            this.#selection.push(cell);\n        }\n    }\n    #resetSolution() {\n        this.#state.update((state)=>{\n            const hash = this.#configuration.hash;\n            const hints = this.#configuration.mode === $feafa30b0856daa8$export$ef2184bd89960b14.Modes.Pathfinder ? [\n                state.configuration.path[0]\n            ] : [];\n            state.solution = $feafa30b0856daa8$export$ef2184bd89960b14.State.Solution.fromObject({\n                hash: hash,\n                hints: hints\n            });\n        });\n    }\n    #setState(state) {\n        this.#state.set(state);\n        if ((0, $3e2f0fa58ba587b4$export$da1115b7645c376c).has($feafa30b0856daa8$export$ef2184bd89960b14.Params.Solution.key)) // Update solution URL parameter if present\n        $feafa30b0856daa8$export$ef2184bd89960b14.Params.Solution.set(state.solution);\n    }\n    #swap(source, target) {\n        const state = this.getState();\n        const swap = [\n            source.getIndex(),\n            target.getIndex()\n        ];\n        state.solution.swaps.push(swap);\n        // Update moves\n        state.solution.moves.push(new $feafa30b0856daa8$export$ef2184bd89960b14.Move($feafa30b0856daa8$export$ef2184bd89960b14.Move.Types.Swap, state.solution.swaps.length - 1));\n        this.#setState(state);\n        this.#update(swap);\n    }\n    /**\n   * This method is responsible for updating the state of cells belonging to the given indexes by examining the current\n   * state of the grid.\n   * @param indexes The indexes of the cells to update.\n   */ #update(indexes) {\n        const state = this.getState();\n        const cells = state.configuration.cells;\n        const hints = state.solution.hints;\n        const path = state.solution.path;\n        const swaps = state.solution.swaps;\n        const words = this.#configuration.mode === $feafa30b0856daa8$export$ef2184bd89960b14.Modes.Pathfinder ? state.configuration.wordIndexes : state.solution.words;\n        const lastPathIndex = path.length - 1;\n        indexes.forEach((index)=>{\n            const cell = this.#cells[index];\n            let content = cells[index].content;\n            const flags = new (0, $6ac6f1f1df04c10e$export$434ba092ed0eee4e)();\n            // Handle cells that have a hint\n            const hintIndex = hints.indexOf(index);\n            if (hintIndex >= 0) {\n                flags.add((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Hint);\n                if (hintIndex === 0) flags.add((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.First);\n            }\n            // Handle swapped cells\n            const swap = swaps.find((indexes)=>indexes.includes(index));\n            if (swap) {\n                flags.add((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Swapped);\n                const targetIndex = swap.indexOf(index) === 0 ? swap[1] : swap[0];\n                content = cells[targetIndex].content;\n            }\n            // Handle cells that are part of the path\n            const pathIndex = path.indexOf(index);\n            if (pathIndex >= 0) {\n                flags.add((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Path);\n                const nextPathIndex = path[pathIndex + 1];\n                if (nextPathIndex !== undefined) {\n                    // Link current cell to next cell\n                    const nextCell = this.#cells[nextPathIndex];\n                    flags.add((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).FlagsByName[cell.getDirection(nextCell)]);\n                }\n                if (pathIndex === 0) flags.add((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.First);\n                if (pathIndex === lastPathIndex) {\n                    if (lastPathIndex !== this.#pointerIndex && this.#pointerIndex >= 0) // Remove flag from the old last path item\n                    this.#cells[this.#pointerIndex].update((state)=>state.copy({\n                            flags: state.getFlags().remove((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Last)\n                        }));\n                    flags.add((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Last);\n                }\n                // Handle cells that are part of a word\n                const word = words.find((indexes)=>indexes.includes(index));\n                if (word) {\n                    flags.add((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Validated);\n                    const lastWordIndex = word.length - 1;\n                    // If the starting path index of the word is later in the path than the ending path index of the word, the\n                    // word was spelled in reverse\n                    const isReversed = path.indexOf(word[0]) > path.indexOf(word[lastWordIndex]);\n                    const wordIndexes = isReversed ? Array.from(word).reverse() : word;\n                    const wordIndex = wordIndexes.indexOf(index);\n                    if ((0, $3e2f0fa58ba587b4$export$22012a5c726bef55)(state.configuration.wordIndexes, wordIndexes, (0, $3e2f0fa58ba587b4$export$4f889fe9b45273af))) // The user has spelled a hidden word using the optimal path.\n                    flags.add((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Revealed);\n                    if (wordIndex === 0) flags.add((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.WordStart);\n                    else if (wordIndex === lastWordIndex) flags.add((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.WordEnd);\n                }\n            }\n            cell.update((state)=>state.copy({\n                    content: content,\n                    flags: flags\n                }));\n        });\n        this.#pointerIndex = lastPathIndex;\n        const statistics = this.getStatistics(state);\n        if (statistics.score > state.user.highScore) {\n            state.user.highScore = statistics.score;\n            this.#setState(state);\n        }\n        this.#dispatch($feafa30b0856daa8$export$ef2184bd89960b14.Events.Update);\n    }\n    /**\n   * Responsible for validating a selection of cells by index to see if the user has spelled a valid word.\n   */ #validate() {\n        const selection = this.getSelection();\n        this.#deselect(this.#selection.splice(0));\n        if (!selection.pathIndexes.length || !selection.isValidWord) return;\n        const state = this.getState();\n        // Add the dictionary used to verify the word\n        state.solution.sources.push(this.#dictionary.getSource(selection.content));\n        // Add the spelled word to the list of spelled words\n        state.solution.words.push(selection.wordIndexes);\n        // Update moves\n        const index = state.solution.words.length - 1;\n        const match = selection.match;\n        const hiddenWordIndex = selection.hiddenWordIndex;\n        state.solution.moves.push(new $feafa30b0856daa8$export$ef2184bd89960b14.Move($feafa30b0856daa8$export$ef2184bd89960b14.Move.Types.Spell, {\n            index: index,\n            match: match,\n            hiddenWordIndex: hiddenWordIndex\n        }));\n        // Update path\n        switch(this.#configuration.mode){\n            case $feafa30b0856daa8$export$ef2184bd89960b14.Modes.Challenge:\n                // In challenge mode, all valid words are added to the path.\n                state.solution.path.push(...selection.pathIndexes);\n                break;\n            case $feafa30b0856daa8$export$ef2184bd89960b14.Modes.Pathfinder:\n                // In pathfinding mode, only hidden words can be added to the path.\n                if (selection.isHiddenWord) state.solution.path.push(...selection.pathIndexes);\n                else if (selection.hintIndexes.length) // Add hints to any portion of the next hidden word that were revealed by the valid word.\n                state.solution.hints.push(...selection.hintIndexes);\n                break;\n            default:\n                throw new Error(`Unsupported mode: ${this.#configuration.mode}.`);\n        }\n        this.#setState(state);\n        this.#update(selection.updateIndexes);\n    }\n    static getContent(cells) {\n        return cells.map((cell)=>cell.getContent()).join(\"\");\n    }\n    /**\n   * Get the indexes of the given cells.\n   * @param cells\n   * @returns {number[]}\n   */ static getIndexes(cells) {\n        return cells.map((cell)=>cell.getIndex());\n    }\n    static getId() {\n        const id = $feafa30b0856daa8$export$ef2184bd89960b14.Params.Id.get();\n        return id === undefined || $feafa30b0856daa8$export$ef2184bd89960b14.DateRegex.test(id) && Date.parse(id) > $feafa30b0856daa8$export$ef2184bd89960b14.Today ? $feafa30b0856daa8$export$ef2184bd89960b14.DefaultId : id;\n    }\n    static getMode() {\n        const mode = $feafa30b0856daa8$export$ef2184bd89960b14.Params.Mode.get();\n        return Object.values($feafa30b0856daa8$export$ef2184bd89960b14.Modes).includes(mode) ? mode : $feafa30b0856daa8$export$ef2184bd89960b14.DefaultMode;\n    }\n    static getSolution(hash) {\n        const solution = $feafa30b0856daa8$export$ef2184bd89960b14.Params.Solution.get();\n        if (solution?.hash === hash) return solution;\n    }\n    static getWidth() {\n        const width = Number($feafa30b0856daa8$export$ef2184bd89960b14.Params.Width.get());\n        return $feafa30b0856daa8$export$ef2184bd89960b14.Widths.includes(width) ? width : $feafa30b0856daa8$export$ef2184bd89960b14.DefaultWidth;\n    }\n    static Name = \"grid\";\n    static ClassNames = Object.freeze({\n        Loading: (0, $3e2f0fa58ba587b4$export$307b18b61172f7ed)($feafa30b0856daa8$export$ef2184bd89960b14.Name, \"loading\")\n    });\n    static DateRegex = /^\\d{4}-\\d{2}-\\d{2}$/;\n    static DefaultId = (()=>{\n        // The ID for the daily puzzle\n        const date = new Date();\n        const year = date.getFullYear();\n        const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n        const day = date.getDate().toString().padStart(2, \"0\");\n        return `${year}-${month}-${day}`;\n    })();\n    static Events = Object.freeze({\n        Selection: (0, $3e2f0fa58ba587b4$export$307b18b61172f7ed)($feafa30b0856daa8$export$ef2184bd89960b14.Name, \"selection\"),\n        Update: (0, $3e2f0fa58ba587b4$export$307b18b61172f7ed)($feafa30b0856daa8$export$ef2184bd89960b14.Name, \"update\")\n    });\n    static Match = Object.freeze({\n        Exact: \"exact\",\n        None: \"none\",\n        Partial: \"partial\"\n    });\n    static Modes = Object.freeze({\n        Challenge: \"challenge\",\n        Pathfinder: \"pathfinder\"\n    });\n    static Params = Object.freeze({\n        Id: (0, $97686966a3fec53f$export$94affb487e701bf2).urlParams(\"id\"),\n        Mode: (0, $97686966a3fec53f$export$94affb487e701bf2).urlParams(\"mode\"),\n        Solution: new (0, $97686966a3fec53f$export$94affb487e701bf2)(\"solution\", (0, $3e2f0fa58ba587b4$export$da1115b7645c376c).get.bind((0, $3e2f0fa58ba587b4$export$da1115b7645c376c)), (key, value)=>{\n            (0, $3e2f0fa58ba587b4$export$da1115b7645c376c).set(key, value);\n            (0, $3e2f0fa58ba587b4$export$55abd4691b317664).pushState({\n                [key]: value\n            }, \"\", (0, $3e2f0fa58ba587b4$export$128fa18b7194ef));\n        }, [\n            (0, $97686966a3fec53f$export$94affb487e701bf2).Encoders.Base64,\n            (0, $97686966a3fec53f$export$94affb487e701bf2).Encoders.Json\n        ]),\n        Width: (0, $97686966a3fec53f$export$94affb487e701bf2).urlParams(\"width\")\n    });\n    static Today = Date.parse($feafa30b0856daa8$export$ef2184bd89960b14.DefaultId);\n    static Widths = Object.freeze([\n        5,\n        7,\n        9\n    ]);\n    static DefaultMode = $feafa30b0856daa8$export$ef2184bd89960b14.Modes.Challenge;\n    static DefaultWidth = $feafa30b0856daa8$export$ef2184bd89960b14.Widths[0];\n    static SelectionStart = class {\n        event;\n        length;\n        constructor(event, length){\n            this.event = event;\n            this.length = length;\n        }\n    };\n    static Configuration = class {\n        hash;\n        id;\n        maxColumn;\n        maxRow;\n        mode;\n        seed;\n        size;\n        width;\n        constructor(id, width, mode, hash){\n            this.id = id ?? $feafa30b0856daa8$export$ef2184bd89960b14.getId();\n            this.mode = mode ?? $feafa30b0856daa8$export$ef2184bd89960b14.getMode();\n            this.width = width ?? $feafa30b0856daa8$export$ef2184bd89960b14.getWidth();\n            this.maxColumn = this.maxRow = this.width - 1;\n            this.size = this.width * this.width;\n            // Anything that influences the outcome of the grid should be passed in here\n            this.seed = [\n                this.mode,\n                this.width,\n                this.id\n            ].join(\":\");\n            this.hash = hash ?? (0, $3e2f0fa58ba587b4$export$f09b504682b60c87)(this.seed);\n        }\n        getCoordinates(index) {\n            return new (0, $56e6a699015083d1$export$d6e0f5996cc55599)(this.getRow(index), this.getColumn(index), this.width);\n        }\n        getColumn(index) {\n            return index % this.width;\n        }\n        getIndex(coordinates) {\n            return coordinates.row * this.width + coordinates.column;\n        }\n        getRow(index) {\n            return Math.floor(index / this.width);\n        }\n        isValid(coordinates) {\n            return coordinates.column >= 0 && coordinates.column <= this.maxColumn && coordinates.row >= 0 && coordinates.row <= this.maxRow;\n        }\n    };\n    static Move = class {\n        type;\n        value;\n        constructor(type, value){\n            this.type = type;\n            this.value = value;\n        }\n        getSymbol(mode) {\n            let symbol;\n            switch(this.type){\n                case $feafa30b0856daa8$export$ef2184bd89960b14.Move.Types.Hint:\n                    symbol = $feafa30b0856daa8$export$ef2184bd89960b14.Move.Symbols.LightBulb;\n                    break;\n                case $feafa30b0856daa8$export$ef2184bd89960b14.Move.Types.Spell:\n                    symbol = $feafa30b0856daa8$export$ef2184bd89960b14.Move.Symbols.CircleGreen;\n                    if (mode === $feafa30b0856daa8$export$ef2184bd89960b14.Modes.Challenge && this.value.match === $feafa30b0856daa8$export$ef2184bd89960b14.Match.Exact) symbol = $feafa30b0856daa8$export$ef2184bd89960b14.Move.Symbols.CircleYellow;\n                    else if (mode === $feafa30b0856daa8$export$ef2184bd89960b14.Modes.Pathfinder) {\n                        if (this.value.match === $feafa30b0856daa8$export$ef2184bd89960b14.Match.Partial) symbol = $feafa30b0856daa8$export$ef2184bd89960b14.Move.Symbols.CircleYellow;\n                        else if (this.value.match === $feafa30b0856daa8$export$ef2184bd89960b14.Match.None) symbol = $feafa30b0856daa8$export$ef2184bd89960b14.Move.Symbols.CircleWhite;\n                    }\n                    break;\n                case $feafa30b0856daa8$export$ef2184bd89960b14.Move.Types.Swap:\n                    symbol = $feafa30b0856daa8$export$ef2184bd89960b14.Move.Symbols.CirclePurple;\n                    break;\n            }\n            return symbol;\n        }\n        static fromObject(obj) {\n            return new $feafa30b0856daa8$export$ef2184bd89960b14.Move(obj.type, obj.value);\n        }\n        static Types = Object.freeze({\n            Hint: \"hint\",\n            Spell: \"spell\",\n            Swap: \"swap\"\n        });\n        static Symbols = Object.freeze({\n            CircleGreen: \"\\uD83D\\uDFE2\",\n            CirclePurple: \"\\uD83D\\uDFE3\",\n            CircleWhite: \"\\u26AA\",\n            CircleYellow: \"\\uD83D\\uDFE1\",\n            LightBulb: \"\\uD83D\\uDCA1\"\n        });\n    };\n    static Selection = class {\n        cells;\n        content;\n        hintIndexes;\n        isHiddenWord;\n        isValidWord;\n        match;\n        pathIndexes;\n        hiddenWordIndex;\n        hiddenWordIndexes;\n        updateIndexes;\n        wordIndexes;\n        constructor(cells, content, pathIndexes, hintIndexes, updateIndexes, wordIndexes, hiddenWordIndex, hiddenWordIndexes, isHiddenWord, isValidWord){\n            this.cells = cells;\n            this.content = content;\n            this.pathIndexes = pathIndexes ?? [];\n            this.hintIndexes = hintIndexes ?? [];\n            this.updateIndexes = updateIndexes ?? [];\n            this.wordIndexes = wordIndexes ?? [];\n            this.hiddenWordIndex = hiddenWordIndex ?? -1;\n            this.hiddenWordIndexes = hiddenWordIndexes;\n            this.isHiddenWord = isHiddenWord ?? false;\n            this.isValidWord = isValidWord ?? false;\n            this.match = this.isHiddenWord ? $feafa30b0856daa8$export$ef2184bd89960b14.Match.Exact : this.hintIndexes.length ? $feafa30b0856daa8$export$ef2184bd89960b14.Match.Partial : $feafa30b0856daa8$export$ef2184bd89960b14.Match.None;\n        }\n    };\n    static State = class {\n        configuration;\n        solution;\n        user;\n        version;\n        constructor(configuration, solution, user, version){\n            this.configuration = configuration;\n            this.solution = solution;\n            this.user = user;\n            this.version = version ?? 0;\n        }\n        getRemainingPathIndexes() {\n            return this.configuration.path.slice(this.solution.path.length);\n        }\n        getHiddenWordIndex(cellIndex) {\n            // Use the index of the next cell in the configured path by default\n            cellIndex ??= this.configuration.path[this.solution.path.length];\n            return this.configuration.wordIndexes.findIndex((indexes)=>indexes.includes(cellIndex));\n        }\n        getSources() {\n            return Array.from(new Set([\n                (0, $925c330059e2cdab$export$4ee70ab773570fb9).Names.Default\n            ].concat(this.solution.sources))).sort();\n        }\n        static fromObject(obj) {\n            return new $feafa30b0856daa8$export$ef2184bd89960b14.State((0, $3e2f0fa58ba587b4$export$b1b145d64c7b5823)(obj.configuration, $feafa30b0856daa8$export$ef2184bd89960b14.State.Configuration.fromObject), (0, $3e2f0fa58ba587b4$export$b1b145d64c7b5823)(obj.solution, $feafa30b0856daa8$export$ef2184bd89960b14.State.Solution.fromObject), (0, $3e2f0fa58ba587b4$export$b1b145d64c7b5823)(obj.user, $feafa30b0856daa8$export$ef2184bd89960b14.State.User.fromObject), obj.version);\n        }\n        static Version = 2;\n        static Configuration = class {\n            cells;\n            path;\n            wordIndexes;\n            words;\n            constructor(cells, path, words, wordIndexes){\n                this.cells = cells;\n                this.path = path;\n                this.words = words;\n                this.wordIndexes = wordIndexes;\n            }\n            static fromObject(obj) {\n                return new $feafa30b0856daa8$export$ef2184bd89960b14.State.Configuration(obj.cells, obj.path, obj.words, obj.wordIndexes);\n            }\n        };\n        static Solution = class {\n            hash;\n            moves;\n            path;\n            hints;\n            sources;\n            swaps;\n            words;\n            constructor(hash, path, moves, hints, swaps, words, sources){\n                this.hash = hash;\n                this.hints = hints ?? [];\n                this.path = path ?? [];\n                this.moves = moves ?? [];\n                this.swaps = swaps ?? [];\n                this.words = words ?? [];\n                this.sources = sources ?? [];\n            }\n            static fromObject(obj) {\n                return new $feafa30b0856daa8$export$ef2184bd89960b14.State.Solution(obj.hash, obj.path, (0, $3e2f0fa58ba587b4$export$b1b145d64c7b5823)(obj.moves, (moves)=>moves.map((obj)=>$feafa30b0856daa8$export$ef2184bd89960b14.Move.fromObject(obj))), obj.hints, obj.swaps, obj.words, obj.sources);\n            }\n        };\n        static User = class {\n            highScore;\n            constructor(highScore){\n                this.highScore = highScore ?? 0;\n            }\n            static fromObject(obj) {\n                return new $feafa30b0856daa8$export$ef2184bd89960b14.State.User(obj.highScore);\n            }\n        };\n        static Keys = Object.freeze({\n            Configuration: \"configuration\",\n            Solution: \"solution\",\n            User: \"user\"\n        });\n    };\n    static Statistics = class {\n        averageWordLength;\n        best;\n        bestDiff;\n        hiddenWordCount;\n        hiddenWordsGuessed;\n        moves;\n        progress;\n        score;\n        swapCount;\n        wordCount;\n        constructor(configuration, state, words){\n            const { size: size } = configuration;\n            const { length: length, points: points } = words.reduce((acc, word)=>({\n                    length: acc.length + word.content.length,\n                    points: acc.points + word.points\n                }), {\n                length: 0,\n                points: 0\n            });\n            const score = points + (length === size ? size : 0);\n            const diff = state.user.highScore - score;\n            this.averageWordLength = length === 0 ? 0 : (length / words.length).toPrecision(2);\n            this.best = state.user.highScore;\n            this.bestDiff = diff === 0 ? \"=\" : diff < 0 ? diff : `+${diff}`;\n            this.hiddenWordCount = state.configuration.words.length;\n            this.hiddenWordsGuessed = state.configuration.words.filter((content)=>words.some((word)=>word.content === content)).length;\n            this.moves = state.solution.moves;\n            this.progress = Math.trunc(state.solution.path.length / size * 100);\n            this.score = score;\n            this.swapCount = state.solution.swaps.length;\n            this.wordCount = words.length;\n        }\n    };\n}\nconst $feafa30b0856daa8$var$$gridSizeMultipliers = document.getElementById(\"grid-size-multipliers\");\n$feafa30b0856daa8$export$ef2184bd89960b14.Widths.forEach((width)=>{\n    const $li = document.createElement(\"li\");\n    $li.textContent = `${width}x${width} = ${(0, $d13164380fe1740a$export$1ee6d718c47c2db0).widthMultiplier(width)}`;\n    $feafa30b0856daa8$var$$gridSizeMultipliers.append($li);\n});\n\n\n\n/**!\n* tippy.js v6.3.7\n* (c) 2017-2021 atomiks\n* MIT License\n*/ function $b053670add32783c$export$2e2bcd8739ae039(element) {\n    return element ? (element.nodeName || \"\").toLowerCase() : null;\n}\n\n\nfunction $225372f33665d118$export$2e2bcd8739ae039(node) {\n    if (node == null) return window;\n    if (node.toString() !== \"[object Window]\") {\n        var ownerDocument = node.ownerDocument;\n        return ownerDocument ? ownerDocument.defaultView || window : window;\n    }\n    return node;\n}\n\n\nfunction $67c84f7b9d68974e$export$45a5e7f76e0caa8d(node) {\n    var OwnElement = (0, $225372f33665d118$export$2e2bcd8739ae039)(node).Element;\n    return node instanceof OwnElement || node instanceof Element;\n}\nfunction $67c84f7b9d68974e$export$1b3bfaa9684536aa(node) {\n    var OwnElement = (0, $225372f33665d118$export$2e2bcd8739ae039)(node).HTMLElement;\n    return node instanceof OwnElement || node instanceof HTMLElement;\n}\nfunction $67c84f7b9d68974e$export$af51f0f06c0f328a(node) {\n    // IE 11 has no ShadowRoot\n    if (typeof ShadowRoot === \"undefined\") return false;\n    var OwnElement = (0, $225372f33665d118$export$2e2bcd8739ae039)(node).ShadowRoot;\n    return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\n\n// and applies them to the HTMLElements such as popper and arrow\nfunction $89d890c165874cff$var$applyStyles(_ref) {\n    var state = _ref.state;\n    Object.keys(state.elements).forEach(function(name) {\n        var style = state.styles[name] || {};\n        var attributes = state.attributes[name] || {};\n        var element = state.elements[name]; // arrow is optional + virtual elements\n        if (!(0, $67c84f7b9d68974e$export$1b3bfaa9684536aa)(element) || !(0, $b053670add32783c$export$2e2bcd8739ae039)(element)) return;\n         // Flow doesn't support to extend this property, but it's the most\n        // effective way to apply styles to an HTMLElement\n        // $FlowFixMe[cannot-write]\n        Object.assign(element.style, style);\n        Object.keys(attributes).forEach(function(name) {\n            var value = attributes[name];\n            if (value === false) element.removeAttribute(name);\n            else element.setAttribute(name, value === true ? \"\" : value);\n        });\n    });\n}\nfunction $89d890c165874cff$var$effect(_ref2) {\n    var state = _ref2.state;\n    var initialStyles = {\n        popper: {\n            position: state.options.strategy,\n            left: \"0\",\n            top: \"0\",\n            margin: \"0\"\n        },\n        arrow: {\n            position: \"absolute\"\n        },\n        reference: {}\n    };\n    Object.assign(state.elements.popper.style, initialStyles.popper);\n    state.styles = initialStyles;\n    if (state.elements.arrow) Object.assign(state.elements.arrow.style, initialStyles.arrow);\n    return function() {\n        Object.keys(state.elements).forEach(function(name) {\n            var element = state.elements[name];\n            var attributes = state.attributes[name] || {};\n            var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n            var style = styleProperties.reduce(function(style, property) {\n                style[property] = \"\";\n                return style;\n            }, {}); // arrow is optional + virtual elements\n            if (!(0, $67c84f7b9d68974e$export$1b3bfaa9684536aa)(element) || !(0, $b053670add32783c$export$2e2bcd8739ae039)(element)) return;\n            Object.assign(element.style, style);\n            Object.keys(attributes).forEach(function(attribute) {\n                element.removeAttribute(attribute);\n            });\n        });\n    };\n} // eslint-disable-next-line import/no-unused-modules\nvar $89d890c165874cff$export$2e2bcd8739ae039 = {\n    name: \"applyStyles\",\n    enabled: true,\n    phase: \"write\",\n    fn: $89d890c165874cff$var$applyStyles,\n    effect: $89d890c165874cff$var$effect,\n    requires: [\n        \"computeStyles\"\n    ]\n};\n\n\nvar $e0beaf1fc26deee3$export$8960430cfd85939f = Math.max;\nvar $e0beaf1fc26deee3$export$96ec731ed4dcb222 = Math.min;\nvar $e0beaf1fc26deee3$export$2077e0241d6afd3c = Math.round;\n\n\n\nfunction $6394c1ff52742048$export$2e2bcd8739ae039() {\n    var uaData = navigator.userAgentData;\n    if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) return uaData.brands.map(function(item) {\n        return item.brand + \"/\" + item.version;\n    }).join(\" \");\n    return navigator.userAgent;\n}\n\n\nfunction $df11fd8e9d8c1389$export$2e2bcd8739ae039() {\n    return !/^((?!chrome|android).)*safari/i.test((0, $6394c1ff52742048$export$2e2bcd8739ae039)());\n}\n\n\nfunction $1a6f7dd7003a50a1$export$2e2bcd8739ae039(element, includeScale, isFixedStrategy) {\n    if (includeScale === void 0) includeScale = false;\n    if (isFixedStrategy === void 0) isFixedStrategy = false;\n    var clientRect = element.getBoundingClientRect();\n    var scaleX = 1;\n    var scaleY = 1;\n    if (includeScale && (0, $67c84f7b9d68974e$export$1b3bfaa9684536aa)(element)) {\n        scaleX = element.offsetWidth > 0 ? (0, $e0beaf1fc26deee3$export$2077e0241d6afd3c)(clientRect.width) / element.offsetWidth || 1 : 1;\n        scaleY = element.offsetHeight > 0 ? (0, $e0beaf1fc26deee3$export$2077e0241d6afd3c)(clientRect.height) / element.offsetHeight || 1 : 1;\n    }\n    var _ref = (0, $67c84f7b9d68974e$export$45a5e7f76e0caa8d)(element) ? (0, $225372f33665d118$export$2e2bcd8739ae039)(element) : window, visualViewport = _ref.visualViewport;\n    var addVisualOffsets = !(0, $df11fd8e9d8c1389$export$2e2bcd8739ae039)() && isFixedStrategy;\n    var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;\n    var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;\n    var width = clientRect.width / scaleX;\n    var height = clientRect.height / scaleY;\n    return {\n        width: width,\n        height: height,\n        top: y,\n        right: x + width,\n        bottom: y + height,\n        left: x,\n        x: x,\n        y: y\n    };\n}\n\n\n\nfunction $1ed31100e25348a7$export$2e2bcd8739ae039(node) {\n    var win = (0, $225372f33665d118$export$2e2bcd8739ae039)(node);\n    var scrollLeft = win.pageXOffset;\n    var scrollTop = win.pageYOffset;\n    return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n    };\n}\n\n\n\n\nfunction $729cc555c22ff063$export$2e2bcd8739ae039(element) {\n    return {\n        scrollLeft: element.scrollLeft,\n        scrollTop: element.scrollTop\n    };\n}\n\n\nfunction $bfa783b4c9ad111f$export$2e2bcd8739ae039(node) {\n    if (node === (0, $225372f33665d118$export$2e2bcd8739ae039)(node) || !(0, $67c84f7b9d68974e$export$1b3bfaa9684536aa)(node)) return (0, $1ed31100e25348a7$export$2e2bcd8739ae039)(node);\n    else return (0, $729cc555c22ff063$export$2e2bcd8739ae039)(node);\n}\n\n\n\n\n\n\nfunction $1d3b5d4e772ef8d4$export$2e2bcd8739ae039(element) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return (((0, $67c84f7b9d68974e$export$45a5e7f76e0caa8d)(element) ? element.ownerDocument : element.document) || window.document).documentElement;\n}\n\n\n\nfunction $9875449f0bf8dff4$export$2e2bcd8739ae039(element) {\n    // If <html> has a CSS width greater than the viewport, then this will be\n    // incorrect for RTL.\n    // Popper 1 is broken in this case and never had a bug report so let's assume\n    // it's not an issue. I don't think anyone ever specifies width on <html>\n    // anyway.\n    // Browsers where the left scrollbar doesn't cause an issue report `0` for\n    // this (e.g. Edge 2019, IE11, Safari)\n    return (0, $1a6f7dd7003a50a1$export$2e2bcd8739ae039)((0, $1d3b5d4e772ef8d4$export$2e2bcd8739ae039)(element)).left + (0, $1ed31100e25348a7$export$2e2bcd8739ae039)(element).scrollLeft;\n}\n\n\n\n\nfunction $c125cc314f75f1af$export$2e2bcd8739ae039(element) {\n    return (0, $225372f33665d118$export$2e2bcd8739ae039)(element).getComputedStyle(element);\n}\n\n\nfunction $a527afd9af1fd91d$export$2e2bcd8739ae039(element) {\n    // Firefox wants us to check `-x` and `-y` variations as well\n    var _getComputedStyle = (0, $c125cc314f75f1af$export$2e2bcd8739ae039)(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;\n    return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\n\n\n\nfunction $d861eebf1f8322fe$var$isElementScaled(element) {\n    var rect = element.getBoundingClientRect();\n    var scaleX = (0, $e0beaf1fc26deee3$export$2077e0241d6afd3c)(rect.width) / element.offsetWidth || 1;\n    var scaleY = (0, $e0beaf1fc26deee3$export$2077e0241d6afd3c)(rect.height) / element.offsetHeight || 1;\n    return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\nfunction $d861eebf1f8322fe$export$2e2bcd8739ae039(elementOrVirtualElement, offsetParent, isFixed) {\n    if (isFixed === void 0) isFixed = false;\n    var isOffsetParentAnElement = (0, $67c84f7b9d68974e$export$1b3bfaa9684536aa)(offsetParent);\n    var offsetParentIsScaled = (0, $67c84f7b9d68974e$export$1b3bfaa9684536aa)(offsetParent) && $d861eebf1f8322fe$var$isElementScaled(offsetParent);\n    var documentElement = (0, $1d3b5d4e772ef8d4$export$2e2bcd8739ae039)(offsetParent);\n    var rect = (0, $1a6f7dd7003a50a1$export$2e2bcd8739ae039)(elementOrVirtualElement, offsetParentIsScaled, isFixed);\n    var scroll = {\n        scrollLeft: 0,\n        scrollTop: 0\n    };\n    var offsets = {\n        x: 0,\n        y: 0\n    };\n    if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n        if ((0, $b053670add32783c$export$2e2bcd8739ae039)(offsetParent) !== \"body\" || // https://github.com/popperjs/popper-core/issues/1078\n        (0, $a527afd9af1fd91d$export$2e2bcd8739ae039)(documentElement)) scroll = (0, $bfa783b4c9ad111f$export$2e2bcd8739ae039)(offsetParent);\n        if ((0, $67c84f7b9d68974e$export$1b3bfaa9684536aa)(offsetParent)) {\n            offsets = (0, $1a6f7dd7003a50a1$export$2e2bcd8739ae039)(offsetParent, true);\n            offsets.x += offsetParent.clientLeft;\n            offsets.y += offsetParent.clientTop;\n        } else if (documentElement) offsets.x = (0, $9875449f0bf8dff4$export$2e2bcd8739ae039)(documentElement);\n    }\n    return {\n        x: rect.left + scroll.scrollLeft - offsets.x,\n        y: rect.top + scroll.scrollTop - offsets.y,\n        width: rect.width,\n        height: rect.height\n    };\n}\n\n\n\nfunction $c0579089f336dea9$export$2e2bcd8739ae039(element) {\n    var clientRect = (0, $1a6f7dd7003a50a1$export$2e2bcd8739ae039)(element); // Use the clientRect sizes if it's not been transformed.\n    // Fixes https://github.com/popperjs/popper-core/issues/1223\n    var width = element.offsetWidth;\n    var height = element.offsetHeight;\n    if (Math.abs(clientRect.width - width) <= 1) width = clientRect.width;\n    if (Math.abs(clientRect.height - height) <= 1) height = clientRect.height;\n    return {\n        x: element.offsetLeft,\n        y: element.offsetTop,\n        width: width,\n        height: height\n    };\n}\n\n\n\n\n\nfunction $49c4da5606d9971e$export$2e2bcd8739ae039(element) {\n    if ((0, $b053670add32783c$export$2e2bcd8739ae039)(element) === \"html\") return element;\n    return(// $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || ((0, $67c84f7b9d68974e$export$af51f0f06c0f328a)(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    (0, $1d3b5d4e772ef8d4$export$2e2bcd8739ae039)(element) // fallback\n    );\n}\n\n\n\n\n\nfunction $c2945e92d9880f1c$export$2e2bcd8739ae039(node) {\n    if ([\n        \"html\",\n        \"body\",\n        \"#document\"\n    ].indexOf((0, $b053670add32783c$export$2e2bcd8739ae039)(node)) >= 0) // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n    if ((0, $67c84f7b9d68974e$export$1b3bfaa9684536aa)(node) && (0, $a527afd9af1fd91d$export$2e2bcd8739ae039)(node)) return node;\n    return $c2945e92d9880f1c$export$2e2bcd8739ae039((0, $49c4da5606d9971e$export$2e2bcd8739ae039)(node));\n}\n\n\n\n\n\nfunction $354a82c9e8edb67d$export$2e2bcd8739ae039(element, list) {\n    var _element$ownerDocumen;\n    if (list === void 0) list = [];\n    var scrollParent = (0, $c2945e92d9880f1c$export$2e2bcd8739ae039)(element);\n    var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n    var win = (0, $225372f33665d118$export$2e2bcd8739ae039)(scrollParent);\n    var target = isBody ? [\n        win\n    ].concat(win.visualViewport || [], (0, $a527afd9af1fd91d$export$2e2bcd8739ae039)(scrollParent) ? scrollParent : []) : scrollParent;\n    var updatedList = list.concat(target);\n    return isBody ? updatedList : updatedList.concat($354a82c9e8edb67d$export$2e2bcd8739ae039((0, $49c4da5606d9971e$export$2e2bcd8739ae039)(target)));\n}\n\n\n\n\n\n\n\nfunction $d29f6785fa19ef29$export$2e2bcd8739ae039(element) {\n    return [\n        \"table\",\n        \"td\",\n        \"th\"\n    ].indexOf((0, $b053670add32783c$export$2e2bcd8739ae039)(element)) >= 0;\n}\n\n\n\n\nfunction $1fdd6cf5db426e4d$var$getTrueOffsetParent(element) {\n    if (!(0, $67c84f7b9d68974e$export$1b3bfaa9684536aa)(element) || // https://github.com/popperjs/popper-core/issues/837\n    (0, $c125cc314f75f1af$export$2e2bcd8739ae039)(element).position === \"fixed\") return null;\n    return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\nfunction $1fdd6cf5db426e4d$var$getContainingBlock(element) {\n    var isFirefox = /firefox/i.test((0, $6394c1ff52742048$export$2e2bcd8739ae039)());\n    var isIE = /Trident/i.test((0, $6394c1ff52742048$export$2e2bcd8739ae039)());\n    if (isIE && (0, $67c84f7b9d68974e$export$1b3bfaa9684536aa)(element)) {\n        // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n        var elementCss = (0, $c125cc314f75f1af$export$2e2bcd8739ae039)(element);\n        if (elementCss.position === \"fixed\") return null;\n    }\n    var currentNode = (0, $49c4da5606d9971e$export$2e2bcd8739ae039)(element);\n    if ((0, $67c84f7b9d68974e$export$af51f0f06c0f328a)(currentNode)) currentNode = currentNode.host;\n    while((0, $67c84f7b9d68974e$export$1b3bfaa9684536aa)(currentNode) && [\n        \"html\",\n        \"body\"\n    ].indexOf((0, $b053670add32783c$export$2e2bcd8739ae039)(currentNode)) < 0){\n        var css = (0, $c125cc314f75f1af$export$2e2bcd8739ae039)(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n        // create a containing block.\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n        if (css.transform !== \"none\" || css.perspective !== \"none\" || css.contain === \"paint\" || [\n            \"transform\",\n            \"perspective\"\n        ].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === \"filter\" || isFirefox && css.filter && css.filter !== \"none\") return currentNode;\n        else currentNode = currentNode.parentNode;\n    }\n    return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\nfunction $1fdd6cf5db426e4d$export$2e2bcd8739ae039(element) {\n    var window = (0, $225372f33665d118$export$2e2bcd8739ae039)(element);\n    var offsetParent = $1fdd6cf5db426e4d$var$getTrueOffsetParent(element);\n    while(offsetParent && (0, $d29f6785fa19ef29$export$2e2bcd8739ae039)(offsetParent) && (0, $c125cc314f75f1af$export$2e2bcd8739ae039)(offsetParent).position === \"static\")offsetParent = $1fdd6cf5db426e4d$var$getTrueOffsetParent(offsetParent);\n    if (offsetParent && ((0, $b053670add32783c$export$2e2bcd8739ae039)(offsetParent) === \"html\" || (0, $b053670add32783c$export$2e2bcd8739ae039)(offsetParent) === \"body\" && (0, $c125cc314f75f1af$export$2e2bcd8739ae039)(offsetParent).position === \"static\")) return window;\n    return offsetParent || $1fdd6cf5db426e4d$var$getContainingBlock(element) || window;\n}\n\n\nvar $a94704e3133fbe16$export$1e95b668f3b82d = \"top\";\nvar $a94704e3133fbe16$export$40e543e69a8b3fbb = \"bottom\";\nvar $a94704e3133fbe16$export$79ffe56a765070d2 = \"right\";\nvar $a94704e3133fbe16$export$eabcd2c8791e7bf4 = \"left\";\nvar $a94704e3133fbe16$export$dfb5619354ba860 = \"auto\";\nvar $a94704e3133fbe16$export$aec2ce47c367b8c3 = [\n    $a94704e3133fbe16$export$1e95b668f3b82d,\n    $a94704e3133fbe16$export$40e543e69a8b3fbb,\n    $a94704e3133fbe16$export$79ffe56a765070d2,\n    $a94704e3133fbe16$export$eabcd2c8791e7bf4\n];\nvar $a94704e3133fbe16$export$b3571188c770cc5a = \"start\";\nvar $a94704e3133fbe16$export$bd5df0f255a350f8 = \"end\";\nvar $a94704e3133fbe16$export$390fd549c5303b4d = \"clippingParents\";\nvar $a94704e3133fbe16$export$d7b7311ec04a3e8f = \"viewport\";\nvar $a94704e3133fbe16$export$ae5ab1c730825774 = \"popper\";\nvar $a94704e3133fbe16$export$ca50aac9f3ba507f = \"reference\";\nvar $a94704e3133fbe16$export$368f9a87e87fa4e1 = /*#__PURE__*/ $a94704e3133fbe16$export$aec2ce47c367b8c3.reduce(function(acc, placement) {\n    return acc.concat([\n        placement + \"-\" + $a94704e3133fbe16$export$b3571188c770cc5a,\n        placement + \"-\" + $a94704e3133fbe16$export$bd5df0f255a350f8\n    ]);\n}, []);\nvar $a94704e3133fbe16$export$803cd8101b6c182b = /*#__PURE__*/ [].concat($a94704e3133fbe16$export$aec2ce47c367b8c3, [\n    $a94704e3133fbe16$export$dfb5619354ba860\n]).reduce(function(acc, placement) {\n    return acc.concat([\n        placement,\n        placement + \"-\" + $a94704e3133fbe16$export$b3571188c770cc5a,\n        placement + \"-\" + $a94704e3133fbe16$export$bd5df0f255a350f8\n    ]);\n}, []); // modifiers that need to read the DOM\nvar $a94704e3133fbe16$export$421679a7c3d56e = \"beforeRead\";\nvar $a94704e3133fbe16$export$aafa59e2e03f2942 = \"read\";\nvar $a94704e3133fbe16$export$6964f6c886723980 = \"afterRead\"; // pure-logic modifiers\nvar $a94704e3133fbe16$export$c65e99957a05207c = \"beforeMain\";\nvar $a94704e3133fbe16$export$f22da7240b7add18 = \"main\";\nvar $a94704e3133fbe16$export$bab79516f2d662fe = \"afterMain\"; // modifier with the purpose to write to the DOM (or write into a framework state)\nvar $a94704e3133fbe16$export$8d4d2d70e7d46032 = \"beforeWrite\";\nvar $a94704e3133fbe16$export$68d8715fc104d294 = \"write\";\nvar $a94704e3133fbe16$export$70a6e5159acce2e6 = \"afterWrite\";\nvar $a94704e3133fbe16$export$d087d3878fdf71d5 = [\n    $a94704e3133fbe16$export$421679a7c3d56e,\n    $a94704e3133fbe16$export$aafa59e2e03f2942,\n    $a94704e3133fbe16$export$6964f6c886723980,\n    $a94704e3133fbe16$export$c65e99957a05207c,\n    $a94704e3133fbe16$export$f22da7240b7add18,\n    $a94704e3133fbe16$export$bab79516f2d662fe,\n    $a94704e3133fbe16$export$8d4d2d70e7d46032,\n    $a94704e3133fbe16$export$68d8715fc104d294,\n    $a94704e3133fbe16$export$70a6e5159acce2e6\n];\n\n\nfunction $3ba14eba4f91aa83$var$order(modifiers) {\n    var map = new Map();\n    var visited = new Set();\n    var result = [];\n    modifiers.forEach(function(modifier) {\n        map.set(modifier.name, modifier);\n    }); // On visiting object, check for its dependencies and visit them recursively\n    function sort(modifier) {\n        visited.add(modifier.name);\n        var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n        requires.forEach(function(dep) {\n            if (!visited.has(dep)) {\n                var depModifier = map.get(dep);\n                if (depModifier) sort(depModifier);\n            }\n        });\n        result.push(modifier);\n    }\n    modifiers.forEach(function(modifier) {\n        if (!visited.has(modifier.name)) // check for visited object\n        sort(modifier);\n    });\n    return result;\n}\nfunction $3ba14eba4f91aa83$export$2e2bcd8739ae039(modifiers) {\n    // order based on dependencies\n    var orderedModifiers = $3ba14eba4f91aa83$var$order(modifiers); // order based on phase\n    return (0, $a94704e3133fbe16$export$d087d3878fdf71d5).reduce(function(acc, phase) {\n        return acc.concat(orderedModifiers.filter(function(modifier) {\n            return modifier.phase === phase;\n        }));\n    }, []);\n}\n\n\nfunction $0f1640117aceffba$export$2e2bcd8739ae039(fn) {\n    var pending;\n    return function() {\n        if (!pending) pending = new Promise(function(resolve) {\n            Promise.resolve().then(function() {\n                pending = undefined;\n                resolve(fn());\n            });\n        });\n        return pending;\n    };\n}\n\n\nfunction $fe67b122da4891e2$export$2e2bcd8739ae039(modifiers) {\n    var merged = modifiers.reduce(function(merged, current) {\n        var existing = merged[current.name];\n        merged[current.name] = existing ? Object.assign({}, existing, current, {\n            options: Object.assign({}, existing.options, current.options),\n            data: Object.assign({}, existing.data, current.data)\n        }) : current;\n        return merged;\n    }, {}); // IE11 does not support Object.values\n    return Object.keys(merged).map(function(key) {\n        return merged[key];\n    });\n}\n\n\n\n\nvar $5bebade71559124e$var$DEFAULT_OPTIONS = {\n    placement: \"bottom\",\n    modifiers: [],\n    strategy: \"absolute\"\n};\nfunction $5bebade71559124e$var$areValidElements() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];\n    return !args.some(function(element) {\n        return !(element && typeof element.getBoundingClientRect === \"function\");\n    });\n}\nfunction $5bebade71559124e$export$ed5e13716264f202(generatorOptions) {\n    if (generatorOptions === void 0) generatorOptions = {};\n    var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions = _generatorOptions$def2 === void 0 ? $5bebade71559124e$var$DEFAULT_OPTIONS : _generatorOptions$def2;\n    return function createPopper(reference, popper, options) {\n        if (options === void 0) options = defaultOptions;\n        var state = {\n            placement: \"bottom\",\n            orderedModifiers: [],\n            options: Object.assign({}, $5bebade71559124e$var$DEFAULT_OPTIONS, defaultOptions),\n            modifiersData: {},\n            elements: {\n                reference: reference,\n                popper: popper\n            },\n            attributes: {},\n            styles: {}\n        };\n        var effectCleanupFns = [];\n        var isDestroyed = false;\n        var instance = {\n            state: state,\n            setOptions: function setOptions(setOptionsAction) {\n                var options = typeof setOptionsAction === \"function\" ? setOptionsAction(state.options) : setOptionsAction;\n                cleanupModifierEffects();\n                state.options = Object.assign({}, defaultOptions, state.options, options);\n                state.scrollParents = {\n                    reference: (0, $67c84f7b9d68974e$export$45a5e7f76e0caa8d)(reference) ? (0, $354a82c9e8edb67d$export$2e2bcd8739ae039)(reference) : reference.contextElement ? (0, $354a82c9e8edb67d$export$2e2bcd8739ae039)(reference.contextElement) : [],\n                    popper: (0, $354a82c9e8edb67d$export$2e2bcd8739ae039)(popper)\n                }; // Orders the modifiers based on their dependencies and `phase`\n                // properties\n                var orderedModifiers = (0, $3ba14eba4f91aa83$export$2e2bcd8739ae039)((0, $fe67b122da4891e2$export$2e2bcd8739ae039)([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n                state.orderedModifiers = orderedModifiers.filter(function(m) {\n                    return m.enabled;\n                });\n                runModifierEffects();\n                return instance.update();\n            },\n            // Sync update – it will always be executed, even if not necessary. This\n            // is useful for low frequency updates where sync behavior simplifies the\n            // logic.\n            // For high frequency updates (e.g. `resize` and `scroll` events), always\n            // prefer the async Popper#update method\n            forceUpdate: function forceUpdate() {\n                if (isDestroyed) return;\n                var _state$elements = state.elements, reference = _state$elements.reference, popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n                // anymore\n                if (!$5bebade71559124e$var$areValidElements(reference, popper)) return;\n                 // Store the reference and popper rects to be read by modifiers\n                state.rects = {\n                    reference: (0, $d861eebf1f8322fe$export$2e2bcd8739ae039)(reference, (0, $1fdd6cf5db426e4d$export$2e2bcd8739ae039)(popper), state.options.strategy === \"fixed\"),\n                    popper: (0, $c0579089f336dea9$export$2e2bcd8739ae039)(popper)\n                }; // Modifiers have the ability to reset the current update cycle. The\n                // most common use case for this is the `flip` modifier changing the\n                // placement, which then needs to re-run all the modifiers, because the\n                // logic was previously ran for the previous placement and is therefore\n                // stale/incorrect\n                state.reset = false;\n                state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n                // is filled with the initial data specified by the modifier. This means\n                // it doesn't persist and is fresh on each update.\n                // To ensure persistent data, use `${name}#persistent`\n                state.orderedModifiers.forEach(function(modifier) {\n                    return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n                });\n                for(var index = 0; index < state.orderedModifiers.length; index++){\n                    if (state.reset === true) {\n                        state.reset = false;\n                        index = -1;\n                        continue;\n                    }\n                    var _state$orderedModifie = state.orderedModifiers[index], fn = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;\n                    if (typeof fn === \"function\") state = fn({\n                        state: state,\n                        options: _options,\n                        name: name,\n                        instance: instance\n                    }) || state;\n                }\n            },\n            // Async and optimistically optimized update – it will not be executed if\n            // not necessary (debounced to run at most once-per-tick)\n            update: (0, $0f1640117aceffba$export$2e2bcd8739ae039)(function() {\n                return new Promise(function(resolve) {\n                    instance.forceUpdate();\n                    resolve(state);\n                });\n            }),\n            destroy: function destroy() {\n                cleanupModifierEffects();\n                isDestroyed = true;\n            }\n        };\n        if (!$5bebade71559124e$var$areValidElements(reference, popper)) return instance;\n        instance.setOptions(options).then(function(state) {\n            if (!isDestroyed && options.onFirstUpdate) options.onFirstUpdate(state);\n        }); // Modifiers have the ability to execute arbitrary code before the first\n        // update cycle runs. They will be executed in the same order as the update\n        // cycle. This is useful when a modifier adds some persistent data that\n        // other modifiers need to use, but the modifier is run after the dependent\n        // one.\n        function runModifierEffects() {\n            state.orderedModifiers.forEach(function(_ref) {\n                var name = _ref.name, _ref$options = _ref.options, options = _ref$options === void 0 ? {} : _ref$options, effect = _ref.effect;\n                if (typeof effect === \"function\") {\n                    var cleanupFn = effect({\n                        state: state,\n                        name: name,\n                        instance: instance,\n                        options: options\n                    });\n                    var noopFn = function noopFn() {};\n                    effectCleanupFns.push(cleanupFn || noopFn);\n                }\n            });\n        }\n        function cleanupModifierEffects() {\n            effectCleanupFns.forEach(function(fn) {\n                return fn();\n            });\n            effectCleanupFns = [];\n        }\n        return instance;\n    };\n}\nvar $5bebade71559124e$export$8f7491d57c8f97a9 = /*#__PURE__*/ $5bebade71559124e$export$ed5e13716264f202(); // eslint-disable-next-line import/no-unused-modules\n\n\n\nvar $41bc2dfc6eb96248$var$passive = {\n    passive: true\n};\nfunction $41bc2dfc6eb96248$var$effect(_ref) {\n    var state = _ref.state, instance = _ref.instance, options = _ref.options;\n    var _options$scroll = options.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options.resize, resize = _options$resize === void 0 ? true : _options$resize;\n    var window = (0, $225372f33665d118$export$2e2bcd8739ae039)(state.elements.popper);\n    var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n    if (scroll) scrollParents.forEach(function(scrollParent) {\n        scrollParent.addEventListener(\"scroll\", instance.update, $41bc2dfc6eb96248$var$passive);\n    });\n    if (resize) window.addEventListener(\"resize\", instance.update, $41bc2dfc6eb96248$var$passive);\n    return function() {\n        if (scroll) scrollParents.forEach(function(scrollParent) {\n            scrollParent.removeEventListener(\"scroll\", instance.update, $41bc2dfc6eb96248$var$passive);\n        });\n        if (resize) window.removeEventListener(\"resize\", instance.update, $41bc2dfc6eb96248$var$passive);\n    };\n} // eslint-disable-next-line import/no-unused-modules\nvar $41bc2dfc6eb96248$export$2e2bcd8739ae039 = {\n    name: \"eventListeners\",\n    enabled: true,\n    phase: \"write\",\n    fn: function fn() {},\n    effect: $41bc2dfc6eb96248$var$effect,\n    data: {}\n};\n\n\n\nfunction $62df636877274c69$export$2e2bcd8739ae039(placement) {\n    return placement.split(\"-\")[0];\n}\n\n\nfunction $873b81dce61132cd$export$2e2bcd8739ae039(placement) {\n    return placement.split(\"-\")[1];\n}\n\n\nfunction $8cdaee54ad91b509$export$2e2bcd8739ae039(placement) {\n    return [\n        \"top\",\n        \"bottom\"\n    ].indexOf(placement) >= 0 ? \"x\" : \"y\";\n}\n\n\n\nfunction $36cc5fd00eec4fbb$export$2e2bcd8739ae039(_ref) {\n    var reference = _ref.reference, element = _ref.element, placement = _ref.placement;\n    var basePlacement = placement ? (0, $62df636877274c69$export$2e2bcd8739ae039)(placement) : null;\n    var variation = placement ? (0, $873b81dce61132cd$export$2e2bcd8739ae039)(placement) : null;\n    var commonX = reference.x + reference.width / 2 - element.width / 2;\n    var commonY = reference.y + reference.height / 2 - element.height / 2;\n    var offsets;\n    switch(basePlacement){\n        case 0, $a94704e3133fbe16$export$1e95b668f3b82d:\n            offsets = {\n                x: commonX,\n                y: reference.y - element.height\n            };\n            break;\n        case 0, $a94704e3133fbe16$export$40e543e69a8b3fbb:\n            offsets = {\n                x: commonX,\n                y: reference.y + reference.height\n            };\n            break;\n        case 0, $a94704e3133fbe16$export$79ffe56a765070d2:\n            offsets = {\n                x: reference.x + reference.width,\n                y: commonY\n            };\n            break;\n        case 0, $a94704e3133fbe16$export$eabcd2c8791e7bf4:\n            offsets = {\n                x: reference.x - element.width,\n                y: commonY\n            };\n            break;\n        default:\n            offsets = {\n                x: reference.x,\n                y: reference.y\n            };\n    }\n    var mainAxis = basePlacement ? (0, $8cdaee54ad91b509$export$2e2bcd8739ae039)(basePlacement) : null;\n    if (mainAxis != null) {\n        var len = mainAxis === \"y\" ? \"height\" : \"width\";\n        switch(variation){\n            case 0, $a94704e3133fbe16$export$b3571188c770cc5a:\n                offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n                break;\n            case 0, $a94704e3133fbe16$export$bd5df0f255a350f8:\n                offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n                break;\n            default:\n        }\n    }\n    return offsets;\n}\n\n\nfunction $13f1c3bc9b36621c$var$popperOffsets(_ref) {\n    var state = _ref.state, name = _ref.name;\n    // Offsets are the actual position the popper needs to have to be\n    // properly positioned near its reference element\n    // This is the most basic placement, and will be adjusted by\n    // the modifiers in the next step\n    state.modifiersData[name] = (0, $36cc5fd00eec4fbb$export$2e2bcd8739ae039)({\n        reference: state.rects.reference,\n        element: state.rects.popper,\n        strategy: \"absolute\",\n        placement: state.placement\n    });\n} // eslint-disable-next-line import/no-unused-modules\nvar $13f1c3bc9b36621c$export$2e2bcd8739ae039 = {\n    name: \"popperOffsets\",\n    enabled: true,\n    phase: \"read\",\n    fn: $13f1c3bc9b36621c$var$popperOffsets,\n    data: {}\n};\n\n\n\n\n\n\n\n\n\n\nvar $5106537fe02a42d1$var$unsetSides = {\n    top: \"auto\",\n    right: \"auto\",\n    bottom: \"auto\",\n    left: \"auto\"\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\nfunction $5106537fe02a42d1$var$roundOffsetsByDPR(_ref, win) {\n    var x = _ref.x, y = _ref.y;\n    var dpr = win.devicePixelRatio || 1;\n    return {\n        x: (0, $e0beaf1fc26deee3$export$2077e0241d6afd3c)(x * dpr) / dpr || 0,\n        y: (0, $e0beaf1fc26deee3$export$2077e0241d6afd3c)(y * dpr) / dpr || 0\n    };\n}\nfunction $5106537fe02a42d1$export$378fa78a8fea596f(_ref2) {\n    var _Object$assign2;\n    var popper = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets, isFixed = _ref2.isFixed;\n    var _offsets$x = offsets.x, x = _offsets$x === void 0 ? 0 : _offsets$x, _offsets$y = offsets.y, y = _offsets$y === void 0 ? 0 : _offsets$y;\n    var _ref3 = typeof roundOffsets === \"function\" ? roundOffsets({\n        x: x,\n        y: y\n    }) : {\n        x: x,\n        y: y\n    };\n    x = _ref3.x;\n    y = _ref3.y;\n    var hasX = offsets.hasOwnProperty(\"x\");\n    var hasY = offsets.hasOwnProperty(\"y\");\n    var sideX = (0, $a94704e3133fbe16$export$eabcd2c8791e7bf4);\n    var sideY = (0, $a94704e3133fbe16$export$1e95b668f3b82d);\n    var win = window;\n    if (adaptive) {\n        var offsetParent = (0, $1fdd6cf5db426e4d$export$2e2bcd8739ae039)(popper);\n        var heightProp = \"clientHeight\";\n        var widthProp = \"clientWidth\";\n        if (offsetParent === (0, $225372f33665d118$export$2e2bcd8739ae039)(popper)) {\n            offsetParent = (0, $1d3b5d4e772ef8d4$export$2e2bcd8739ae039)(popper);\n            if ((0, $c125cc314f75f1af$export$2e2bcd8739ae039)(offsetParent).position !== \"static\" && position === \"absolute\") {\n                heightProp = \"scrollHeight\";\n                widthProp = \"scrollWidth\";\n            }\n        } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n        offsetParent;\n        if (placement === (0, $a94704e3133fbe16$export$1e95b668f3b82d) || (placement === (0, $a94704e3133fbe16$export$eabcd2c8791e7bf4) || placement === (0, $a94704e3133fbe16$export$79ffe56a765070d2)) && variation === (0, $a94704e3133fbe16$export$bd5df0f255a350f8)) {\n            sideY = (0, $a94704e3133fbe16$export$40e543e69a8b3fbb);\n            var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : offsetParent[heightProp];\n            y -= offsetY - popperRect.height;\n            y *= gpuAcceleration ? 1 : -1;\n        }\n        if (placement === (0, $a94704e3133fbe16$export$eabcd2c8791e7bf4) || (placement === (0, $a94704e3133fbe16$export$1e95b668f3b82d) || placement === (0, $a94704e3133fbe16$export$40e543e69a8b3fbb)) && variation === (0, $a94704e3133fbe16$export$bd5df0f255a350f8)) {\n            sideX = (0, $a94704e3133fbe16$export$79ffe56a765070d2);\n            var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : offsetParent[widthProp];\n            x -= offsetX - popperRect.width;\n            x *= gpuAcceleration ? 1 : -1;\n        }\n    }\n    var commonStyles = Object.assign({\n        position: position\n    }, adaptive && $5106537fe02a42d1$var$unsetSides);\n    var _ref4 = roundOffsets === true ? $5106537fe02a42d1$var$roundOffsetsByDPR({\n        x: x,\n        y: y\n    }, (0, $225372f33665d118$export$2e2bcd8739ae039)(popper)) : {\n        x: x,\n        y: y\n    };\n    x = _ref4.x;\n    y = _ref4.y;\n    if (gpuAcceleration) {\n        var _Object$assign;\n        return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? \"0\" : \"\", _Object$assign[sideX] = hasX ? \"0\" : \"\", _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n    }\n    return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : \"\", _Object$assign2[sideX] = hasX ? x + \"px\" : \"\", _Object$assign2.transform = \"\", _Object$assign2));\n}\nfunction $5106537fe02a42d1$var$computeStyles(_ref5) {\n    var state = _ref5.state, options = _ref5.options;\n    var _options$gpuAccelerat = options.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n    var commonStyles = {\n        placement: (0, $62df636877274c69$export$2e2bcd8739ae039)(state.placement),\n        variation: (0, $873b81dce61132cd$export$2e2bcd8739ae039)(state.placement),\n        popper: state.elements.popper,\n        popperRect: state.rects.popper,\n        gpuAcceleration: gpuAcceleration,\n        isFixed: state.options.strategy === \"fixed\"\n    };\n    if (state.modifiersData.popperOffsets != null) state.styles.popper = Object.assign({}, state.styles.popper, $5106537fe02a42d1$export$378fa78a8fea596f(Object.assign({}, commonStyles, {\n        offsets: state.modifiersData.popperOffsets,\n        position: state.options.strategy,\n        adaptive: adaptive,\n        roundOffsets: roundOffsets\n    })));\n    if (state.modifiersData.arrow != null) state.styles.arrow = Object.assign({}, state.styles.arrow, $5106537fe02a42d1$export$378fa78a8fea596f(Object.assign({}, commonStyles, {\n        offsets: state.modifiersData.arrow,\n        position: \"absolute\",\n        adaptive: false,\n        roundOffsets: roundOffsets\n    })));\n    state.attributes.popper = Object.assign({}, state.attributes.popper, {\n        \"data-popper-placement\": state.placement\n    });\n} // eslint-disable-next-line import/no-unused-modules\nvar $5106537fe02a42d1$export$2e2bcd8739ae039 = {\n    name: \"computeStyles\",\n    enabled: true,\n    phase: \"beforeWrite\",\n    fn: $5106537fe02a42d1$var$computeStyles,\n    data: {}\n};\n\n\n\n\n\nfunction $bea6e8d498694752$export$7fa02d8595b015ed(placement, rects, offset) {\n    var basePlacement = (0, $62df636877274c69$export$2e2bcd8739ae039)(placement);\n    var invertDistance = [\n        (0, $a94704e3133fbe16$export$eabcd2c8791e7bf4),\n        (0, $a94704e3133fbe16$export$1e95b668f3b82d)\n    ].indexOf(basePlacement) >= 0 ? -1 : 1;\n    var _ref = typeof offset === \"function\" ? offset(Object.assign({}, rects, {\n        placement: placement\n    })) : offset, skidding = _ref[0], distance = _ref[1];\n    skidding = skidding || 0;\n    distance = (distance || 0) * invertDistance;\n    return [\n        (0, $a94704e3133fbe16$export$eabcd2c8791e7bf4),\n        (0, $a94704e3133fbe16$export$79ffe56a765070d2)\n    ].indexOf(basePlacement) >= 0 ? {\n        x: distance,\n        y: skidding\n    } : {\n        x: skidding,\n        y: distance\n    };\n}\nfunction $bea6e8d498694752$var$offset(_ref2) {\n    var state = _ref2.state, options = _ref2.options, name = _ref2.name;\n    var _options$offset = options.offset, offset = _options$offset === void 0 ? [\n        0,\n        0\n    ] : _options$offset;\n    var data = (0, $a94704e3133fbe16$export$803cd8101b6c182b).reduce(function(acc, placement) {\n        acc[placement] = $bea6e8d498694752$export$7fa02d8595b015ed(placement, state.rects, offset);\n        return acc;\n    }, {});\n    var _data$state$placement = data[state.placement], x = _data$state$placement.x, y = _data$state$placement.y;\n    if (state.modifiersData.popperOffsets != null) {\n        state.modifiersData.popperOffsets.x += x;\n        state.modifiersData.popperOffsets.y += y;\n    }\n    state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\nvar $bea6e8d498694752$export$2e2bcd8739ae039 = {\n    name: \"offset\",\n    enabled: true,\n    phase: \"main\",\n    requires: [\n        \"popperOffsets\"\n    ],\n    fn: $bea6e8d498694752$var$offset\n};\n\n\nvar $d8d1c19fcab8b98a$var$hash = {\n    left: \"right\",\n    right: \"left\",\n    bottom: \"top\",\n    top: \"bottom\"\n};\nfunction $d8d1c19fcab8b98a$export$2e2bcd8739ae039(placement) {\n    return placement.replace(/left|right|bottom|top/g, function(matched) {\n        return $d8d1c19fcab8b98a$var$hash[matched];\n    });\n}\n\n\n\nvar $3d8b1e96ae7b2b33$var$hash = {\n    start: \"end\",\n    end: \"start\"\n};\nfunction $3d8b1e96ae7b2b33$export$2e2bcd8739ae039(placement) {\n    return placement.replace(/start|end/g, function(matched) {\n        return $3d8b1e96ae7b2b33$var$hash[matched];\n    });\n}\n\n\n\n\n\n\n\nfunction $99269cfb0c30a849$export$2e2bcd8739ae039(element, strategy) {\n    var win = (0, $225372f33665d118$export$2e2bcd8739ae039)(element);\n    var html = (0, $1d3b5d4e772ef8d4$export$2e2bcd8739ae039)(element);\n    var visualViewport = win.visualViewport;\n    var width = html.clientWidth;\n    var height = html.clientHeight;\n    var x = 0;\n    var y = 0;\n    if (visualViewport) {\n        width = visualViewport.width;\n        height = visualViewport.height;\n        var layoutViewport = (0, $df11fd8e9d8c1389$export$2e2bcd8739ae039)();\n        if (layoutViewport || !layoutViewport && strategy === \"fixed\") {\n            x = visualViewport.offsetLeft;\n            y = visualViewport.offsetTop;\n        }\n    }\n    return {\n        width: width,\n        height: height,\n        x: x + (0, $9875449f0bf8dff4$export$2e2bcd8739ae039)(element),\n        y: y\n    };\n}\n\n\n\n\n\n\n\nfunction $e10e7e39ab68972d$export$2e2bcd8739ae039(element) {\n    var _element$ownerDocumen;\n    var html = (0, $1d3b5d4e772ef8d4$export$2e2bcd8739ae039)(element);\n    var winScroll = (0, $1ed31100e25348a7$export$2e2bcd8739ae039)(element);\n    var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n    var width = (0, $e0beaf1fc26deee3$export$8960430cfd85939f)(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n    var height = (0, $e0beaf1fc26deee3$export$8960430cfd85939f)(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n    var x = -winScroll.scrollLeft + (0, $9875449f0bf8dff4$export$2e2bcd8739ae039)(element);\n    var y = -winScroll.scrollTop;\n    if ((0, $c125cc314f75f1af$export$2e2bcd8739ae039)(body || html).direction === \"rtl\") x += (0, $e0beaf1fc26deee3$export$8960430cfd85939f)(html.clientWidth, body ? body.clientWidth : 0) - width;\n    return {\n        width: width,\n        height: height,\n        x: x,\n        y: y\n    };\n}\n\n\n\n\n\n\n\n\n\n\nfunction $fe95fa72fab69498$export$2e2bcd8739ae039(parent, child) {\n    var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n    if (parent.contains(child)) return true;\n    else if (rootNode && (0, $67c84f7b9d68974e$export$af51f0f06c0f328a)(rootNode)) {\n        var next = child;\n        do {\n            if (next && parent.isSameNode(next)) return true;\n             // $FlowFixMe[prop-missing]: need a better way to handle this...\n            next = next.parentNode || next.host;\n        }while (next);\n    } // Give up, the result is false\n    return false;\n}\n\n\n\nfunction $dec119a2e5377521$export$2e2bcd8739ae039(rect) {\n    return Object.assign({}, rect, {\n        left: rect.x,\n        top: rect.y,\n        right: rect.x + rect.width,\n        bottom: rect.y + rect.height\n    });\n}\n\n\n\nfunction $b15c2dc09d4d708d$var$getInnerBoundingClientRect(element, strategy) {\n    var rect = (0, $1a6f7dd7003a50a1$export$2e2bcd8739ae039)(element, false, strategy === \"fixed\");\n    rect.top = rect.top + element.clientTop;\n    rect.left = rect.left + element.clientLeft;\n    rect.bottom = rect.top + element.clientHeight;\n    rect.right = rect.left + element.clientWidth;\n    rect.width = element.clientWidth;\n    rect.height = element.clientHeight;\n    rect.x = rect.left;\n    rect.y = rect.top;\n    return rect;\n}\nfunction $b15c2dc09d4d708d$var$getClientRectFromMixedType(element, clippingParent, strategy) {\n    return clippingParent === (0, $a94704e3133fbe16$export$d7b7311ec04a3e8f) ? (0, $dec119a2e5377521$export$2e2bcd8739ae039)((0, $99269cfb0c30a849$export$2e2bcd8739ae039)(element, strategy)) : (0, $67c84f7b9d68974e$export$45a5e7f76e0caa8d)(clippingParent) ? $b15c2dc09d4d708d$var$getInnerBoundingClientRect(clippingParent, strategy) : (0, $dec119a2e5377521$export$2e2bcd8739ae039)((0, $e10e7e39ab68972d$export$2e2bcd8739ae039)((0, $1d3b5d4e772ef8d4$export$2e2bcd8739ae039)(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\nfunction $b15c2dc09d4d708d$var$getClippingParents(element) {\n    var clippingParents = (0, $354a82c9e8edb67d$export$2e2bcd8739ae039)((0, $49c4da5606d9971e$export$2e2bcd8739ae039)(element));\n    var canEscapeClipping = [\n        \"absolute\",\n        \"fixed\"\n    ].indexOf((0, $c125cc314f75f1af$export$2e2bcd8739ae039)(element).position) >= 0;\n    var clipperElement = canEscapeClipping && (0, $67c84f7b9d68974e$export$1b3bfaa9684536aa)(element) ? (0, $1fdd6cf5db426e4d$export$2e2bcd8739ae039)(element) : element;\n    if (!(0, $67c84f7b9d68974e$export$45a5e7f76e0caa8d)(clipperElement)) return [];\n     // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n    return clippingParents.filter(function(clippingParent) {\n        return (0, $67c84f7b9d68974e$export$45a5e7f76e0caa8d)(clippingParent) && (0, $fe95fa72fab69498$export$2e2bcd8739ae039)(clippingParent, clipperElement) && (0, $b053670add32783c$export$2e2bcd8739ae039)(clippingParent) !== \"body\";\n    });\n} // Gets the maximum area that the element is visible in due to any number of\nfunction $b15c2dc09d4d708d$export$2e2bcd8739ae039(element, boundary, rootBoundary, strategy) {\n    var mainClippingParents = boundary === \"clippingParents\" ? $b15c2dc09d4d708d$var$getClippingParents(element) : [].concat(boundary);\n    var clippingParents = [].concat(mainClippingParents, [\n        rootBoundary\n    ]);\n    var firstClippingParent = clippingParents[0];\n    var clippingRect = clippingParents.reduce(function(accRect, clippingParent) {\n        var rect = $b15c2dc09d4d708d$var$getClientRectFromMixedType(element, clippingParent, strategy);\n        accRect.top = (0, $e0beaf1fc26deee3$export$8960430cfd85939f)(rect.top, accRect.top);\n        accRect.right = (0, $e0beaf1fc26deee3$export$96ec731ed4dcb222)(rect.right, accRect.right);\n        accRect.bottom = (0, $e0beaf1fc26deee3$export$96ec731ed4dcb222)(rect.bottom, accRect.bottom);\n        accRect.left = (0, $e0beaf1fc26deee3$export$8960430cfd85939f)(rect.left, accRect.left);\n        return accRect;\n    }, $b15c2dc09d4d708d$var$getClientRectFromMixedType(element, firstClippingParent, strategy));\n    clippingRect.width = clippingRect.right - clippingRect.left;\n    clippingRect.height = clippingRect.bottom - clippingRect.top;\n    clippingRect.x = clippingRect.left;\n    clippingRect.y = clippingRect.top;\n    return clippingRect;\n}\n\n\n\n\n\n\n\n\nfunction $f7baa3d7766ddfd5$export$2e2bcd8739ae039() {\n    return {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n    };\n}\n\n\nfunction $c11f65b1ae4396ba$export$2e2bcd8739ae039(paddingObject) {\n    return Object.assign({}, (0, $f7baa3d7766ddfd5$export$2e2bcd8739ae039)(), paddingObject);\n}\n\n\nfunction $8c698fce3c6fce96$export$2e2bcd8739ae039(value, keys) {\n    return keys.reduce(function(hashMap, key) {\n        hashMap[key] = value;\n        return hashMap;\n    }, {});\n}\n\n\nfunction $724adaa25380997c$export$2e2bcd8739ae039(state, options) {\n    if (options === void 0) options = {};\n    var _options = options, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$strategy = _options.strategy, strategy = _options$strategy === void 0 ? state.strategy : _options$strategy, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? (0, $a94704e3133fbe16$export$390fd549c5303b4d) : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? (0, $a94704e3133fbe16$export$d7b7311ec04a3e8f) : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? (0, $a94704e3133fbe16$export$ae5ab1c730825774) : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;\n    var paddingObject = (0, $c11f65b1ae4396ba$export$2e2bcd8739ae039)(typeof padding !== \"number\" ? padding : (0, $8c698fce3c6fce96$export$2e2bcd8739ae039)(padding, (0, $a94704e3133fbe16$export$aec2ce47c367b8c3)));\n    var altContext = elementContext === (0, $a94704e3133fbe16$export$ae5ab1c730825774) ? (0, $a94704e3133fbe16$export$ca50aac9f3ba507f) : (0, $a94704e3133fbe16$export$ae5ab1c730825774);\n    var popperRect = state.rects.popper;\n    var element = state.elements[altBoundary ? altContext : elementContext];\n    var clippingClientRect = (0, $b15c2dc09d4d708d$export$2e2bcd8739ae039)((0, $67c84f7b9d68974e$export$45a5e7f76e0caa8d)(element) ? element : element.contextElement || (0, $1d3b5d4e772ef8d4$export$2e2bcd8739ae039)(state.elements.popper), boundary, rootBoundary, strategy);\n    var referenceClientRect = (0, $1a6f7dd7003a50a1$export$2e2bcd8739ae039)(state.elements.reference);\n    var popperOffsets = (0, $36cc5fd00eec4fbb$export$2e2bcd8739ae039)({\n        reference: referenceClientRect,\n        element: popperRect,\n        strategy: \"absolute\",\n        placement: placement\n    });\n    var popperClientRect = (0, $dec119a2e5377521$export$2e2bcd8739ae039)(Object.assign({}, popperRect, popperOffsets));\n    var elementClientRect = elementContext === (0, $a94704e3133fbe16$export$ae5ab1c730825774) ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n    // 0 or negative = within the clipping rect\n    var overflowOffsets = {\n        top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n        bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n        left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n        right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n    };\n    var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n    if (elementContext === (0, $a94704e3133fbe16$export$ae5ab1c730825774) && offsetData) {\n        var offset = offsetData[placement];\n        Object.keys(overflowOffsets).forEach(function(key) {\n            var multiply = [\n                (0, $a94704e3133fbe16$export$79ffe56a765070d2),\n                (0, $a94704e3133fbe16$export$40e543e69a8b3fbb)\n            ].indexOf(key) >= 0 ? 1 : -1;\n            var axis = [\n                (0, $a94704e3133fbe16$export$1e95b668f3b82d),\n                (0, $a94704e3133fbe16$export$40e543e69a8b3fbb)\n            ].indexOf(key) >= 0 ? \"y\" : \"x\";\n            overflowOffsets[key] += offset[axis] * multiply;\n        });\n    }\n    return overflowOffsets;\n}\n\n\n\n\n\n\nfunction $f977f9f0436520a0$export$2e2bcd8739ae039(state, options) {\n    if (options === void 0) options = {};\n    var _options = options, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? (0, $a94704e3133fbe16$export$803cd8101b6c182b) : _options$allowedAutoP;\n    var variation = (0, $873b81dce61132cd$export$2e2bcd8739ae039)(placement);\n    var placements = variation ? flipVariations ? (0, $a94704e3133fbe16$export$368f9a87e87fa4e1) : (0, $a94704e3133fbe16$export$368f9a87e87fa4e1).filter(function(placement) {\n        return (0, $873b81dce61132cd$export$2e2bcd8739ae039)(placement) === variation;\n    }) : (0, $a94704e3133fbe16$export$aec2ce47c367b8c3);\n    var allowedPlacements = placements.filter(function(placement) {\n        return allowedAutoPlacements.indexOf(placement) >= 0;\n    });\n    if (allowedPlacements.length === 0) allowedPlacements = placements;\n     // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n    var overflows = allowedPlacements.reduce(function(acc, placement) {\n        acc[placement] = (0, $724adaa25380997c$export$2e2bcd8739ae039)(state, {\n            placement: placement,\n            boundary: boundary,\n            rootBoundary: rootBoundary,\n            padding: padding\n        })[(0, $62df636877274c69$export$2e2bcd8739ae039)(placement)];\n        return acc;\n    }, {});\n    return Object.keys(overflows).sort(function(a, b) {\n        return overflows[a] - overflows[b];\n    });\n}\n\n\n\n\nfunction $5fa2f8fc84eb9429$var$getExpandedFallbackPlacements(placement) {\n    if ((0, $62df636877274c69$export$2e2bcd8739ae039)(placement) === (0, $a94704e3133fbe16$export$dfb5619354ba860)) return [];\n    var oppositePlacement = (0, $d8d1c19fcab8b98a$export$2e2bcd8739ae039)(placement);\n    return [\n        (0, $3d8b1e96ae7b2b33$export$2e2bcd8739ae039)(placement),\n        oppositePlacement,\n        (0, $3d8b1e96ae7b2b33$export$2e2bcd8739ae039)(oppositePlacement)\n    ];\n}\nfunction $5fa2f8fc84eb9429$var$flip(_ref) {\n    var state = _ref.state, options = _ref.options, name = _ref.name;\n    if (state.modifiersData[name]._skip) return;\n    var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options.fallbackPlacements, padding = options.padding, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, _options$flipVariatio = options.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options.allowedAutoPlacements;\n    var preferredPlacement = state.options.placement;\n    var basePlacement = (0, $62df636877274c69$export$2e2bcd8739ae039)(preferredPlacement);\n    var isBasePlacement = basePlacement === preferredPlacement;\n    var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [\n        (0, $d8d1c19fcab8b98a$export$2e2bcd8739ae039)(preferredPlacement)\n    ] : $5fa2f8fc84eb9429$var$getExpandedFallbackPlacements(preferredPlacement));\n    var placements = [\n        preferredPlacement\n    ].concat(fallbackPlacements).reduce(function(acc, placement) {\n        return acc.concat((0, $62df636877274c69$export$2e2bcd8739ae039)(placement) === (0, $a94704e3133fbe16$export$dfb5619354ba860) ? (0, $f977f9f0436520a0$export$2e2bcd8739ae039)(state, {\n            placement: placement,\n            boundary: boundary,\n            rootBoundary: rootBoundary,\n            padding: padding,\n            flipVariations: flipVariations,\n            allowedAutoPlacements: allowedAutoPlacements\n        }) : placement);\n    }, []);\n    var referenceRect = state.rects.reference;\n    var popperRect = state.rects.popper;\n    var checksMap = new Map();\n    var makeFallbackChecks = true;\n    var firstFittingPlacement = placements[0];\n    for(var i = 0; i < placements.length; i++){\n        var placement = placements[i];\n        var _basePlacement = (0, $62df636877274c69$export$2e2bcd8739ae039)(placement);\n        var isStartVariation = (0, $873b81dce61132cd$export$2e2bcd8739ae039)(placement) === (0, $a94704e3133fbe16$export$b3571188c770cc5a);\n        var isVertical = [\n            (0, $a94704e3133fbe16$export$1e95b668f3b82d),\n            (0, $a94704e3133fbe16$export$40e543e69a8b3fbb)\n        ].indexOf(_basePlacement) >= 0;\n        var len = isVertical ? \"width\" : \"height\";\n        var overflow = (0, $724adaa25380997c$export$2e2bcd8739ae039)(state, {\n            placement: placement,\n            boundary: boundary,\n            rootBoundary: rootBoundary,\n            altBoundary: altBoundary,\n            padding: padding\n        });\n        var mainVariationSide = isVertical ? isStartVariation ? (0, $a94704e3133fbe16$export$79ffe56a765070d2) : (0, $a94704e3133fbe16$export$eabcd2c8791e7bf4) : isStartVariation ? (0, $a94704e3133fbe16$export$40e543e69a8b3fbb) : (0, $a94704e3133fbe16$export$1e95b668f3b82d);\n        if (referenceRect[len] > popperRect[len]) mainVariationSide = (0, $d8d1c19fcab8b98a$export$2e2bcd8739ae039)(mainVariationSide);\n        var altVariationSide = (0, $d8d1c19fcab8b98a$export$2e2bcd8739ae039)(mainVariationSide);\n        var checks = [];\n        if (checkMainAxis) checks.push(overflow[_basePlacement] <= 0);\n        if (checkAltAxis) checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n        if (checks.every(function(check) {\n            return check;\n        })) {\n            firstFittingPlacement = placement;\n            makeFallbackChecks = false;\n            break;\n        }\n        checksMap.set(placement, checks);\n    }\n    if (makeFallbackChecks) {\n        // `2` may be desired in some cases – research later\n        var numberOfChecks = flipVariations ? 3 : 1;\n        var _loop = function _loop(_i) {\n            var fittingPlacement = placements.find(function(placement) {\n                var checks = checksMap.get(placement);\n                if (checks) return checks.slice(0, _i).every(function(check) {\n                    return check;\n                });\n            });\n            if (fittingPlacement) {\n                firstFittingPlacement = fittingPlacement;\n                return \"break\";\n            }\n        };\n        for(var _i = numberOfChecks; _i > 0; _i--){\n            var _ret = _loop(_i);\n            if (_ret === \"break\") break;\n        }\n    }\n    if (state.placement !== firstFittingPlacement) {\n        state.modifiersData[name]._skip = true;\n        state.placement = firstFittingPlacement;\n        state.reset = true;\n    }\n} // eslint-disable-next-line import/no-unused-modules\nvar $5fa2f8fc84eb9429$export$2e2bcd8739ae039 = {\n    name: \"flip\",\n    enabled: true,\n    phase: \"main\",\n    fn: $5fa2f8fc84eb9429$var$flip,\n    requiresIfExists: [\n        \"offset\"\n    ],\n    data: {\n        _skip: false\n    }\n};\n\n\n\n\n\nfunction $4f97934e8dbef3cc$export$2e2bcd8739ae039(axis) {\n    return axis === \"x\" ? \"y\" : \"x\";\n}\n\n\n\nfunction $711bed0e4fb75d3f$export$f28d906d67a997f3(min, value, max) {\n    return (0, $e0beaf1fc26deee3$export$8960430cfd85939f)(min, (0, $e0beaf1fc26deee3$export$96ec731ed4dcb222)(value, max));\n}\nfunction $711bed0e4fb75d3f$export$86c8af6d3ef0b4a(min, value, max) {\n    var v = $711bed0e4fb75d3f$export$f28d906d67a997f3(min, value, max);\n    return v > max ? max : v;\n}\n\n\n\n\n\n\n\n\nfunction $0598b84f7e68d489$var$preventOverflow(_ref) {\n    var state = _ref.state, options = _ref.options, name = _ref.name;\n    var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, padding = options.padding, _options$tether = options.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n    var overflow = (0, $724adaa25380997c$export$2e2bcd8739ae039)(state, {\n        boundary: boundary,\n        rootBoundary: rootBoundary,\n        padding: padding,\n        altBoundary: altBoundary\n    });\n    var basePlacement = (0, $62df636877274c69$export$2e2bcd8739ae039)(state.placement);\n    var variation = (0, $873b81dce61132cd$export$2e2bcd8739ae039)(state.placement);\n    var isBasePlacement = !variation;\n    var mainAxis = (0, $8cdaee54ad91b509$export$2e2bcd8739ae039)(basePlacement);\n    var altAxis = (0, $4f97934e8dbef3cc$export$2e2bcd8739ae039)(mainAxis);\n    var popperOffsets = state.modifiersData.popperOffsets;\n    var referenceRect = state.rects.reference;\n    var popperRect = state.rects.popper;\n    var tetherOffsetValue = typeof tetherOffset === \"function\" ? tetherOffset(Object.assign({}, state.rects, {\n        placement: state.placement\n    })) : tetherOffset;\n    var normalizedTetherOffsetValue = typeof tetherOffsetValue === \"number\" ? {\n        mainAxis: tetherOffsetValue,\n        altAxis: tetherOffsetValue\n    } : Object.assign({\n        mainAxis: 0,\n        altAxis: 0\n    }, tetherOffsetValue);\n    var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\n    var data = {\n        x: 0,\n        y: 0\n    };\n    if (!popperOffsets) return;\n    if (checkMainAxis) {\n        var _offsetModifierState$;\n        var mainSide = mainAxis === \"y\" ? (0, $a94704e3133fbe16$export$1e95b668f3b82d) : (0, $a94704e3133fbe16$export$eabcd2c8791e7bf4);\n        var altSide = mainAxis === \"y\" ? (0, $a94704e3133fbe16$export$40e543e69a8b3fbb) : (0, $a94704e3133fbe16$export$79ffe56a765070d2);\n        var len = mainAxis === \"y\" ? \"height\" : \"width\";\n        var offset = popperOffsets[mainAxis];\n        var min = offset + overflow[mainSide];\n        var max = offset - overflow[altSide];\n        var additive = tether ? -popperRect[len] / 2 : 0;\n        var minLen = variation === (0, $a94704e3133fbe16$export$b3571188c770cc5a) ? referenceRect[len] : popperRect[len];\n        var maxLen = variation === (0, $a94704e3133fbe16$export$b3571188c770cc5a) ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n        // outside the reference bounds\n        var arrowElement = state.elements.arrow;\n        var arrowRect = tether && arrowElement ? (0, $c0579089f336dea9$export$2e2bcd8739ae039)(arrowElement) : {\n            width: 0,\n            height: 0\n        };\n        var arrowPaddingObject = state.modifiersData[\"arrow#persistent\"] ? state.modifiersData[\"arrow#persistent\"].padding : (0, $f7baa3d7766ddfd5$export$2e2bcd8739ae039)();\n        var arrowPaddingMin = arrowPaddingObject[mainSide];\n        var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n        // to include its full size in the calculation. If the reference is small\n        // and near the edge of a boundary, the popper can overflow even if the\n        // reference is not overflowing as well (e.g. virtual elements with no\n        // width or height)\n        var arrowLen = (0, $711bed0e4fb75d3f$export$f28d906d67a997f3)(0, referenceRect[len], arrowRect[len]);\n        var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\n        var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\n        var arrowOffsetParent = state.elements.arrow && (0, $1fdd6cf5db426e4d$export$2e2bcd8739ae039)(state.elements.arrow);\n        var clientOffset = arrowOffsetParent ? mainAxis === \"y\" ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n        var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\n        var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n        var tetherMax = offset + maxOffset - offsetModifierValue;\n        var preventedOffset = (0, $711bed0e4fb75d3f$export$f28d906d67a997f3)(tether ? (0, $e0beaf1fc26deee3$export$96ec731ed4dcb222)(min, tetherMin) : min, offset, tether ? (0, $e0beaf1fc26deee3$export$8960430cfd85939f)(max, tetherMax) : max);\n        popperOffsets[mainAxis] = preventedOffset;\n        data[mainAxis] = preventedOffset - offset;\n    }\n    if (checkAltAxis) {\n        var _offsetModifierState$2;\n        var _mainSide = mainAxis === \"x\" ? (0, $a94704e3133fbe16$export$1e95b668f3b82d) : (0, $a94704e3133fbe16$export$eabcd2c8791e7bf4);\n        var _altSide = mainAxis === \"x\" ? (0, $a94704e3133fbe16$export$40e543e69a8b3fbb) : (0, $a94704e3133fbe16$export$79ffe56a765070d2);\n        var _offset = popperOffsets[altAxis];\n        var _len = altAxis === \"y\" ? \"height\" : \"width\";\n        var _min = _offset + overflow[_mainSide];\n        var _max = _offset - overflow[_altSide];\n        var isOriginSide = [\n            (0, $a94704e3133fbe16$export$1e95b668f3b82d),\n            (0, $a94704e3133fbe16$export$eabcd2c8791e7bf4)\n        ].indexOf(basePlacement) !== -1;\n        var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\n        var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\n        var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\n        var _preventedOffset = tether && isOriginSide ? (0, $711bed0e4fb75d3f$export$86c8af6d3ef0b4a)(_tetherMin, _offset, _tetherMax) : (0, $711bed0e4fb75d3f$export$f28d906d67a997f3)(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\n        popperOffsets[altAxis] = _preventedOffset;\n        data[altAxis] = _preventedOffset - _offset;\n    }\n    state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\nvar $0598b84f7e68d489$export$2e2bcd8739ae039 = {\n    name: \"preventOverflow\",\n    enabled: true,\n    phase: \"main\",\n    fn: $0598b84f7e68d489$var$preventOverflow,\n    requiresIfExists: [\n        \"offset\"\n    ]\n};\n\n\n\n\n\n\n\n\n\n\n\nvar $671483b845900ee3$var$toPaddingObject = function toPaddingObject(padding, state) {\n    padding = typeof padding === \"function\" ? padding(Object.assign({}, state.rects, {\n        placement: state.placement\n    })) : padding;\n    return (0, $c11f65b1ae4396ba$export$2e2bcd8739ae039)(typeof padding !== \"number\" ? padding : (0, $8c698fce3c6fce96$export$2e2bcd8739ae039)(padding, (0, $a94704e3133fbe16$export$aec2ce47c367b8c3)));\n};\nfunction $671483b845900ee3$var$arrow(_ref) {\n    var _state$modifiersData$;\n    var state = _ref.state, name = _ref.name, options = _ref.options;\n    var arrowElement = state.elements.arrow;\n    var popperOffsets = state.modifiersData.popperOffsets;\n    var basePlacement = (0, $62df636877274c69$export$2e2bcd8739ae039)(state.placement);\n    var axis = (0, $8cdaee54ad91b509$export$2e2bcd8739ae039)(basePlacement);\n    var isVertical = [\n        (0, $a94704e3133fbe16$export$eabcd2c8791e7bf4),\n        (0, $a94704e3133fbe16$export$79ffe56a765070d2)\n    ].indexOf(basePlacement) >= 0;\n    var len = isVertical ? \"height\" : \"width\";\n    if (!arrowElement || !popperOffsets) return;\n    var paddingObject = $671483b845900ee3$var$toPaddingObject(options.padding, state);\n    var arrowRect = (0, $c0579089f336dea9$export$2e2bcd8739ae039)(arrowElement);\n    var minProp = axis === \"y\" ? (0, $a94704e3133fbe16$export$1e95b668f3b82d) : (0, $a94704e3133fbe16$export$eabcd2c8791e7bf4);\n    var maxProp = axis === \"y\" ? (0, $a94704e3133fbe16$export$40e543e69a8b3fbb) : (0, $a94704e3133fbe16$export$79ffe56a765070d2);\n    var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n    var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n    var arrowOffsetParent = (0, $1fdd6cf5db426e4d$export$2e2bcd8739ae039)(arrowElement);\n    var clientSize = arrowOffsetParent ? axis === \"y\" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n    var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n    // outside of the popper bounds\n    var min = paddingObject[minProp];\n    var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n    var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n    var offset = (0, $711bed0e4fb75d3f$export$f28d906d67a997f3)(min, center, max); // Prevents breaking syntax highlighting...\n    var axisProp = axis;\n    state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\nfunction $671483b845900ee3$var$effect(_ref2) {\n    var state = _ref2.state, options = _ref2.options;\n    var _options$element = options.element, arrowElement = _options$element === void 0 ? \"[data-popper-arrow]\" : _options$element;\n    if (arrowElement == null) return;\n     // CSS selector\n    if (typeof arrowElement === \"string\") {\n        arrowElement = state.elements.popper.querySelector(arrowElement);\n        if (!arrowElement) return;\n    }\n    if (!(0, $fe95fa72fab69498$export$2e2bcd8739ae039)(state.elements.popper, arrowElement)) return;\n    state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\nvar $671483b845900ee3$export$2e2bcd8739ae039 = {\n    name: \"arrow\",\n    enabled: true,\n    phase: \"main\",\n    fn: $671483b845900ee3$var$arrow,\n    effect: $671483b845900ee3$var$effect,\n    requires: [\n        \"popperOffsets\"\n    ],\n    requiresIfExists: [\n        \"preventOverflow\"\n    ]\n};\n\n\n\n\nfunction $be0e5a97b5c4f0a9$var$getSideOffsets(overflow, rect, preventedOffsets) {\n    if (preventedOffsets === void 0) preventedOffsets = {\n        x: 0,\n        y: 0\n    };\n    return {\n        top: overflow.top - rect.height - preventedOffsets.y,\n        right: overflow.right - rect.width + preventedOffsets.x,\n        bottom: overflow.bottom - rect.height + preventedOffsets.y,\n        left: overflow.left - rect.width - preventedOffsets.x\n    };\n}\nfunction $be0e5a97b5c4f0a9$var$isAnySideFullyClipped(overflow) {\n    return [\n        (0, $a94704e3133fbe16$export$1e95b668f3b82d),\n        (0, $a94704e3133fbe16$export$79ffe56a765070d2),\n        (0, $a94704e3133fbe16$export$40e543e69a8b3fbb),\n        (0, $a94704e3133fbe16$export$eabcd2c8791e7bf4)\n    ].some(function(side) {\n        return overflow[side] >= 0;\n    });\n}\nfunction $be0e5a97b5c4f0a9$var$hide(_ref) {\n    var state = _ref.state, name = _ref.name;\n    var referenceRect = state.rects.reference;\n    var popperRect = state.rects.popper;\n    var preventedOffsets = state.modifiersData.preventOverflow;\n    var referenceOverflow = (0, $724adaa25380997c$export$2e2bcd8739ae039)(state, {\n        elementContext: \"reference\"\n    });\n    var popperAltOverflow = (0, $724adaa25380997c$export$2e2bcd8739ae039)(state, {\n        altBoundary: true\n    });\n    var referenceClippingOffsets = $be0e5a97b5c4f0a9$var$getSideOffsets(referenceOverflow, referenceRect);\n    var popperEscapeOffsets = $be0e5a97b5c4f0a9$var$getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n    var isReferenceHidden = $be0e5a97b5c4f0a9$var$isAnySideFullyClipped(referenceClippingOffsets);\n    var hasPopperEscaped = $be0e5a97b5c4f0a9$var$isAnySideFullyClipped(popperEscapeOffsets);\n    state.modifiersData[name] = {\n        referenceClippingOffsets: referenceClippingOffsets,\n        popperEscapeOffsets: popperEscapeOffsets,\n        isReferenceHidden: isReferenceHidden,\n        hasPopperEscaped: hasPopperEscaped\n    };\n    state.attributes.popper = Object.assign({}, state.attributes.popper, {\n        \"data-popper-reference-hidden\": isReferenceHidden,\n        \"data-popper-escaped\": hasPopperEscaped\n    });\n} // eslint-disable-next-line import/no-unused-modules\nvar $be0e5a97b5c4f0a9$export$2e2bcd8739ae039 = {\n    name: \"hide\",\n    enabled: true,\n    phase: \"main\",\n    requiresIfExists: [\n        \"preventOverflow\"\n    ],\n    fn: $be0e5a97b5c4f0a9$var$hide\n};\n\n\n\n\nvar $55c7f2385d3e922b$export$d34966752335dd47 = [\n    (0, $41bc2dfc6eb96248$export$2e2bcd8739ae039),\n    (0, $13f1c3bc9b36621c$export$2e2bcd8739ae039),\n    (0, $5106537fe02a42d1$export$2e2bcd8739ae039),\n    (0, $89d890c165874cff$export$2e2bcd8739ae039),\n    (0, $bea6e8d498694752$export$2e2bcd8739ae039),\n    (0, $5fa2f8fc84eb9429$export$2e2bcd8739ae039),\n    (0, $0598b84f7e68d489$export$2e2bcd8739ae039),\n    (0, $671483b845900ee3$export$2e2bcd8739ae039),\n    (0, $be0e5a97b5c4f0a9$export$2e2bcd8739ae039)\n];\nvar $55c7f2385d3e922b$export$8f7491d57c8f97a9 = /*#__PURE__*/ (0, $5bebade71559124e$export$ed5e13716264f202)({\n    defaultModifiers: $55c7f2385d3e922b$export$d34966752335dd47\n}); // eslint-disable-next-line import/no-unused-modules\n\n\nvar $95051df85825bf2c$export$c96c811c44a42da5 = '<svg width=\"16\" height=\"6\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 6s1.796-.013 4.67-3.615C5.851.9 6.93.006 8 0c1.07-.006 2.148.887 3.343 2.385C14.233 6.005 16 6 16 6H0z\"></svg>';\nvar $95051df85825bf2c$var$BOX_CLASS = \"tippy-box\";\nvar $95051df85825bf2c$var$CONTENT_CLASS = \"tippy-content\";\nvar $95051df85825bf2c$var$BACKDROP_CLASS = \"tippy-backdrop\";\nvar $95051df85825bf2c$var$ARROW_CLASS = \"tippy-arrow\";\nvar $95051df85825bf2c$var$SVG_ARROW_CLASS = \"tippy-svg-arrow\";\nvar $95051df85825bf2c$var$TOUCH_OPTIONS = {\n    passive: true,\n    capture: true\n};\nvar $95051df85825bf2c$var$TIPPY_DEFAULT_APPEND_TO = function TIPPY_DEFAULT_APPEND_TO() {\n    return document.body;\n};\nfunction $95051df85825bf2c$var$hasOwnProperty(obj, key) {\n    return ({}).hasOwnProperty.call(obj, key);\n}\nfunction $95051df85825bf2c$var$getValueAtIndexOrReturn(value, index, defaultValue) {\n    if (Array.isArray(value)) {\n        var v = value[index];\n        return v == null ? Array.isArray(defaultValue) ? defaultValue[index] : defaultValue : v;\n    }\n    return value;\n}\nfunction $95051df85825bf2c$var$isType(value, type) {\n    var str = ({}).toString.call(value);\n    return str.indexOf(\"[object\") === 0 && str.indexOf(type + \"]\") > -1;\n}\nfunction $95051df85825bf2c$var$invokeWithArgsOrReturn(value, args) {\n    return typeof value === \"function\" ? value.apply(void 0, args) : value;\n}\nfunction $95051df85825bf2c$var$debounce(fn, ms) {\n    // Avoid wrapping in `setTimeout` if ms is 0 anyway\n    if (ms === 0) return fn;\n    var timeout;\n    return function(arg) {\n        clearTimeout(timeout);\n        timeout = setTimeout(function() {\n            fn(arg);\n        }, ms);\n    };\n}\nfunction $95051df85825bf2c$var$removeProperties(obj, keys) {\n    var clone = Object.assign({}, obj);\n    keys.forEach(function(key) {\n        delete clone[key];\n    });\n    return clone;\n}\nfunction $95051df85825bf2c$var$splitBySpaces(value) {\n    return value.split(/\\s+/).filter(Boolean);\n}\nfunction $95051df85825bf2c$var$normalizeToArray(value) {\n    return [].concat(value);\n}\nfunction $95051df85825bf2c$var$pushIfUnique(arr, value) {\n    if (arr.indexOf(value) === -1) arr.push(value);\n}\nfunction $95051df85825bf2c$var$unique(arr) {\n    return arr.filter(function(item, index) {\n        return arr.indexOf(item) === index;\n    });\n}\nfunction $95051df85825bf2c$var$getBasePlacement(placement) {\n    return placement.split(\"-\")[0];\n}\nfunction $95051df85825bf2c$var$arrayFrom(value) {\n    return [].slice.call(value);\n}\nfunction $95051df85825bf2c$var$removeUndefinedProps(obj) {\n    return Object.keys(obj).reduce(function(acc, key) {\n        if (obj[key] !== undefined) acc[key] = obj[key];\n        return acc;\n    }, {});\n}\nfunction $95051df85825bf2c$var$div() {\n    return document.createElement(\"div\");\n}\nfunction $95051df85825bf2c$var$isElement(value) {\n    return [\n        \"Element\",\n        \"Fragment\"\n    ].some(function(type) {\n        return $95051df85825bf2c$var$isType(value, type);\n    });\n}\nfunction $95051df85825bf2c$var$isNodeList(value) {\n    return $95051df85825bf2c$var$isType(value, \"NodeList\");\n}\nfunction $95051df85825bf2c$var$isMouseEvent(value) {\n    return $95051df85825bf2c$var$isType(value, \"MouseEvent\");\n}\nfunction $95051df85825bf2c$var$isReferenceElement(value) {\n    return !!(value && value._tippy && value._tippy.reference === value);\n}\nfunction $95051df85825bf2c$var$getArrayOfElements(value) {\n    if ($95051df85825bf2c$var$isElement(value)) return [\n        value\n    ];\n    if ($95051df85825bf2c$var$isNodeList(value)) return $95051df85825bf2c$var$arrayFrom(value);\n    if (Array.isArray(value)) return value;\n    return $95051df85825bf2c$var$arrayFrom(document.querySelectorAll(value));\n}\nfunction $95051df85825bf2c$var$setTransitionDuration(els, value) {\n    els.forEach(function(el) {\n        if (el) el.style.transitionDuration = value + \"ms\";\n    });\n}\nfunction $95051df85825bf2c$var$setVisibilityState(els, state) {\n    els.forEach(function(el) {\n        if (el) el.setAttribute(\"data-state\", state);\n    });\n}\nfunction $95051df85825bf2c$var$getOwnerDocument(elementOrElements) {\n    var _element$ownerDocumen;\n    var _normalizeToArray = $95051df85825bf2c$var$normalizeToArray(elementOrElements), element = _normalizeToArray[0]; // Elements created via a <template> have an ownerDocument with no reference to the body\n    return element != null && (_element$ownerDocumen = element.ownerDocument) != null && _element$ownerDocumen.body ? element.ownerDocument : document;\n}\nfunction $95051df85825bf2c$var$isCursorOutsideInteractiveBorder(popperTreeData, event) {\n    var clientX = event.clientX, clientY = event.clientY;\n    return popperTreeData.every(function(_ref) {\n        var popperRect = _ref.popperRect, popperState = _ref.popperState, props = _ref.props;\n        var interactiveBorder = props.interactiveBorder;\n        var basePlacement = $95051df85825bf2c$var$getBasePlacement(popperState.placement);\n        var offsetData = popperState.modifiersData.offset;\n        if (!offsetData) return true;\n        var topDistance = basePlacement === \"bottom\" ? offsetData.top.y : 0;\n        var bottomDistance = basePlacement === \"top\" ? offsetData.bottom.y : 0;\n        var leftDistance = basePlacement === \"right\" ? offsetData.left.x : 0;\n        var rightDistance = basePlacement === \"left\" ? offsetData.right.x : 0;\n        var exceedsTop = popperRect.top - clientY + topDistance > interactiveBorder;\n        var exceedsBottom = clientY - popperRect.bottom - bottomDistance > interactiveBorder;\n        var exceedsLeft = popperRect.left - clientX + leftDistance > interactiveBorder;\n        var exceedsRight = clientX - popperRect.right - rightDistance > interactiveBorder;\n        return exceedsTop || exceedsBottom || exceedsLeft || exceedsRight;\n    });\n}\nfunction $95051df85825bf2c$var$updateTransitionEndListener(box, action, listener) {\n    var method = action + \"EventListener\"; // some browsers apparently support `transition` (unprefixed) but only fire\n    // `webkitTransitionEnd`...\n    [\n        \"transitionend\",\n        \"webkitTransitionEnd\"\n    ].forEach(function(event) {\n        box[method](event, listener);\n    });\n}\n/**\n * Compared to xxx.contains, this function works for dom structures with shadow\n * dom\n */ function $95051df85825bf2c$var$actualContains(parent, child) {\n    var target = child;\n    while(target){\n        var _target$getRootNode;\n        if (parent.contains(target)) return true;\n        target = target.getRootNode == null ? void 0 : (_target$getRootNode = target.getRootNode()) == null ? void 0 : _target$getRootNode.host;\n    }\n    return false;\n}\nvar $95051df85825bf2c$var$currentInput = {\n    isTouch: false\n};\nvar $95051df85825bf2c$var$lastMouseMoveTime = 0;\n/**\n * When a `touchstart` event is fired, it's assumed the user is using touch\n * input. We'll bind a `mousemove` event listener to listen for mouse input in\n * the future. This way, the `isTouch` property is fully dynamic and will handle\n * hybrid devices that use a mix of touch + mouse input.\n */ function $95051df85825bf2c$var$onDocumentTouchStart() {\n    if ($95051df85825bf2c$var$currentInput.isTouch) return;\n    $95051df85825bf2c$var$currentInput.isTouch = true;\n    if (window.performance) document.addEventListener(\"mousemove\", $95051df85825bf2c$var$onDocumentMouseMove);\n}\n/**\n * When two `mousemove` event are fired consecutively within 20ms, it's assumed\n * the user is using mouse input again. `mousemove` can fire on touch devices as\n * well, but very rarely that quickly.\n */ function $95051df85825bf2c$var$onDocumentMouseMove() {\n    var now = performance.now();\n    if (now - $95051df85825bf2c$var$lastMouseMoveTime < 20) {\n        $95051df85825bf2c$var$currentInput.isTouch = false;\n        document.removeEventListener(\"mousemove\", $95051df85825bf2c$var$onDocumentMouseMove);\n    }\n    $95051df85825bf2c$var$lastMouseMoveTime = now;\n}\n/**\n * When an element is in focus and has a tippy, leaving the tab/window and\n * returning causes it to show again. For mouse users this is unexpected, but\n * for keyboard use it makes sense.\n * TODO: find a better technique to solve this problem\n */ function $95051df85825bf2c$var$onWindowBlur() {\n    var activeElement = document.activeElement;\n    if ($95051df85825bf2c$var$isReferenceElement(activeElement)) {\n        var instance = activeElement._tippy;\n        if (activeElement.blur && !instance.state.isVisible) activeElement.blur();\n    }\n}\nfunction $95051df85825bf2c$var$bindGlobalEventListeners() {\n    document.addEventListener(\"touchstart\", $95051df85825bf2c$var$onDocumentTouchStart, $95051df85825bf2c$var$TOUCH_OPTIONS);\n    window.addEventListener(\"blur\", $95051df85825bf2c$var$onWindowBlur);\n}\nvar $95051df85825bf2c$var$isBrowser = typeof window !== \"undefined\" && typeof document !== \"undefined\";\nvar $95051df85825bf2c$var$isIE11 = $95051df85825bf2c$var$isBrowser ? !!window.msCrypto : false;\nfunction $95051df85825bf2c$var$createMemoryLeakWarning(method) {\n    var txt = method === \"destroy\" ? \"n already-\" : \" \";\n    return [\n        method + \"() was called on a\" + txt + \"destroyed instance. This is a no-op but\",\n        \"indicates a potential memory leak.\"\n    ].join(\" \");\n}\nfunction $95051df85825bf2c$var$clean(value) {\n    var spacesAndTabs = /[ \\t]{2,}/g;\n    var lineStartWithSpaces = /^[ \\t]*/gm;\n    return value.replace(spacesAndTabs, \" \").replace(lineStartWithSpaces, \"\").trim();\n}\nfunction $95051df85825bf2c$var$getDevMessage(message) {\n    return $95051df85825bf2c$var$clean(\"\\n  %ctippy.js\\n\\n  %c\" + $95051df85825bf2c$var$clean(message) + \"\\n\\n  %c\\uD83D\\uDC77\\u200D This is a development-only message. It will be removed in production.\\n  \");\n}\nfunction $95051df85825bf2c$var$getFormattedMessage(message) {\n    return [\n        $95051df85825bf2c$var$getDevMessage(message),\n        \"color: #00C584; font-size: 1.3em; font-weight: bold;\",\n        \"line-height: 1.5\",\n        \"color: #a6a095;\"\n    ];\n} // Assume warnings and errors never have the same message\nvar $95051df85825bf2c$var$visitedMessages;\nfunction $95051df85825bf2c$var$resetVisitedMessages() {\n    $95051df85825bf2c$var$visitedMessages = new Set();\n}\nfunction $95051df85825bf2c$var$warnWhen(condition, message) {\n    if (condition && !$95051df85825bf2c$var$visitedMessages.has(message)) {\n        var _console;\n        $95051df85825bf2c$var$visitedMessages.add(message);\n        (_console = console).warn.apply(_console, $95051df85825bf2c$var$getFormattedMessage(message));\n    }\n}\nfunction $95051df85825bf2c$var$errorWhen(condition, message) {\n    if (condition && !$95051df85825bf2c$var$visitedMessages.has(message)) {\n        var _console2;\n        $95051df85825bf2c$var$visitedMessages.add(message);\n        (_console2 = console).error.apply(_console2, $95051df85825bf2c$var$getFormattedMessage(message));\n    }\n}\nfunction $95051df85825bf2c$var$validateTargets(targets) {\n    var didPassFalsyValue = !targets;\n    var didPassPlainObject = Object.prototype.toString.call(targets) === \"[object Object]\" && !targets.addEventListener;\n    $95051df85825bf2c$var$errorWhen(didPassFalsyValue, [\n        \"tippy() was passed\",\n        \"`\" + String(targets) + \"`\",\n        \"as its targets (first) argument. Valid types are: String, Element,\",\n        \"Element[], or NodeList.\"\n    ].join(\" \"));\n    $95051df85825bf2c$var$errorWhen(didPassPlainObject, [\n        \"tippy() was passed a plain object which is not supported as an argument\",\n        \"for virtual positioning. Use props.getReferenceClientRect instead.\"\n    ].join(\" \"));\n}\nvar $95051df85825bf2c$var$pluginProps = {\n    animateFill: false,\n    followCursor: false,\n    inlinePositioning: false,\n    sticky: false\n};\nvar $95051df85825bf2c$var$renderProps = {\n    allowHTML: false,\n    animation: \"fade\",\n    arrow: true,\n    content: \"\",\n    inertia: false,\n    maxWidth: 350,\n    role: \"tooltip\",\n    theme: \"\",\n    zIndex: 9999\n};\nvar $95051df85825bf2c$var$defaultProps = Object.assign({\n    appendTo: $95051df85825bf2c$var$TIPPY_DEFAULT_APPEND_TO,\n    aria: {\n        content: \"auto\",\n        expanded: \"auto\"\n    },\n    delay: 0,\n    duration: [\n        300,\n        250\n    ],\n    getReferenceClientRect: null,\n    hideOnClick: true,\n    ignoreAttributes: false,\n    interactive: false,\n    interactiveBorder: 2,\n    interactiveDebounce: 0,\n    moveTransition: \"\",\n    offset: [\n        0,\n        10\n    ],\n    onAfterUpdate: function onAfterUpdate() {},\n    onBeforeUpdate: function onBeforeUpdate() {},\n    onCreate: function onCreate() {},\n    onDestroy: function onDestroy() {},\n    onHidden: function onHidden() {},\n    onHide: function onHide() {},\n    onMount: function onMount() {},\n    onShow: function onShow() {},\n    onShown: function onShown() {},\n    onTrigger: function onTrigger() {},\n    onUntrigger: function onUntrigger() {},\n    onClickOutside: function onClickOutside() {},\n    placement: \"top\",\n    plugins: [],\n    popperOptions: {},\n    render: null,\n    showOnCreate: false,\n    touch: true,\n    trigger: \"mouseenter focus\",\n    triggerTarget: null\n}, $95051df85825bf2c$var$pluginProps, $95051df85825bf2c$var$renderProps);\nvar $95051df85825bf2c$var$defaultKeys = Object.keys($95051df85825bf2c$var$defaultProps);\nvar $95051df85825bf2c$var$setDefaultProps = function setDefaultProps(partialProps) {\n    var keys = Object.keys(partialProps);\n    keys.forEach(function(key) {\n        $95051df85825bf2c$var$defaultProps[key] = partialProps[key];\n    });\n};\nfunction $95051df85825bf2c$var$getExtendedPassedProps(passedProps) {\n    var plugins = passedProps.plugins || [];\n    var pluginProps = plugins.reduce(function(acc, plugin) {\n        var name = plugin.name, defaultValue = plugin.defaultValue;\n        if (name) {\n            var _name;\n            acc[name] = passedProps[name] !== undefined ? passedProps[name] : (_name = $95051df85825bf2c$var$defaultProps[name]) != null ? _name : defaultValue;\n        }\n        return acc;\n    }, {});\n    return Object.assign({}, passedProps, pluginProps);\n}\nfunction $95051df85825bf2c$var$getDataAttributeProps(reference, plugins) {\n    var propKeys = plugins ? Object.keys($95051df85825bf2c$var$getExtendedPassedProps(Object.assign({}, $95051df85825bf2c$var$defaultProps, {\n        plugins: plugins\n    }))) : $95051df85825bf2c$var$defaultKeys;\n    var props = propKeys.reduce(function(acc, key) {\n        var valueAsString = (reference.getAttribute(\"data-tippy-\" + key) || \"\").trim();\n        if (!valueAsString) return acc;\n        if (key === \"content\") acc[key] = valueAsString;\n        else try {\n            acc[key] = JSON.parse(valueAsString);\n        } catch (e) {\n            acc[key] = valueAsString;\n        }\n        return acc;\n    }, {});\n    return props;\n}\nfunction $95051df85825bf2c$var$evaluateProps(reference, props) {\n    var out = Object.assign({}, props, {\n        content: $95051df85825bf2c$var$invokeWithArgsOrReturn(props.content, [\n            reference\n        ])\n    }, props.ignoreAttributes ? {} : $95051df85825bf2c$var$getDataAttributeProps(reference, props.plugins));\n    out.aria = Object.assign({}, $95051df85825bf2c$var$defaultProps.aria, out.aria);\n    out.aria = {\n        expanded: out.aria.expanded === \"auto\" ? props.interactive : out.aria.expanded,\n        content: out.aria.content === \"auto\" ? props.interactive ? null : \"describedby\" : out.aria.content\n    };\n    return out;\n}\nfunction $95051df85825bf2c$var$validateProps(partialProps, plugins) {\n    if (partialProps === void 0) partialProps = {};\n    if (plugins === void 0) plugins = [];\n    var keys = Object.keys(partialProps);\n    keys.forEach(function(prop) {\n        var nonPluginProps = $95051df85825bf2c$var$removeProperties($95051df85825bf2c$var$defaultProps, Object.keys($95051df85825bf2c$var$pluginProps));\n        var didPassUnknownProp = !$95051df85825bf2c$var$hasOwnProperty(nonPluginProps, prop); // Check if the prop exists in `plugins`\n        if (didPassUnknownProp) didPassUnknownProp = plugins.filter(function(plugin) {\n            return plugin.name === prop;\n        }).length === 0;\n        $95051df85825bf2c$var$warnWhen(didPassUnknownProp, [\n            \"`\" + prop + \"`\",\n            \"is not a valid prop. You may have spelled it incorrectly, or if it's\",\n            \"a plugin, forgot to pass it in an array as props.plugins.\",\n            \"\\n\\n\",\n            \"All props: https://atomiks.github.io/tippyjs/v6/all-props/\\n\",\n            \"Plugins: https://atomiks.github.io/tippyjs/v6/plugins/\"\n        ].join(\" \"));\n    });\n}\nvar $95051df85825bf2c$var$innerHTML = function innerHTML() {\n    return \"innerHTML\";\n};\nfunction $95051df85825bf2c$var$dangerouslySetInnerHTML(element, html) {\n    element[$95051df85825bf2c$var$innerHTML()] = html;\n}\nfunction $95051df85825bf2c$var$createArrowElement(value) {\n    var arrow = $95051df85825bf2c$var$div();\n    if (value === true) arrow.className = $95051df85825bf2c$var$ARROW_CLASS;\n    else {\n        arrow.className = $95051df85825bf2c$var$SVG_ARROW_CLASS;\n        if ($95051df85825bf2c$var$isElement(value)) arrow.appendChild(value);\n        else $95051df85825bf2c$var$dangerouslySetInnerHTML(arrow, value);\n    }\n    return arrow;\n}\nfunction $95051df85825bf2c$var$setContent(content, props) {\n    if ($95051df85825bf2c$var$isElement(props.content)) {\n        $95051df85825bf2c$var$dangerouslySetInnerHTML(content, \"\");\n        content.appendChild(props.content);\n    } else if (typeof props.content !== \"function\") {\n        if (props.allowHTML) $95051df85825bf2c$var$dangerouslySetInnerHTML(content, props.content);\n        else content.textContent = props.content;\n    }\n}\nfunction $95051df85825bf2c$var$getChildren(popper) {\n    var box = popper.firstElementChild;\n    var boxChildren = $95051df85825bf2c$var$arrayFrom(box.children);\n    return {\n        box: box,\n        content: boxChildren.find(function(node) {\n            return node.classList.contains($95051df85825bf2c$var$CONTENT_CLASS);\n        }),\n        arrow: boxChildren.find(function(node) {\n            return node.classList.contains($95051df85825bf2c$var$ARROW_CLASS) || node.classList.contains($95051df85825bf2c$var$SVG_ARROW_CLASS);\n        }),\n        backdrop: boxChildren.find(function(node) {\n            return node.classList.contains($95051df85825bf2c$var$BACKDROP_CLASS);\n        })\n    };\n}\nfunction $95051df85825bf2c$var$render(instance) {\n    var popper = $95051df85825bf2c$var$div();\n    var box = $95051df85825bf2c$var$div();\n    box.className = $95051df85825bf2c$var$BOX_CLASS;\n    box.setAttribute(\"data-state\", \"hidden\");\n    box.setAttribute(\"tabindex\", \"-1\");\n    var content = $95051df85825bf2c$var$div();\n    content.className = $95051df85825bf2c$var$CONTENT_CLASS;\n    content.setAttribute(\"data-state\", \"hidden\");\n    $95051df85825bf2c$var$setContent(content, instance.props);\n    popper.appendChild(box);\n    box.appendChild(content);\n    onUpdate(instance.props, instance.props);\n    function onUpdate(prevProps, nextProps) {\n        var _getChildren = $95051df85825bf2c$var$getChildren(popper), box = _getChildren.box, content = _getChildren.content, arrow = _getChildren.arrow;\n        if (nextProps.theme) box.setAttribute(\"data-theme\", nextProps.theme);\n        else box.removeAttribute(\"data-theme\");\n        if (typeof nextProps.animation === \"string\") box.setAttribute(\"data-animation\", nextProps.animation);\n        else box.removeAttribute(\"data-animation\");\n        if (nextProps.inertia) box.setAttribute(\"data-inertia\", \"\");\n        else box.removeAttribute(\"data-inertia\");\n        box.style.maxWidth = typeof nextProps.maxWidth === \"number\" ? nextProps.maxWidth + \"px\" : nextProps.maxWidth;\n        if (nextProps.role) box.setAttribute(\"role\", nextProps.role);\n        else box.removeAttribute(\"role\");\n        if (prevProps.content !== nextProps.content || prevProps.allowHTML !== nextProps.allowHTML) $95051df85825bf2c$var$setContent(content, instance.props);\n        if (nextProps.arrow) {\n            if (!arrow) box.appendChild($95051df85825bf2c$var$createArrowElement(nextProps.arrow));\n            else if (prevProps.arrow !== nextProps.arrow) {\n                box.removeChild(arrow);\n                box.appendChild($95051df85825bf2c$var$createArrowElement(nextProps.arrow));\n            }\n        } else if (arrow) box.removeChild(arrow);\n    }\n    return {\n        popper: popper,\n        onUpdate: onUpdate\n    };\n} // Runtime check to identify if the render function is the default one; this\n// way we can apply default CSS transitions logic and it can be tree-shaken away\n$95051df85825bf2c$var$render.$$tippy = true;\nvar $95051df85825bf2c$var$idCounter = 1;\nvar $95051df85825bf2c$var$mouseMoveListeners = []; // Used by `hideAll()`\nvar $95051df85825bf2c$var$mountedInstances = [];\nfunction $95051df85825bf2c$var$createTippy(reference, passedProps) {\n    var props = $95051df85825bf2c$var$evaluateProps(reference, Object.assign({}, $95051df85825bf2c$var$defaultProps, $95051df85825bf2c$var$getExtendedPassedProps($95051df85825bf2c$var$removeUndefinedProps(passedProps)))); // ===========================================================================\n    // 🔒 Private members\n    // ===========================================================================\n    var showTimeout;\n    var hideTimeout;\n    var scheduleHideAnimationFrame;\n    var isVisibleFromClick = false;\n    var didHideDueToDocumentMouseDown = false;\n    var didTouchMove = false;\n    var ignoreOnFirstUpdate = false;\n    var lastTriggerEvent;\n    var currentTransitionEndListener;\n    var onFirstUpdate;\n    var listeners = [];\n    var debouncedOnMouseMove = $95051df85825bf2c$var$debounce(onMouseMove, props.interactiveDebounce);\n    var currentTarget; // ===========================================================================\n    // 🔑 Public members\n    // ===========================================================================\n    var id = $95051df85825bf2c$var$idCounter++;\n    var popperInstance = null;\n    var plugins = $95051df85825bf2c$var$unique(props.plugins);\n    var state = {\n        // Is the instance currently enabled?\n        isEnabled: true,\n        // Is the tippy currently showing and not transitioning out?\n        isVisible: false,\n        // Has the instance been destroyed?\n        isDestroyed: false,\n        // Is the tippy currently mounted to the DOM?\n        isMounted: false,\n        // Has the tippy finished transitioning in?\n        isShown: false\n    };\n    var instance = {\n        // properties\n        id: id,\n        reference: reference,\n        popper: $95051df85825bf2c$var$div(),\n        popperInstance: popperInstance,\n        props: props,\n        state: state,\n        plugins: plugins,\n        // methods\n        clearDelayTimeouts: clearDelayTimeouts,\n        setProps: setProps,\n        setContent: setContent,\n        show: show,\n        hide: hide,\n        hideWithInteractivity: hideWithInteractivity,\n        enable: enable,\n        disable: disable,\n        unmount: unmount,\n        destroy: destroy\n    }; // TODO: Investigate why this early return causes a TDZ error in the tests —\n    // it doesn't seem to happen in the browser\n    /* istanbul ignore if */ if (!props.render) return instance;\n     // ===========================================================================\n    // Initial mutations\n    // ===========================================================================\n    var _props$render = props.render(instance), popper = _props$render.popper, onUpdate = _props$render.onUpdate;\n    popper.setAttribute(\"data-tippy-root\", \"\");\n    popper.id = \"tippy-\" + instance.id;\n    instance.popper = popper;\n    reference._tippy = instance;\n    popper._tippy = instance;\n    var pluginsHooks = plugins.map(function(plugin) {\n        return plugin.fn(instance);\n    });\n    var hasAriaExpanded = reference.hasAttribute(\"aria-expanded\");\n    addListeners();\n    handleAriaExpandedAttribute();\n    handleStyles();\n    invokeHook(\"onCreate\", [\n        instance\n    ]);\n    if (props.showOnCreate) scheduleShow();\n     // Prevent a tippy with a delay from hiding if the cursor left then returned\n    // before it started hiding\n    popper.addEventListener(\"mouseenter\", function() {\n        if (instance.props.interactive && instance.state.isVisible) instance.clearDelayTimeouts();\n    });\n    popper.addEventListener(\"mouseleave\", function() {\n        if (instance.props.interactive && instance.props.trigger.indexOf(\"mouseenter\") >= 0) getDocument().addEventListener(\"mousemove\", debouncedOnMouseMove);\n    });\n    return instance; // ===========================================================================\n    // 🔒 Private methods\n    // ===========================================================================\n    function getNormalizedTouchSettings() {\n        var touch = instance.props.touch;\n        return Array.isArray(touch) ? touch : [\n            touch,\n            0\n        ];\n    }\n    function getIsCustomTouchBehavior() {\n        return getNormalizedTouchSettings()[0] === \"hold\";\n    }\n    function getIsDefaultRenderFn() {\n        var _instance$props$rende;\n        // @ts-ignore\n        return !!((_instance$props$rende = instance.props.render) != null && _instance$props$rende.$$tippy);\n    }\n    function getCurrentTarget() {\n        return currentTarget || reference;\n    }\n    function getDocument() {\n        var parent = getCurrentTarget().parentNode;\n        return parent ? $95051df85825bf2c$var$getOwnerDocument(parent) : document;\n    }\n    function getDefaultTemplateChildren() {\n        return $95051df85825bf2c$var$getChildren(popper);\n    }\n    function getDelay(isShow) {\n        // For touch or keyboard input, force `0` delay for UX reasons\n        // Also if the instance is mounted but not visible (transitioning out),\n        // ignore delay\n        if (instance.state.isMounted && !instance.state.isVisible || $95051df85825bf2c$var$currentInput.isTouch || lastTriggerEvent && lastTriggerEvent.type === \"focus\") return 0;\n        return $95051df85825bf2c$var$getValueAtIndexOrReturn(instance.props.delay, isShow ? 0 : 1, $95051df85825bf2c$var$defaultProps.delay);\n    }\n    function handleStyles(fromHide) {\n        if (fromHide === void 0) fromHide = false;\n        popper.style.pointerEvents = instance.props.interactive && !fromHide ? \"\" : \"none\";\n        popper.style.zIndex = \"\" + instance.props.zIndex;\n    }\n    function invokeHook(hook, args, shouldInvokePropsHook) {\n        if (shouldInvokePropsHook === void 0) shouldInvokePropsHook = true;\n        pluginsHooks.forEach(function(pluginHooks) {\n            if (pluginHooks[hook]) pluginHooks[hook].apply(pluginHooks, args);\n        });\n        if (shouldInvokePropsHook) {\n            var _instance$props;\n            (_instance$props = instance.props)[hook].apply(_instance$props, args);\n        }\n    }\n    function handleAriaContentAttribute() {\n        var aria = instance.props.aria;\n        if (!aria.content) return;\n        var attr = \"aria-\" + aria.content;\n        var id = popper.id;\n        var nodes = $95051df85825bf2c$var$normalizeToArray(instance.props.triggerTarget || reference);\n        nodes.forEach(function(node) {\n            var currentValue = node.getAttribute(attr);\n            if (instance.state.isVisible) node.setAttribute(attr, currentValue ? currentValue + \" \" + id : id);\n            else {\n                var nextValue = currentValue && currentValue.replace(id, \"\").trim();\n                if (nextValue) node.setAttribute(attr, nextValue);\n                else node.removeAttribute(attr);\n            }\n        });\n    }\n    function handleAriaExpandedAttribute() {\n        if (hasAriaExpanded || !instance.props.aria.expanded) return;\n        var nodes = $95051df85825bf2c$var$normalizeToArray(instance.props.triggerTarget || reference);\n        nodes.forEach(function(node) {\n            if (instance.props.interactive) node.setAttribute(\"aria-expanded\", instance.state.isVisible && node === getCurrentTarget() ? \"true\" : \"false\");\n            else node.removeAttribute(\"aria-expanded\");\n        });\n    }\n    function cleanupInteractiveMouseListeners() {\n        getDocument().removeEventListener(\"mousemove\", debouncedOnMouseMove);\n        $95051df85825bf2c$var$mouseMoveListeners = $95051df85825bf2c$var$mouseMoveListeners.filter(function(listener) {\n            return listener !== debouncedOnMouseMove;\n        });\n    }\n    function onDocumentPress(event) {\n        // Moved finger to scroll instead of an intentional tap outside\n        if ($95051df85825bf2c$var$currentInput.isTouch) {\n            if (didTouchMove || event.type === \"mousedown\") return;\n        }\n        var actualTarget = event.composedPath && event.composedPath()[0] || event.target; // Clicked on interactive popper\n        if (instance.props.interactive && $95051df85825bf2c$var$actualContains(popper, actualTarget)) return;\n         // Clicked on the event listeners target\n        if ($95051df85825bf2c$var$normalizeToArray(instance.props.triggerTarget || reference).some(function(el) {\n            return $95051df85825bf2c$var$actualContains(el, actualTarget);\n        })) {\n            if ($95051df85825bf2c$var$currentInput.isTouch) return;\n            if (instance.state.isVisible && instance.props.trigger.indexOf(\"click\") >= 0) return;\n        } else invokeHook(\"onClickOutside\", [\n            instance,\n            event\n        ]);\n        if (instance.props.hideOnClick === true) {\n            instance.clearDelayTimeouts();\n            instance.hide(); // `mousedown` event is fired right before `focus` if pressing the\n            // currentTarget. This lets a tippy with `focus` trigger know that it\n            // should not show\n            didHideDueToDocumentMouseDown = true;\n            setTimeout(function() {\n                didHideDueToDocumentMouseDown = false;\n            }); // The listener gets added in `scheduleShow()`, but this may be hiding it\n            // before it shows, and hide()'s early bail-out behavior can prevent it\n            // from being cleaned up\n            if (!instance.state.isMounted) removeDocumentPress();\n        }\n    }\n    function onTouchMove() {\n        didTouchMove = true;\n    }\n    function onTouchStart() {\n        didTouchMove = false;\n    }\n    function addDocumentPress() {\n        var doc = getDocument();\n        doc.addEventListener(\"mousedown\", onDocumentPress, true);\n        doc.addEventListener(\"touchend\", onDocumentPress, $95051df85825bf2c$var$TOUCH_OPTIONS);\n        doc.addEventListener(\"touchstart\", onTouchStart, $95051df85825bf2c$var$TOUCH_OPTIONS);\n        doc.addEventListener(\"touchmove\", onTouchMove, $95051df85825bf2c$var$TOUCH_OPTIONS);\n    }\n    function removeDocumentPress() {\n        var doc = getDocument();\n        doc.removeEventListener(\"mousedown\", onDocumentPress, true);\n        doc.removeEventListener(\"touchend\", onDocumentPress, $95051df85825bf2c$var$TOUCH_OPTIONS);\n        doc.removeEventListener(\"touchstart\", onTouchStart, $95051df85825bf2c$var$TOUCH_OPTIONS);\n        doc.removeEventListener(\"touchmove\", onTouchMove, $95051df85825bf2c$var$TOUCH_OPTIONS);\n    }\n    function onTransitionedOut(duration, callback) {\n        onTransitionEnd(duration, function() {\n            if (!instance.state.isVisible && popper.parentNode && popper.parentNode.contains(popper)) callback();\n        });\n    }\n    function onTransitionedIn(duration, callback) {\n        onTransitionEnd(duration, callback);\n    }\n    function onTransitionEnd(duration, callback) {\n        var box = getDefaultTemplateChildren().box;\n        function listener(event) {\n            if (event.target === box) {\n                $95051df85825bf2c$var$updateTransitionEndListener(box, \"remove\", listener);\n                callback();\n            }\n        } // Make callback synchronous if duration is 0\n        // `transitionend` won't fire otherwise\n        if (duration === 0) return callback();\n        $95051df85825bf2c$var$updateTransitionEndListener(box, \"remove\", currentTransitionEndListener);\n        $95051df85825bf2c$var$updateTransitionEndListener(box, \"add\", listener);\n        currentTransitionEndListener = listener;\n    }\n    function on(eventType, handler, options) {\n        if (options === void 0) options = false;\n        var nodes = $95051df85825bf2c$var$normalizeToArray(instance.props.triggerTarget || reference);\n        nodes.forEach(function(node) {\n            node.addEventListener(eventType, handler, options);\n            listeners.push({\n                node: node,\n                eventType: eventType,\n                handler: handler,\n                options: options\n            });\n        });\n    }\n    function addListeners() {\n        if (getIsCustomTouchBehavior()) {\n            on(\"touchstart\", onTrigger, {\n                passive: true\n            });\n            on(\"touchend\", onMouseLeave, {\n                passive: true\n            });\n        }\n        $95051df85825bf2c$var$splitBySpaces(instance.props.trigger).forEach(function(eventType) {\n            if (eventType === \"manual\") return;\n            on(eventType, onTrigger);\n            switch(eventType){\n                case \"mouseenter\":\n                    on(\"mouseleave\", onMouseLeave);\n                    break;\n                case \"focus\":\n                    on($95051df85825bf2c$var$isIE11 ? \"focusout\" : \"blur\", onBlurOrFocusOut);\n                    break;\n                case \"focusin\":\n                    on(\"focusout\", onBlurOrFocusOut);\n                    break;\n            }\n        });\n    }\n    function removeListeners() {\n        listeners.forEach(function(_ref) {\n            var node = _ref.node, eventType = _ref.eventType, handler = _ref.handler, options = _ref.options;\n            node.removeEventListener(eventType, handler, options);\n        });\n        listeners = [];\n    }\n    function onTrigger(event) {\n        var _lastTriggerEvent;\n        var shouldScheduleClickHide = false;\n        if (!instance.state.isEnabled || isEventListenerStopped(event) || didHideDueToDocumentMouseDown) return;\n        var wasFocused = ((_lastTriggerEvent = lastTriggerEvent) == null ? void 0 : _lastTriggerEvent.type) === \"focus\";\n        lastTriggerEvent = event;\n        currentTarget = event.currentTarget;\n        handleAriaExpandedAttribute();\n        if (!instance.state.isVisible && $95051df85825bf2c$var$isMouseEvent(event)) // If scrolling, `mouseenter` events can be fired if the cursor lands\n        // over a new target, but `mousemove` events don't get fired. This\n        // causes interactive tooltips to get stuck open until the cursor is\n        // moved\n        $95051df85825bf2c$var$mouseMoveListeners.forEach(function(listener) {\n            return listener(event);\n        });\n         // Toggle show/hide when clicking click-triggered tooltips\n        if (event.type === \"click\" && (instance.props.trigger.indexOf(\"mouseenter\") < 0 || isVisibleFromClick) && instance.props.hideOnClick !== false && instance.state.isVisible) shouldScheduleClickHide = true;\n        else scheduleShow(event);\n        if (event.type === \"click\") isVisibleFromClick = !shouldScheduleClickHide;\n        if (shouldScheduleClickHide && !wasFocused) scheduleHide(event);\n    }\n    function onMouseMove(event) {\n        var target = event.target;\n        var isCursorOverReferenceOrPopper = getCurrentTarget().contains(target) || popper.contains(target);\n        if (event.type === \"mousemove\" && isCursorOverReferenceOrPopper) return;\n        var popperTreeData = getNestedPopperTree().concat(popper).map(function(popper) {\n            var _instance$popperInsta;\n            var instance = popper._tippy;\n            var state = (_instance$popperInsta = instance.popperInstance) == null ? void 0 : _instance$popperInsta.state;\n            if (state) return {\n                popperRect: popper.getBoundingClientRect(),\n                popperState: state,\n                props: props\n            };\n            return null;\n        }).filter(Boolean);\n        if ($95051df85825bf2c$var$isCursorOutsideInteractiveBorder(popperTreeData, event)) {\n            cleanupInteractiveMouseListeners();\n            scheduleHide(event);\n        }\n    }\n    function onMouseLeave(event) {\n        var shouldBail = isEventListenerStopped(event) || instance.props.trigger.indexOf(\"click\") >= 0 && isVisibleFromClick;\n        if (shouldBail) return;\n        if (instance.props.interactive) {\n            instance.hideWithInteractivity(event);\n            return;\n        }\n        scheduleHide(event);\n    }\n    function onBlurOrFocusOut(event) {\n        if (instance.props.trigger.indexOf(\"focusin\") < 0 && event.target !== getCurrentTarget()) return;\n         // If focus was moved to within the popper\n        if (instance.props.interactive && event.relatedTarget && popper.contains(event.relatedTarget)) return;\n        scheduleHide(event);\n    }\n    function isEventListenerStopped(event) {\n        return $95051df85825bf2c$var$currentInput.isTouch ? getIsCustomTouchBehavior() !== event.type.indexOf(\"touch\") >= 0 : false;\n    }\n    function createPopperInstance() {\n        destroyPopperInstance();\n        var _instance$props2 = instance.props, popperOptions = _instance$props2.popperOptions, placement = _instance$props2.placement, offset = _instance$props2.offset, getReferenceClientRect = _instance$props2.getReferenceClientRect, moveTransition = _instance$props2.moveTransition;\n        var arrow = getIsDefaultRenderFn() ? $95051df85825bf2c$var$getChildren(popper).arrow : null;\n        var computedReference = getReferenceClientRect ? {\n            getBoundingClientRect: getReferenceClientRect,\n            contextElement: getReferenceClientRect.contextElement || getCurrentTarget()\n        } : reference;\n        var tippyModifier = {\n            name: \"$$tippy\",\n            enabled: true,\n            phase: \"beforeWrite\",\n            requires: [\n                \"computeStyles\"\n            ],\n            fn: function fn(_ref2) {\n                var state = _ref2.state;\n                if (getIsDefaultRenderFn()) {\n                    var _getDefaultTemplateCh = getDefaultTemplateChildren(), box = _getDefaultTemplateCh.box;\n                    [\n                        \"placement\",\n                        \"reference-hidden\",\n                        \"escaped\"\n                    ].forEach(function(attr) {\n                        if (attr === \"placement\") box.setAttribute(\"data-placement\", state.placement);\n                        else if (state.attributes.popper[\"data-popper-\" + attr]) box.setAttribute(\"data-\" + attr, \"\");\n                        else box.removeAttribute(\"data-\" + attr);\n                    });\n                    state.attributes.popper = {};\n                }\n            }\n        };\n        var modifiers = [\n            {\n                name: \"offset\",\n                options: {\n                    offset: offset\n                }\n            },\n            {\n                name: \"preventOverflow\",\n                options: {\n                    padding: {\n                        top: 2,\n                        bottom: 2,\n                        left: 5,\n                        right: 5\n                    }\n                }\n            },\n            {\n                name: \"flip\",\n                options: {\n                    padding: 5\n                }\n            },\n            {\n                name: \"computeStyles\",\n                options: {\n                    adaptive: !moveTransition\n                }\n            },\n            tippyModifier\n        ];\n        if (getIsDefaultRenderFn() && arrow) modifiers.push({\n            name: \"arrow\",\n            options: {\n                element: arrow,\n                padding: 3\n            }\n        });\n        modifiers.push.apply(modifiers, (popperOptions == null ? void 0 : popperOptions.modifiers) || []);\n        instance.popperInstance = (0, $55c7f2385d3e922b$export$8f7491d57c8f97a9)(computedReference, popper, Object.assign({}, popperOptions, {\n            placement: placement,\n            onFirstUpdate: onFirstUpdate,\n            modifiers: modifiers\n        }));\n    }\n    function destroyPopperInstance() {\n        if (instance.popperInstance) {\n            instance.popperInstance.destroy();\n            instance.popperInstance = null;\n        }\n    }\n    function mount() {\n        var appendTo = instance.props.appendTo;\n        var parentNode; // By default, we'll append the popper to the triggerTargets's parentNode so\n        // it's directly after the reference element so the elements inside the\n        // tippy can be tabbed to\n        // If there are clipping issues, the user can specify a different appendTo\n        // and ensure focus management is handled correctly manually\n        var node = getCurrentTarget();\n        if (instance.props.interactive && appendTo === $95051df85825bf2c$var$TIPPY_DEFAULT_APPEND_TO || appendTo === \"parent\") parentNode = node.parentNode;\n        else parentNode = $95051df85825bf2c$var$invokeWithArgsOrReturn(appendTo, [\n            node\n        ]);\n         // The popper element needs to exist on the DOM before its position can be\n        // updated as Popper needs to read its dimensions\n        if (!parentNode.contains(popper)) parentNode.appendChild(popper);\n        instance.state.isMounted = true;\n        createPopperInstance();\n    }\n    function getNestedPopperTree() {\n        return $95051df85825bf2c$var$arrayFrom(popper.querySelectorAll(\"[data-tippy-root]\"));\n    }\n    function scheduleShow(event) {\n        instance.clearDelayTimeouts();\n        if (event) invokeHook(\"onTrigger\", [\n            instance,\n            event\n        ]);\n        addDocumentPress();\n        var delay = getDelay(true);\n        var _getNormalizedTouchSe = getNormalizedTouchSettings(), touchValue = _getNormalizedTouchSe[0], touchDelay = _getNormalizedTouchSe[1];\n        if ($95051df85825bf2c$var$currentInput.isTouch && touchValue === \"hold\" && touchDelay) delay = touchDelay;\n        if (delay) showTimeout = setTimeout(function() {\n            instance.show();\n        }, delay);\n        else instance.show();\n    }\n    function scheduleHide(event) {\n        instance.clearDelayTimeouts();\n        invokeHook(\"onUntrigger\", [\n            instance,\n            event\n        ]);\n        if (!instance.state.isVisible) {\n            removeDocumentPress();\n            return;\n        } // For interactive tippies, scheduleHide is added to a document.body handler\n        // from onMouseLeave so must intercept scheduled hides from mousemove/leave\n        // events when trigger contains mouseenter and click, and the tip is\n        // currently shown as a result of a click.\n        if (instance.props.trigger.indexOf(\"mouseenter\") >= 0 && instance.props.trigger.indexOf(\"click\") >= 0 && [\n            \"mouseleave\",\n            \"mousemove\"\n        ].indexOf(event.type) >= 0 && isVisibleFromClick) return;\n        var delay = getDelay(false);\n        if (delay) hideTimeout = setTimeout(function() {\n            if (instance.state.isVisible) instance.hide();\n        }, delay);\n        else // Fixes a `transitionend` problem when it fires 1 frame too\n        // late sometimes, we don't want hide() to be called.\n        scheduleHideAnimationFrame = requestAnimationFrame(function() {\n            instance.hide();\n        });\n    } // ===========================================================================\n    // 🔑 Public methods\n    // ===========================================================================\n    function enable() {\n        instance.state.isEnabled = true;\n    }\n    function disable() {\n        // Disabling the instance should also hide it\n        // https://github.com/atomiks/tippy.js-react/issues/106\n        instance.hide();\n        instance.state.isEnabled = false;\n    }\n    function clearDelayTimeouts() {\n        clearTimeout(showTimeout);\n        clearTimeout(hideTimeout);\n        cancelAnimationFrame(scheduleHideAnimationFrame);\n    }\n    function setProps(partialProps) {\n        if (instance.state.isDestroyed) return;\n        invokeHook(\"onBeforeUpdate\", [\n            instance,\n            partialProps\n        ]);\n        removeListeners();\n        var prevProps = instance.props;\n        var nextProps = $95051df85825bf2c$var$evaluateProps(reference, Object.assign({}, prevProps, $95051df85825bf2c$var$removeUndefinedProps(partialProps), {\n            ignoreAttributes: true\n        }));\n        instance.props = nextProps;\n        addListeners();\n        if (prevProps.interactiveDebounce !== nextProps.interactiveDebounce) {\n            cleanupInteractiveMouseListeners();\n            debouncedOnMouseMove = $95051df85825bf2c$var$debounce(onMouseMove, nextProps.interactiveDebounce);\n        } // Ensure stale aria-expanded attributes are removed\n        if (prevProps.triggerTarget && !nextProps.triggerTarget) $95051df85825bf2c$var$normalizeToArray(prevProps.triggerTarget).forEach(function(node) {\n            node.removeAttribute(\"aria-expanded\");\n        });\n        else if (nextProps.triggerTarget) reference.removeAttribute(\"aria-expanded\");\n        handleAriaExpandedAttribute();\n        handleStyles();\n        if (onUpdate) onUpdate(prevProps, nextProps);\n        if (instance.popperInstance) {\n            createPopperInstance(); // Fixes an issue with nested tippies if they are all getting re-rendered,\n            // and the nested ones get re-rendered first.\n            // https://github.com/atomiks/tippyjs-react/issues/177\n            // TODO: find a cleaner / more efficient solution(!)\n            getNestedPopperTree().forEach(function(nestedPopper) {\n                // React (and other UI libs likely) requires a rAF wrapper as it flushes\n                // its work in one\n                requestAnimationFrame(nestedPopper._tippy.popperInstance.forceUpdate);\n            });\n        }\n        invokeHook(\"onAfterUpdate\", [\n            instance,\n            partialProps\n        ]);\n    }\n    function setContent(content) {\n        instance.setProps({\n            content: content\n        });\n    }\n    function show() {\n        var isAlreadyVisible = instance.state.isVisible;\n        var isDestroyed = instance.state.isDestroyed;\n        var isDisabled = !instance.state.isEnabled;\n        var isTouchAndTouchDisabled = $95051df85825bf2c$var$currentInput.isTouch && !instance.props.touch;\n        var duration = $95051df85825bf2c$var$getValueAtIndexOrReturn(instance.props.duration, 0, $95051df85825bf2c$var$defaultProps.duration);\n        if (isAlreadyVisible || isDestroyed || isDisabled || isTouchAndTouchDisabled) return;\n         // Normalize `disabled` behavior across browsers.\n        // Firefox allows events on disabled elements, but Chrome doesn't.\n        // Using a wrapper element (i.e. <span>) is recommended.\n        if (getCurrentTarget().hasAttribute(\"disabled\")) return;\n        invokeHook(\"onShow\", [\n            instance\n        ], false);\n        if (instance.props.onShow(instance) === false) return;\n        instance.state.isVisible = true;\n        if (getIsDefaultRenderFn()) popper.style.visibility = \"visible\";\n        handleStyles();\n        addDocumentPress();\n        if (!instance.state.isMounted) popper.style.transition = \"none\";\n         // If flipping to the opposite side after hiding at least once, the\n        // animation will use the wrong placement without resetting the duration\n        if (getIsDefaultRenderFn()) {\n            var _getDefaultTemplateCh2 = getDefaultTemplateChildren(), box = _getDefaultTemplateCh2.box, content = _getDefaultTemplateCh2.content;\n            $95051df85825bf2c$var$setTransitionDuration([\n                box,\n                content\n            ], 0);\n        }\n        onFirstUpdate = function onFirstUpdate() {\n            var _instance$popperInsta2;\n            if (!instance.state.isVisible || ignoreOnFirstUpdate) return;\n            ignoreOnFirstUpdate = true; // reflow\n            popper.offsetHeight;\n            popper.style.transition = instance.props.moveTransition;\n            if (getIsDefaultRenderFn() && instance.props.animation) {\n                var _getDefaultTemplateCh3 = getDefaultTemplateChildren(), _box = _getDefaultTemplateCh3.box, _content = _getDefaultTemplateCh3.content;\n                $95051df85825bf2c$var$setTransitionDuration([\n                    _box,\n                    _content\n                ], duration);\n                $95051df85825bf2c$var$setVisibilityState([\n                    _box,\n                    _content\n                ], \"visible\");\n            }\n            handleAriaContentAttribute();\n            handleAriaExpandedAttribute();\n            $95051df85825bf2c$var$pushIfUnique($95051df85825bf2c$var$mountedInstances, instance); // certain modifiers (e.g. `maxSize`) require a second update after the\n            // popper has been positioned for the first time\n            (_instance$popperInsta2 = instance.popperInstance) == null || _instance$popperInsta2.forceUpdate();\n            invokeHook(\"onMount\", [\n                instance\n            ]);\n            if (instance.props.animation && getIsDefaultRenderFn()) onTransitionedIn(duration, function() {\n                instance.state.isShown = true;\n                invokeHook(\"onShown\", [\n                    instance\n                ]);\n            });\n        };\n        mount();\n    }\n    function hide() {\n        var isAlreadyHidden = !instance.state.isVisible;\n        var isDestroyed = instance.state.isDestroyed;\n        var isDisabled = !instance.state.isEnabled;\n        var duration = $95051df85825bf2c$var$getValueAtIndexOrReturn(instance.props.duration, 1, $95051df85825bf2c$var$defaultProps.duration);\n        if (isAlreadyHidden || isDestroyed || isDisabled) return;\n        invokeHook(\"onHide\", [\n            instance\n        ], false);\n        if (instance.props.onHide(instance) === false) return;\n        instance.state.isVisible = false;\n        instance.state.isShown = false;\n        ignoreOnFirstUpdate = false;\n        isVisibleFromClick = false;\n        if (getIsDefaultRenderFn()) popper.style.visibility = \"hidden\";\n        cleanupInteractiveMouseListeners();\n        removeDocumentPress();\n        handleStyles(true);\n        if (getIsDefaultRenderFn()) {\n            var _getDefaultTemplateCh4 = getDefaultTemplateChildren(), box = _getDefaultTemplateCh4.box, content = _getDefaultTemplateCh4.content;\n            if (instance.props.animation) {\n                $95051df85825bf2c$var$setTransitionDuration([\n                    box,\n                    content\n                ], duration);\n                $95051df85825bf2c$var$setVisibilityState([\n                    box,\n                    content\n                ], \"hidden\");\n            }\n        }\n        handleAriaContentAttribute();\n        handleAriaExpandedAttribute();\n        if (instance.props.animation) {\n            if (getIsDefaultRenderFn()) onTransitionedOut(duration, instance.unmount);\n        } else instance.unmount();\n    }\n    function hideWithInteractivity(event) {\n        getDocument().addEventListener(\"mousemove\", debouncedOnMouseMove);\n        $95051df85825bf2c$var$pushIfUnique($95051df85825bf2c$var$mouseMoveListeners, debouncedOnMouseMove);\n        debouncedOnMouseMove(event);\n    }\n    function unmount() {\n        if (instance.state.isVisible) instance.hide();\n        if (!instance.state.isMounted) return;\n        destroyPopperInstance(); // If a popper is not interactive, it will be appended outside the popper\n        // tree by default. This seems mainly for interactive tippies, but we should\n        // find a workaround if possible\n        getNestedPopperTree().forEach(function(nestedPopper) {\n            nestedPopper._tippy.unmount();\n        });\n        if (popper.parentNode) popper.parentNode.removeChild(popper);\n        $95051df85825bf2c$var$mountedInstances = $95051df85825bf2c$var$mountedInstances.filter(function(i) {\n            return i !== instance;\n        });\n        instance.state.isMounted = false;\n        invokeHook(\"onHidden\", [\n            instance\n        ]);\n    }\n    function destroy() {\n        if (instance.state.isDestroyed) return;\n        instance.clearDelayTimeouts();\n        instance.unmount();\n        removeListeners();\n        delete reference._tippy;\n        instance.state.isDestroyed = true;\n        invokeHook(\"onDestroy\", [\n            instance\n        ]);\n    }\n}\nfunction $95051df85825bf2c$var$tippy(targets, optionalProps) {\n    if (optionalProps === void 0) optionalProps = {};\n    var plugins = $95051df85825bf2c$var$defaultProps.plugins.concat(optionalProps.plugins || []);\n    $95051df85825bf2c$var$bindGlobalEventListeners();\n    var passedProps = Object.assign({}, optionalProps, {\n        plugins: plugins\n    });\n    var elements = $95051df85825bf2c$var$getArrayOfElements(targets);\n    var isSingleContentElement, isMoreThanOneReferenceElement;\n    var instances = elements.reduce(function(acc, reference) {\n        var instance = reference && $95051df85825bf2c$var$createTippy(reference, passedProps);\n        if (instance) acc.push(instance);\n        return acc;\n    }, []);\n    return $95051df85825bf2c$var$isElement(targets) ? instances[0] : instances;\n}\n$95051df85825bf2c$var$tippy.defaultProps = $95051df85825bf2c$var$defaultProps;\n$95051df85825bf2c$var$tippy.setDefaultProps = $95051df85825bf2c$var$setDefaultProps;\n$95051df85825bf2c$var$tippy.currentInput = $95051df85825bf2c$var$currentInput;\nvar $95051df85825bf2c$export$a9608aab345f7e75 = function hideAll(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp, excludedReferenceOrInstance = _ref.exclude, duration = _ref.duration;\n    $95051df85825bf2c$var$mountedInstances.forEach(function(instance) {\n        var isExcluded = false;\n        if (excludedReferenceOrInstance) isExcluded = $95051df85825bf2c$var$isReferenceElement(excludedReferenceOrInstance) ? instance.reference === excludedReferenceOrInstance : instance.popper === excludedReferenceOrInstance.popper;\n        if (!isExcluded) {\n            var originalDuration = instance.props.duration;\n            instance.setProps({\n                duration: duration\n            });\n            instance.hide();\n            if (!instance.state.isDestroyed) instance.setProps({\n                duration: originalDuration\n            });\n        }\n    });\n};\n// every time the popper is destroyed (i.e. a new target), removing the styles\n// and causing transitions to break for singletons when the console is open, but\n// most notably for non-transform styles being used, `gpuAcceleration: false`.\nvar $95051df85825bf2c$var$applyStylesModifier = Object.assign({}, (0, $89d890c165874cff$export$2e2bcd8739ae039), {\n    effect: function effect(_ref) {\n        var state = _ref.state;\n        var initialStyles = {\n            popper: {\n                position: state.options.strategy,\n                left: \"0\",\n                top: \"0\",\n                margin: \"0\"\n            },\n            arrow: {\n                position: \"absolute\"\n            },\n            reference: {}\n        };\n        Object.assign(state.elements.popper.style, initialStyles.popper);\n        state.styles = initialStyles;\n        if (state.elements.arrow) Object.assign(state.elements.arrow.style, initialStyles.arrow);\n         // intentionally return no cleanup function\n    // return () => { ... }\n    }\n});\nvar $95051df85825bf2c$export$374c483667c1ea9b = function createSingleton(tippyInstances, optionalProps) {\n    var _optionalProps$popper;\n    if (optionalProps === void 0) optionalProps = {};\n    var individualInstances = tippyInstances;\n    var references = [];\n    var triggerTargets = [];\n    var currentTarget;\n    var overrides = optionalProps.overrides;\n    var interceptSetPropsCleanups = [];\n    var shownOnCreate = false;\n    function setTriggerTargets() {\n        triggerTargets = individualInstances.map(function(instance) {\n            return $95051df85825bf2c$var$normalizeToArray(instance.props.triggerTarget || instance.reference);\n        }).reduce(function(acc, item) {\n            return acc.concat(item);\n        }, []);\n    }\n    function setReferences() {\n        references = individualInstances.map(function(instance) {\n            return instance.reference;\n        });\n    }\n    function enableInstances(isEnabled) {\n        individualInstances.forEach(function(instance) {\n            if (isEnabled) instance.enable();\n            else instance.disable();\n        });\n    }\n    function interceptSetProps(singleton) {\n        return individualInstances.map(function(instance) {\n            var originalSetProps = instance.setProps;\n            instance.setProps = function(props) {\n                originalSetProps(props);\n                if (instance.reference === currentTarget) singleton.setProps(props);\n            };\n            return function() {\n                instance.setProps = originalSetProps;\n            };\n        });\n    } // have to pass singleton, as it maybe undefined on first call\n    function prepareInstance(singleton, target) {\n        var index = triggerTargets.indexOf(target); // bail-out\n        if (target === currentTarget) return;\n        currentTarget = target;\n        var overrideProps = (overrides || []).concat(\"content\").reduce(function(acc, prop) {\n            acc[prop] = individualInstances[index].props[prop];\n            return acc;\n        }, {});\n        singleton.setProps(Object.assign({}, overrideProps, {\n            getReferenceClientRect: typeof overrideProps.getReferenceClientRect === \"function\" ? overrideProps.getReferenceClientRect : function() {\n                var _references$index;\n                return (_references$index = references[index]) == null ? void 0 : _references$index.getBoundingClientRect();\n            }\n        }));\n    }\n    enableInstances(false);\n    setReferences();\n    setTriggerTargets();\n    var plugin = {\n        fn: function fn() {\n            return {\n                onDestroy: function onDestroy() {\n                    enableInstances(true);\n                },\n                onHidden: function onHidden() {\n                    currentTarget = null;\n                },\n                onClickOutside: function onClickOutside(instance) {\n                    if (instance.props.showOnCreate && !shownOnCreate) {\n                        shownOnCreate = true;\n                        currentTarget = null;\n                    }\n                },\n                onShow: function onShow(instance) {\n                    if (instance.props.showOnCreate && !shownOnCreate) {\n                        shownOnCreate = true;\n                        prepareInstance(instance, references[0]);\n                    }\n                },\n                onTrigger: function onTrigger(instance, event) {\n                    prepareInstance(instance, event.currentTarget);\n                }\n            };\n        }\n    };\n    var singleton = $95051df85825bf2c$var$tippy($95051df85825bf2c$var$div(), Object.assign({}, $95051df85825bf2c$var$removeProperties(optionalProps, [\n        \"overrides\"\n    ]), {\n        plugins: [\n            plugin\n        ].concat(optionalProps.plugins || []),\n        triggerTarget: triggerTargets,\n        popperOptions: Object.assign({}, optionalProps.popperOptions, {\n            modifiers: [].concat(((_optionalProps$popper = optionalProps.popperOptions) == null ? void 0 : _optionalProps$popper.modifiers) || [], [\n                $95051df85825bf2c$var$applyStylesModifier\n            ])\n        })\n    }));\n    var originalShow = singleton.show;\n    singleton.show = function(target) {\n        originalShow(); // first time, showOnCreate or programmatic call with no params\n        // default to showing first instance\n        if (!currentTarget && target == null) return prepareInstance(singleton, references[0]);\n         // triggered from event (do nothing as prepareInstance already called by onTrigger)\n        // programmatic call with no params when already visible (do nothing again)\n        if (currentTarget && target == null) return;\n         // target is index of instance\n        if (typeof target === \"number\") return references[target] && prepareInstance(singleton, references[target]);\n         // target is a child tippy instance\n        if (individualInstances.indexOf(target) >= 0) {\n            var ref = target.reference;\n            return prepareInstance(singleton, ref);\n        } // target is a ReferenceElement\n        if (references.indexOf(target) >= 0) return prepareInstance(singleton, target);\n    };\n    singleton.showNext = function() {\n        var first = references[0];\n        if (!currentTarget) return singleton.show(0);\n        var index = references.indexOf(currentTarget);\n        singleton.show(references[index + 1] || first);\n    };\n    singleton.showPrevious = function() {\n        var last = references[references.length - 1];\n        if (!currentTarget) return singleton.show(last);\n        var index = references.indexOf(currentTarget);\n        var target = references[index - 1] || last;\n        singleton.show(target);\n    };\n    var originalSetProps = singleton.setProps;\n    singleton.setProps = function(props) {\n        overrides = props.overrides || overrides;\n        originalSetProps(props);\n    };\n    singleton.setInstances = function(nextInstances) {\n        enableInstances(true);\n        interceptSetPropsCleanups.forEach(function(fn) {\n            return fn();\n        });\n        individualInstances = nextInstances;\n        enableInstances(false);\n        setReferences();\n        setTriggerTargets();\n        interceptSetPropsCleanups = interceptSetProps(singleton);\n        singleton.setProps({\n            triggerTarget: triggerTargets\n        });\n    };\n    interceptSetPropsCleanups = interceptSetProps(singleton);\n    return singleton;\n};\nvar $95051df85825bf2c$var$BUBBLING_EVENTS_MAP = {\n    mouseover: \"mouseenter\",\n    focusin: \"focus\",\n    click: \"click\"\n};\n/**\n * Creates a delegate instance that controls the creation of tippy instances\n * for child elements (`target` CSS selector).\n */ function $95051df85825bf2c$export$10b1921597150314(targets, props) {\n    var listeners = [];\n    var childTippyInstances = [];\n    var disabled = false;\n    var target = props.target;\n    var nativeProps = $95051df85825bf2c$var$removeProperties(props, [\n        \"target\"\n    ]);\n    var parentProps = Object.assign({}, nativeProps, {\n        trigger: \"manual\",\n        touch: false\n    });\n    var childProps = Object.assign({\n        touch: $95051df85825bf2c$var$defaultProps.touch\n    }, nativeProps, {\n        showOnCreate: true\n    });\n    var returnValue = $95051df85825bf2c$var$tippy(targets, parentProps);\n    var normalizedReturnValue = $95051df85825bf2c$var$normalizeToArray(returnValue);\n    function onTrigger(event) {\n        if (!event.target || disabled) return;\n        var targetNode = event.target.closest(target);\n        if (!targetNode) return;\n         // Get relevant trigger with fallbacks:\n        // 1. Check `data-tippy-trigger` attribute on target node\n        // 2. Fallback to `trigger` passed to `delegate()`\n        // 3. Fallback to `defaultProps.trigger`\n        var trigger = targetNode.getAttribute(\"data-tippy-trigger\") || props.trigger || $95051df85825bf2c$var$defaultProps.trigger; // @ts-ignore\n        if (targetNode._tippy) return;\n        if (event.type === \"touchstart\" && typeof childProps.touch === \"boolean\") return;\n        if (event.type !== \"touchstart\" && trigger.indexOf($95051df85825bf2c$var$BUBBLING_EVENTS_MAP[event.type]) < 0) return;\n        var instance = $95051df85825bf2c$var$tippy(targetNode, childProps);\n        if (instance) childTippyInstances = childTippyInstances.concat(instance);\n    }\n    function on(node, eventType, handler, options) {\n        if (options === void 0) options = false;\n        node.addEventListener(eventType, handler, options);\n        listeners.push({\n            node: node,\n            eventType: eventType,\n            handler: handler,\n            options: options\n        });\n    }\n    function addEventListeners(instance) {\n        var reference = instance.reference;\n        on(reference, \"touchstart\", onTrigger, $95051df85825bf2c$var$TOUCH_OPTIONS);\n        on(reference, \"mouseover\", onTrigger);\n        on(reference, \"focusin\", onTrigger);\n        on(reference, \"click\", onTrigger);\n    }\n    function removeEventListeners() {\n        listeners.forEach(function(_ref) {\n            var node = _ref.node, eventType = _ref.eventType, handler = _ref.handler, options = _ref.options;\n            node.removeEventListener(eventType, handler, options);\n        });\n        listeners = [];\n    }\n    function applyMutations(instance) {\n        var originalDestroy = instance.destroy;\n        var originalEnable = instance.enable;\n        var originalDisable = instance.disable;\n        instance.destroy = function(shouldDestroyChildInstances) {\n            if (shouldDestroyChildInstances === void 0) shouldDestroyChildInstances = true;\n            if (shouldDestroyChildInstances) childTippyInstances.forEach(function(instance) {\n                instance.destroy();\n            });\n            childTippyInstances = [];\n            removeEventListeners();\n            originalDestroy();\n        };\n        instance.enable = function() {\n            originalEnable();\n            childTippyInstances.forEach(function(instance) {\n                return instance.enable();\n            });\n            disabled = false;\n        };\n        instance.disable = function() {\n            originalDisable();\n            childTippyInstances.forEach(function(instance) {\n                return instance.disable();\n            });\n            disabled = true;\n        };\n        addEventListeners(instance);\n    }\n    normalizedReturnValue.forEach(applyMutations);\n    return returnValue;\n}\nvar $95051df85825bf2c$export$dd8ded329c01db79 = {\n    name: \"animateFill\",\n    defaultValue: false,\n    fn: function fn(instance) {\n        var _instance$props$rende;\n        // @ts-ignore\n        if (!((_instance$props$rende = instance.props.render) != null && _instance$props$rende.$$tippy)) return {};\n        var _getChildren = $95051df85825bf2c$var$getChildren(instance.popper), box = _getChildren.box, content = _getChildren.content;\n        var backdrop = instance.props.animateFill ? $95051df85825bf2c$var$createBackdropElement() : null;\n        return {\n            onCreate: function onCreate() {\n                if (backdrop) {\n                    box.insertBefore(backdrop, box.firstElementChild);\n                    box.setAttribute(\"data-animatefill\", \"\");\n                    box.style.overflow = \"hidden\";\n                    instance.setProps({\n                        arrow: false,\n                        animation: \"shift-away\"\n                    });\n                }\n            },\n            onMount: function onMount() {\n                if (backdrop) {\n                    var transitionDuration = box.style.transitionDuration;\n                    var duration = Number(transitionDuration.replace(\"ms\", \"\")); // The content should fade in after the backdrop has mostly filled the\n                    // tooltip element. `clip-path` is the other alternative but is not\n                    // well-supported and is buggy on some devices.\n                    content.style.transitionDelay = Math.round(duration / 10) + \"ms\";\n                    backdrop.style.transitionDuration = transitionDuration;\n                    $95051df85825bf2c$var$setVisibilityState([\n                        backdrop\n                    ], \"visible\");\n                }\n            },\n            onShow: function onShow() {\n                if (backdrop) backdrop.style.transitionDuration = \"0ms\";\n            },\n            onHide: function onHide() {\n                if (backdrop) $95051df85825bf2c$var$setVisibilityState([\n                    backdrop\n                ], \"hidden\");\n            }\n        };\n    }\n};\nfunction $95051df85825bf2c$var$createBackdropElement() {\n    var backdrop = $95051df85825bf2c$var$div();\n    backdrop.className = $95051df85825bf2c$var$BACKDROP_CLASS;\n    $95051df85825bf2c$var$setVisibilityState([\n        backdrop\n    ], \"hidden\");\n    return backdrop;\n}\nvar $95051df85825bf2c$var$mouseCoords = {\n    clientX: 0,\n    clientY: 0\n};\nvar $95051df85825bf2c$var$activeInstances = [];\nfunction $95051df85825bf2c$var$storeMouseCoords(_ref) {\n    var clientX = _ref.clientX, clientY = _ref.clientY;\n    $95051df85825bf2c$var$mouseCoords = {\n        clientX: clientX,\n        clientY: clientY\n    };\n}\nfunction $95051df85825bf2c$var$addMouseCoordsListener(doc) {\n    doc.addEventListener(\"mousemove\", $95051df85825bf2c$var$storeMouseCoords);\n}\nfunction $95051df85825bf2c$var$removeMouseCoordsListener(doc) {\n    doc.removeEventListener(\"mousemove\", $95051df85825bf2c$var$storeMouseCoords);\n}\nvar $95051df85825bf2c$export$ac81526b64504ab6 = {\n    name: \"followCursor\",\n    defaultValue: false,\n    fn: function fn(instance) {\n        var reference = instance.reference;\n        var doc = $95051df85825bf2c$var$getOwnerDocument(instance.props.triggerTarget || reference);\n        var isInternalUpdate = false;\n        var wasFocusEvent = false;\n        var isUnmounted = true;\n        var prevProps = instance.props;\n        function getIsInitialBehavior() {\n            return instance.props.followCursor === \"initial\" && instance.state.isVisible;\n        }\n        function addListener() {\n            doc.addEventListener(\"mousemove\", onMouseMove);\n        }\n        function removeListener() {\n            doc.removeEventListener(\"mousemove\", onMouseMove);\n        }\n        function unsetGetReferenceClientRect() {\n            isInternalUpdate = true;\n            instance.setProps({\n                getReferenceClientRect: null\n            });\n            isInternalUpdate = false;\n        }\n        function onMouseMove(event) {\n            // If the instance is interactive, avoid updating the position unless it's\n            // over the reference element\n            var isCursorOverReference = event.target ? reference.contains(event.target) : true;\n            var followCursor = instance.props.followCursor;\n            var clientX = event.clientX, clientY = event.clientY;\n            var rect = reference.getBoundingClientRect();\n            var relativeX = clientX - rect.left;\n            var relativeY = clientY - rect.top;\n            if (isCursorOverReference || !instance.props.interactive) instance.setProps({\n                // @ts-ignore - unneeded DOMRect properties\n                getReferenceClientRect: function getReferenceClientRect() {\n                    var rect = reference.getBoundingClientRect();\n                    var x = clientX;\n                    var y = clientY;\n                    if (followCursor === \"initial\") {\n                        x = rect.left + relativeX;\n                        y = rect.top + relativeY;\n                    }\n                    var top = followCursor === \"horizontal\" ? rect.top : y;\n                    var right = followCursor === \"vertical\" ? rect.right : x;\n                    var bottom = followCursor === \"horizontal\" ? rect.bottom : y;\n                    var left = followCursor === \"vertical\" ? rect.left : x;\n                    return {\n                        width: right - left,\n                        height: bottom - top,\n                        top: top,\n                        right: right,\n                        bottom: bottom,\n                        left: left\n                    };\n                }\n            });\n        }\n        function create() {\n            if (instance.props.followCursor) {\n                $95051df85825bf2c$var$activeInstances.push({\n                    instance: instance,\n                    doc: doc\n                });\n                $95051df85825bf2c$var$addMouseCoordsListener(doc);\n            }\n        }\n        function destroy() {\n            $95051df85825bf2c$var$activeInstances = $95051df85825bf2c$var$activeInstances.filter(function(data) {\n                return data.instance !== instance;\n            });\n            if ($95051df85825bf2c$var$activeInstances.filter(function(data) {\n                return data.doc === doc;\n            }).length === 0) $95051df85825bf2c$var$removeMouseCoordsListener(doc);\n        }\n        return {\n            onCreate: create,\n            onDestroy: destroy,\n            onBeforeUpdate: function onBeforeUpdate() {\n                prevProps = instance.props;\n            },\n            onAfterUpdate: function onAfterUpdate(_, _ref2) {\n                var followCursor = _ref2.followCursor;\n                if (isInternalUpdate) return;\n                if (followCursor !== undefined && prevProps.followCursor !== followCursor) {\n                    destroy();\n                    if (followCursor) {\n                        create();\n                        if (instance.state.isMounted && !wasFocusEvent && !getIsInitialBehavior()) addListener();\n                    } else {\n                        removeListener();\n                        unsetGetReferenceClientRect();\n                    }\n                }\n            },\n            onMount: function onMount() {\n                if (instance.props.followCursor && !wasFocusEvent) {\n                    if (isUnmounted) {\n                        onMouseMove($95051df85825bf2c$var$mouseCoords);\n                        isUnmounted = false;\n                    }\n                    if (!getIsInitialBehavior()) addListener();\n                }\n            },\n            onTrigger: function onTrigger(_, event) {\n                if ($95051df85825bf2c$var$isMouseEvent(event)) $95051df85825bf2c$var$mouseCoords = {\n                    clientX: event.clientX,\n                    clientY: event.clientY\n                };\n                wasFocusEvent = event.type === \"focus\";\n            },\n            onHidden: function onHidden() {\n                if (instance.props.followCursor) {\n                    unsetGetReferenceClientRect();\n                    removeListener();\n                    isUnmounted = true;\n                }\n            }\n        };\n    }\n};\nfunction $95051df85825bf2c$var$getProps(props, modifier) {\n    var _props$popperOptions;\n    return {\n        popperOptions: Object.assign({}, props.popperOptions, {\n            modifiers: [].concat((((_props$popperOptions = props.popperOptions) == null ? void 0 : _props$popperOptions.modifiers) || []).filter(function(_ref) {\n                var name = _ref.name;\n                return name !== modifier.name;\n            }), [\n                modifier\n            ])\n        })\n    };\n}\nvar $95051df85825bf2c$export$e2b668424a9c728 = {\n    name: \"inlinePositioning\",\n    defaultValue: false,\n    fn: function fn(instance) {\n        var reference = instance.reference;\n        function isEnabled() {\n            return !!instance.props.inlinePositioning;\n        }\n        var placement;\n        var cursorRectIndex = -1;\n        var isInternalUpdate = false;\n        var triedPlacements = [];\n        var modifier = {\n            name: \"tippyInlinePositioning\",\n            enabled: true,\n            phase: \"afterWrite\",\n            fn: function fn(_ref2) {\n                var state = _ref2.state;\n                if (isEnabled()) {\n                    if (triedPlacements.indexOf(state.placement) !== -1) triedPlacements = [];\n                    if (placement !== state.placement && triedPlacements.indexOf(state.placement) === -1) {\n                        triedPlacements.push(state.placement);\n                        instance.setProps({\n                            // @ts-ignore - unneeded DOMRect properties\n                            getReferenceClientRect: function getReferenceClientRect() {\n                                return _getReferenceClientRect(state.placement);\n                            }\n                        });\n                    }\n                    placement = state.placement;\n                }\n            }\n        };\n        function _getReferenceClientRect(placement) {\n            return $95051df85825bf2c$var$getInlineBoundingClientRect($95051df85825bf2c$var$getBasePlacement(placement), reference.getBoundingClientRect(), $95051df85825bf2c$var$arrayFrom(reference.getClientRects()), cursorRectIndex);\n        }\n        function setInternalProps(partialProps) {\n            isInternalUpdate = true;\n            instance.setProps(partialProps);\n            isInternalUpdate = false;\n        }\n        function addModifier() {\n            if (!isInternalUpdate) setInternalProps($95051df85825bf2c$var$getProps(instance.props, modifier));\n        }\n        return {\n            onCreate: addModifier,\n            onAfterUpdate: addModifier,\n            onTrigger: function onTrigger(_, event) {\n                if ($95051df85825bf2c$var$isMouseEvent(event)) {\n                    var rects = $95051df85825bf2c$var$arrayFrom(instance.reference.getClientRects());\n                    var cursorRect = rects.find(function(rect) {\n                        return rect.left - 2 <= event.clientX && rect.right + 2 >= event.clientX && rect.top - 2 <= event.clientY && rect.bottom + 2 >= event.clientY;\n                    });\n                    var index = rects.indexOf(cursorRect);\n                    cursorRectIndex = index > -1 ? index : cursorRectIndex;\n                }\n            },\n            onHidden: function onHidden() {\n                cursorRectIndex = -1;\n            }\n        };\n    }\n};\nfunction $95051df85825bf2c$var$getInlineBoundingClientRect(currentBasePlacement, boundingRect, clientRects, cursorRectIndex) {\n    // Not an inline element, or placement is not yet known\n    if (clientRects.length < 2 || currentBasePlacement === null) return boundingRect;\n     // There are two rects and they are disjoined\n    if (clientRects.length === 2 && cursorRectIndex >= 0 && clientRects[0].left > clientRects[1].right) return clientRects[cursorRectIndex] || boundingRect;\n    switch(currentBasePlacement){\n        case \"top\":\n        case \"bottom\":\n            var firstRect = clientRects[0];\n            var lastRect = clientRects[clientRects.length - 1];\n            var isTop = currentBasePlacement === \"top\";\n            var top = firstRect.top;\n            var bottom = lastRect.bottom;\n            var left = isTop ? firstRect.left : lastRect.left;\n            var right = isTop ? firstRect.right : lastRect.right;\n            var width = right - left;\n            var height = bottom - top;\n            return {\n                top: top,\n                bottom: bottom,\n                left: left,\n                right: right,\n                width: width,\n                height: height\n            };\n        case \"left\":\n        case \"right\":\n            var minLeft = Math.min.apply(Math, clientRects.map(function(rects) {\n                return rects.left;\n            }));\n            var maxRight = Math.max.apply(Math, clientRects.map(function(rects) {\n                return rects.right;\n            }));\n            var measureRects = clientRects.filter(function(rect) {\n                return currentBasePlacement === \"left\" ? rect.left === minLeft : rect.right === maxRight;\n            });\n            var _top = measureRects[0].top;\n            var _bottom = measureRects[measureRects.length - 1].bottom;\n            var _left = minLeft;\n            var _right = maxRight;\n            var _width = _right - _left;\n            var _height = _bottom - _top;\n            return {\n                top: _top,\n                bottom: _bottom,\n                left: _left,\n                right: _right,\n                width: _width,\n                height: _height\n            };\n        default:\n            return boundingRect;\n    }\n}\nvar $95051df85825bf2c$export$4bd4b47501432316 = {\n    name: \"sticky\",\n    defaultValue: false,\n    fn: function fn(instance) {\n        var reference = instance.reference, popper = instance.popper;\n        function getReference() {\n            return instance.popperInstance ? instance.popperInstance.state.elements.reference : reference;\n        }\n        function shouldCheck(value) {\n            return instance.props.sticky === true || instance.props.sticky === value;\n        }\n        var prevRefRect = null;\n        var prevPopRect = null;\n        function updatePosition() {\n            var currentRefRect = shouldCheck(\"reference\") ? getReference().getBoundingClientRect() : null;\n            var currentPopRect = shouldCheck(\"popper\") ? popper.getBoundingClientRect() : null;\n            if (currentRefRect && $95051df85825bf2c$var$areRectsDifferent(prevRefRect, currentRefRect) || currentPopRect && $95051df85825bf2c$var$areRectsDifferent(prevPopRect, currentPopRect)) {\n                if (instance.popperInstance) instance.popperInstance.update();\n            }\n            prevRefRect = currentRefRect;\n            prevPopRect = currentPopRect;\n            if (instance.state.isMounted) requestAnimationFrame(updatePosition);\n        }\n        return {\n            onMount: function onMount() {\n                if (instance.props.sticky) updatePosition();\n            }\n        };\n    }\n};\nfunction $95051df85825bf2c$var$areRectsDifferent(rectA, rectB) {\n    if (rectA && rectB) return rectA.top !== rectB.top || rectA.right !== rectB.right || rectA.bottom !== rectB.bottom || rectA.left !== rectB.left;\n    return true;\n}\n$95051df85825bf2c$var$tippy.setDefaultProps({\n    render: $95051df85825bf2c$var$render\n});\nvar $95051df85825bf2c$export$2e2bcd8739ae039 = $95051df85825bf2c$var$tippy;\n\n\n\n\n\n\n\n\n\nconst $8218b30f18e17af9$var$$expand = document.getElementById(\"expand\");\nconst $8218b30f18e17af9$var$$footer = document.getElementById(\"footer\");\nconst $8218b30f18e17af9$var$$hint = document.getElementById(\"hint\");\nconst $8218b30f18e17af9$var$$includeProfanity = document.getElementById(\"include-profanity\");\nconst $8218b30f18e17af9$var$$includeSolution = document.getElementById(\"include-solution\");\nconst $8218b30f18e17af9$var$$mode = document.getElementById(\"mode\");\nconst $8218b30f18e17af9$var$$new = document.getElementById(\"new\");\nconst $8218b30f18e17af9$var$$path = document.getElementById(\"path\");\nconst $8218b30f18e17af9$var$$reset = document.getElementById(\"reset\");\nconst $8218b30f18e17af9$var$$selection = document.getElementById(\"selection\");\nconst $8218b30f18e17af9$var$$share = document.getElementById(\"share\");\nconst $8218b30f18e17af9$var$$statistics = document.querySelector(\"#statistics > ul\");\nconst $8218b30f18e17af9$var$$status = document.getElementById(\"status\");\nconst $8218b30f18e17af9$var$$swaps = document.querySelector(\"#swaps > ul\");\nconst $8218b30f18e17af9$var$$undo = document.getElementById(\"undo\");\nconst $8218b30f18e17af9$var$$width = document.getElementById(\"width\");\nconst $8218b30f18e17af9$var$$words = document.querySelector(\"#words > ul\");\nconst $8218b30f18e17af9$var$confirm = window.confirm;\nconst $8218b30f18e17af9$var$crypto = window.crypto;\nconst $8218b30f18e17af9$var$tippy = (0, $95051df85825bf2c$export$2e2bcd8739ae039)($8218b30f18e17af9$var$$share, {\n    content: \"Copied!\",\n    theme: \"custom\",\n    trigger: \"manual\"\n});\nclass $8218b30f18e17af9$export$985739bfa5723e08 {\n    #configuration;\n    #dictionary;\n    #eventListeners = new (0, $8ee30938c07750df$export$b20b719ec758a20f)({\n        context: this\n    });\n    #grid;\n    #state;\n    constructor(){\n        const overrides = [\n            $8218b30f18e17af9$export$985739bfa5723e08.Params.DrawerExpanded\n        ];\n        const initialState = $8218b30f18e17af9$export$985739bfa5723e08.State.fromObject({\n            version: $8218b30f18e17af9$export$985739bfa5723e08.State.Version\n        });\n        this.#state = new (0, $0ca0e02f0a4bc377$export$7254cc27399e90bd)($8218b30f18e17af9$export$985739bfa5723e08.CacheKey, initialState, {\n            overrides: overrides\n        });\n        const state = this.#getState();\n        if (state.version < $8218b30f18e17af9$export$985739bfa5723e08.State.Version) {\n            console.warn(`Ignoring stale cache with version ${state.version}. Current version: ${$8218b30f18e17af9$export$985739bfa5723e08.State.Version}`);\n            this.#state.set(initialState);\n        }\n        this.#dictionary = new (0, $925c330059e2cdab$export$4ee70ab773570fb9)();\n        const mode = this.#getMode();\n        const width = this.#getWidth();\n        this.#grid = new (0, $feafa30b0856daa8$export$ef2184bd89960b14)(this.#dictionary, width, mode);\n        this.#configuration = this.#grid.getConfiguration();\n        const params = new URLSearchParams((0, $3e2f0fa58ba587b4$export$128fa18b7194ef).search);\n        params.set((0, $feafa30b0856daa8$export$ef2184bd89960b14).Params.Id.key, $8218b30f18e17af9$var$crypto.randomUUID().split(\"-\")[0]);\n        $8218b30f18e17af9$var$$new.href = `?${params.toString()}`;\n        $8218b30f18e17af9$var$$path.href = `?${(0, $feafa30b0856daa8$export$ef2184bd89960b14).Params.Id.key}=${this.#configuration.id}`;\n        $8218b30f18e17af9$var$$path.textContent = this.#configuration.id;\n        this.#eventListeners.add([\n            {\n                type: \"change\",\n                element: $8218b30f18e17af9$var$$includeProfanity,\n                handler: this.#onIncludeProfanityChange\n            },\n            {\n                type: \"change\",\n                element: $8218b30f18e17af9$var$$includeSolution,\n                handler: this.#onIncludeSolutionChange\n            },\n            {\n                type: \"change\",\n                element: $8218b30f18e17af9$var$$mode,\n                handler: this.#onModeChange\n            },\n            {\n                type: \"change\",\n                element: $8218b30f18e17af9$var$$width,\n                handler: this.#onWidthChange\n            },\n            {\n                type: \"click\",\n                element: $8218b30f18e17af9$var$$expand,\n                handler: this.#onExpand\n            },\n            {\n                type: \"click\",\n                element: $8218b30f18e17af9$var$$hint,\n                handler: this.#onHint\n            },\n            {\n                type: \"click\",\n                element: $8218b30f18e17af9$var$$reset,\n                handler: this.reset\n            },\n            {\n                type: \"click\",\n                element: $8218b30f18e17af9$var$$share,\n                handler: this.share\n            },\n            {\n                type: \"click\",\n                element: $8218b30f18e17af9$var$$swaps,\n                handler: this.#deleteSwap\n            },\n            {\n                type: \"click\",\n                element: $8218b30f18e17af9$var$$undo,\n                handler: this.#onUndo\n            },\n            {\n                type: \"click\",\n                element: $8218b30f18e17af9$var$$words,\n                handler: this.#deleteWord\n            },\n            {\n                type: (0, $feafa30b0856daa8$export$ef2184bd89960b14).Events.Selection,\n                handler: this.#updateSelection\n            },\n            {\n                type: (0, $feafa30b0856daa8$export$ef2184bd89960b14).Events.Update,\n                handler: this.#onGridUpdate\n            }\n        ]);\n        this.#updateDrawer();\n        this.#updateModeSelector();\n        this.#updateWidthSelector();\n    }\n    reset() {\n        // Resolving in promise to prevent the Chrome 'Violation' warning in console\n        return Promise.resolve().then(()=>{\n            if (!$8218b30f18e17af9$var$confirm(\"Are you sure you want to reset the grid?\")) return;\n            this.#grid.reset();\n            this.update();\n        });\n    }\n    async setup() {\n        // Load the base dictionary, and generate the grid from that\n        await this.#dictionary.load((0, $925c330059e2cdab$export$4ee70ab773570fb9).Sources.Default);\n        this.#grid.setup();\n        this.update();\n        const state = this.#getState();\n        // Note that additional dictionary sources are not used to generate the grid. They are only used for validation.\n        const additionalSources = Array.from(new Set(this.#grid.getState().getSources().filter((source)=>source !== (0, $925c330059e2cdab$export$4ee70ab773570fb9).Names.Default).concat(state.additionalSources)));\n        for await (const source of additionalSources)await this.#dictionary.load((0, $925c330059e2cdab$export$4ee70ab773570fb9).SourcesByName[source]);\n    }\n    async share() {\n        const { id: id, mode: mode, width: width } = this.#configuration;\n        const size = `${width}x${width}`;\n        const gameState = this.#getState();\n        const gridState = this.#grid.getState();\n        const statistics = this.#grid.getStatistics(gridState);\n        const content = [\n            `Path#${id} | ${size} | ${statistics.hiddenWordsGuessed}/${statistics.hiddenWordCount}`\n        ];\n        if (mode === (0, $feafa30b0856daa8$export$ef2184bd89960b14).Modes.Challenge) content.push(`Score: ${statistics.score} / ${statistics.progress}%`);\n        let moves = \"\";\n        const lastMovesIndex = statistics.moves.length - 1;\n        statistics.moves.forEach((move, index)=>{\n            moves += move.getSymbol(mode);\n            if (index !== lastMovesIndex && (index + 1) % width === 0) moves += \"\\n\";\n        });\n        if (moves) content.push(moves);\n        const sources = gridState.getSources();\n        if (sources.length > 1) content.push(`Dictionary: ${sources.join(\" + \")}`);\n        content.push(gameState.shareUrl.get(gridState, this.#configuration));\n        console.debug(content);\n        await (0, $3e2f0fa58ba587b4$export$e84ab21a5791681d)(content.join(\"\\n\"));\n        $8218b30f18e17af9$var$tippy.show();\n        setTimeout(()=>$8218b30f18e17af9$var$tippy.hide(), 1000);\n    }\n    update() {\n        this.#updateHint();\n        this.#updateStatus();\n        this.#updateSwaps();\n        this.#updateUndo();\n        this.#updateWords();\n    }\n    #deleteSwap(event) {\n        if (event.target.classList.contains($8218b30f18e17af9$export$985739bfa5723e08.ClassNames.Delete)) {\n            this.#grid.removeSwap(event.target.dataset.index);\n            this.update();\n        }\n    }\n    #deleteWord(event) {\n        if (event.target.classList.contains($8218b30f18e17af9$export$985739bfa5723e08.ClassNames.Delete)) {\n            this.#grid.removeWord(event.target.dataset.index);\n            this.update();\n        }\n    }\n    #getMode() {\n        return (0, $feafa30b0856daa8$export$ef2184bd89960b14).Params.Mode.get() ?? (0, $feafa30b0856daa8$export$ef2184bd89960b14).DefaultMode;\n    }\n    #getState() {\n        return $8218b30f18e17af9$export$985739bfa5723e08.State.fromObject(this.#state.get());\n    }\n    #getWidth() {\n        return (0, $3e2f0fa58ba587b4$export$b1b145d64c7b5823)((0, $feafa30b0856daa8$export$ef2184bd89960b14).Params.Width.get(), Number) ?? (0, $feafa30b0856daa8$export$ef2184bd89960b14).DefaultWidth;\n    }\n    #onExpand() {\n        this.#state.set($8218b30f18e17af9$export$985739bfa5723e08.Params.DrawerExpanded.key, !this.#state.get($8218b30f18e17af9$export$985739bfa5723e08.Params.DrawerExpanded.key));\n        this.#updateDrawer();\n    }\n    #onGridUpdate() {\n        this.update();\n    }\n    #onHint() {\n        this.#grid.hint();\n        this.#updateHint();\n    }\n    async #onIncludeProfanityChange(event) {\n        const state = this.#getState();\n        if (event.target.checked) {\n            state.additionalSources = Array.from(new Set(state.additionalSources.concat([\n                (0, $925c330059e2cdab$export$4ee70ab773570fb9).Names.Profanity\n            ])));\n            await this.#dictionary.load((0, $925c330059e2cdab$export$4ee70ab773570fb9).Sources.Profanity);\n        } else {\n            const index = state.additionalSources.findIndex((source)=>source === (0, $925c330059e2cdab$export$4ee70ab773570fb9).Names.Profanity);\n            state.additionalSources.splice(index, 1);\n            this.#dictionary.unload((0, $925c330059e2cdab$export$4ee70ab773570fb9).Names.Profanity);\n        }\n        this.#state.set(state);\n    }\n    #onIncludeSolutionChange(event) {\n        const state = this.#getState();\n        state.shareUrl = state.shareUrl.copy({\n            solution: event.target.checked\n        });\n        this.#state.set(state);\n    }\n    #onUndo() {\n        if (!$8218b30f18e17af9$var$$undo.classList.contains($8218b30f18e17af9$export$985739bfa5723e08.ClassNames.Disabled)) this.#grid.undo();\n    }\n    #onModeChange(event) {\n        (0, $feafa30b0856daa8$export$ef2184bd89960b14).Params.Mode.set(event.target.value);\n        (0, $3e2f0fa58ba587b4$export$32da5b5043dcd88c)();\n    }\n    #onWidthChange(event) {\n        (0, $feafa30b0856daa8$export$ef2184bd89960b14).Params.Width.set(event.target.value);\n        (0, $3e2f0fa58ba587b4$export$32da5b5043dcd88c)();\n    }\n    #updateDrawer() {\n        const state = this.#getState();\n        $8218b30f18e17af9$var$$footer.classList.toggle($8218b30f18e17af9$export$985739bfa5723e08.ClassNames.Expanded, state.drawerExpanded);\n        $8218b30f18e17af9$var$$expand.textContent = state.drawerExpanded ? \"expand_less\" : \"expand_more\";\n        $8218b30f18e17af9$var$$includeProfanity.checked = state.additionalSources.includes((0, $925c330059e2cdab$export$4ee70ab773570fb9).Names.Profanity);\n        $8218b30f18e17af9$var$$includeSolution.checked = state.shareUrl.solution;\n    }\n    #updateHint() {\n        $8218b30f18e17af9$var$$hint.classList.toggle($8218b30f18e17af9$export$985739bfa5723e08.ClassNames.Disabled, !this.#grid.hasHint());\n    }\n    #updateSelection() {\n        this.#updateUndo();\n        const selection = this.#grid.getSelection();\n        $8218b30f18e17af9$var$$selection.replaceChildren();\n        $8218b30f18e17af9$var$$selection.classList.remove($8218b30f18e17af9$export$985739bfa5723e08.ClassNames.WordValid);\n        // Ignore cells marked for swap\n        if (!selection.cells.filter((cell)=>!cell.getFlags().has((0, $1c1df06bf88efcc4$export$f6f0c3fe4ec306ea).Flags.Swap)).length) // Nothing to do\n        return;\n        const $content = document.createElement(\"span\");\n        $content.textContent = selection.content;\n        $content.classList.toggle($8218b30f18e17af9$export$985739bfa5723e08.ClassNames.WordValid, selection.isValidWord);\n        const children = [\n            $content\n        ];\n        if (selection.isValidWord) {\n            const $info = document.createElement(\"span\");\n            $info.classList.add($8218b30f18e17af9$export$985739bfa5723e08.ClassNames.WordInfo);\n            if (this.#configuration.mode === (0, $feafa30b0856daa8$export$ef2184bd89960b14).Modes.Pathfinder) $info.textContent = (0, $3e2f0fa58ba587b4$export$d4634d8e0b46181a)(selection.hiddenWordIndexes.length - selection.content.length);\n            else {\n                const configuration = this.#grid.getConfiguration();\n                const move = new (0, $feafa30b0856daa8$export$ef2184bd89960b14).Move((0, $feafa30b0856daa8$export$ef2184bd89960b14).Move.Types.Spell, {\n                    match: selection.match\n                });\n                const word = new (0, $d13164380fe1740a$export$1ee6d718c47c2db0)(configuration.width, selection.cells, move);\n                $info.textContent = word.points;\n            }\n            children.push($info);\n        }\n        $8218b30f18e17af9$var$$selection.replaceChildren(...children);\n    }\n    #updateStatus() {\n        const statistics = this.#grid.getStatistics();\n        const hiddenWords = `${statistics.hiddenWordsGuessed}/${statistics.hiddenWordCount}`;\n        if (this.#configuration.mode === (0, $feafa30b0856daa8$export$ef2184bd89960b14).Modes.Challenge) {\n            $8218b30f18e17af9$var$$status.textContent = statistics.score;\n            $8218b30f18e17af9$var$$statistics.replaceChildren(...[\n                {\n                    name: \"Progress\",\n                    value: `${statistics.progress}%`\n                },\n                {\n                    name: \"Average Word Length\",\n                    value: statistics.averageWordLength\n                },\n                {\n                    name: \"Hidden Words Found\",\n                    value: hiddenWords\n                },\n                {\n                    name: \"Your Best Score\",\n                    value: `${statistics.best} (${statistics.bestDiff})`\n                }\n            ].map((item)=>{\n                const $content = document.createElement(\"span\");\n                $content.textContent = item.name;\n                const $value = document.createElement(\"span\");\n                $value.textContent = item.value;\n                return $8218b30f18e17af9$export$985739bfa5723e08.getListItem($content, $value);\n            }));\n        } else $8218b30f18e17af9$var$$status.textContent = hiddenWords;\n    }\n    #updateSwaps() {\n        const swaps = this.#grid.getSwaps();\n        // noinspection JSCheckFunctionSignatures\n        $8218b30f18e17af9$var$$swaps.replaceChildren(...swaps.map((swap, index)=>{\n            const $swap = document.createElement(\"span\");\n            $swap.classList.add($8218b30f18e17af9$export$985739bfa5723e08.ClassNames.Swap);\n            $swap.textContent = `${swap.map((letter)=>letter.toUpperCase()).join(\" \\u2192 \")}`;\n            return $8218b30f18e17af9$export$985739bfa5723e08.getListItem($swap, $8218b30f18e17af9$export$985739bfa5723e08.getDeleteElement(index));\n        }));\n    }\n    #updateUndo() {\n        const moves = this.#grid.getMoves().filter((move)=>move.type !== (0, $feafa30b0856daa8$export$ef2184bd89960b14).Move.Types.Hint);\n        const selection = this.#grid.getSelection();\n        const disabled = moves.length === 0 && selection.length === 0;\n        $8218b30f18e17af9$var$$undo.classList.toggle($8218b30f18e17af9$export$985739bfa5723e08.ClassNames.Disabled, disabled);\n    }\n    #updateModeSelector() {\n        const mode = this.#getMode();\n        $8218b30f18e17af9$var$$mode.replaceChildren(...Object.entries((0, $feafa30b0856daa8$export$ef2184bd89960b14).Modes).map(([key, value])=>{\n            const $option = document.createElement(\"option\");\n            $option.textContent = key;\n            $option.value = value;\n            if (value === mode) $option.selected = true;\n            return $option;\n        }));\n    }\n    #updateWidthSelector() {\n        const width = this.#getWidth();\n        $8218b30f18e17af9$var$$width.replaceChildren(...(0, $feafa30b0856daa8$export$ef2184bd89960b14).Widths.map((value)=>{\n            const $option = document.createElement(\"option\");\n            $option.textContent = `${value}x${value}`;\n            $option.value = value.toString();\n            if (value === width) $option.selected = true;\n            return $option;\n        }));\n    }\n    #updateWords() {\n        const state = this.#grid.getState();\n        const words = this.#grid.getWords(state).reverse();\n        const length = words.length;\n        const isPathfinderMode = this.#configuration.mode === (0, $feafa30b0856daa8$export$ef2184bd89960b14).Modes.Pathfinder;\n        $8218b30f18e17af9$var$$words.replaceChildren(...words.map((word, index)=>{\n            const data = word.move.value;\n            const $index = document.createElement(\"span\");\n            $index.textContent = `${length - index}.`;\n            const $word = document.createElement(\"span\");\n            $word.classList.add($8218b30f18e17af9$export$985739bfa5723e08.ClassNames.Word, (0, $3e2f0fa58ba587b4$export$307b18b61172f7ed)($8218b30f18e17af9$export$985739bfa5723e08.ClassNames.Word, \"match\", data.match));\n            $word.textContent = word.content;\n            const $info = document.createElement(\"span\");\n            $info.classList.add($8218b30f18e17af9$export$985739bfa5723e08.ClassNames.WordInfo);\n            $info.textContent = isPathfinderMode ? (0, $3e2f0fa58ba587b4$export$d4634d8e0b46181a)(state.configuration.words[data.hiddenWordIndex].length - word.content.length) : word.points;\n            const $delete = isPathfinderMode ? undefined : $8218b30f18e17af9$export$985739bfa5723e08.getDeleteElement(index);\n            return $8218b30f18e17af9$export$985739bfa5723e08.getListItem([\n                $index,\n                $word,\n                $info\n            ], $delete);\n        }));\n    }\n    static getDeleteElement(index) {\n        const $delete = document.createElement(\"span\");\n        $delete.classList.add($8218b30f18e17af9$export$985739bfa5723e08.ClassNames.Delete, $8218b30f18e17af9$export$985739bfa5723e08.ClassNames.Icon);\n        $delete.dataset.index = index.toString();\n        $delete.textContent = \"delete\";\n        $delete.title = \"Delete\";\n        return $delete;\n    }\n    static getListItem($left, $right) {\n        const $li = document.createElement(\"li\");\n        const $container = document.createElement(\"div\");\n        $container.classList.add($8218b30f18e17af9$export$985739bfa5723e08.ClassNames.Container);\n        $li.append($container);\n        const $containerLeft = document.createElement(\"div\");\n        $containerLeft.classList.add($8218b30f18e17af9$export$985739bfa5723e08.ClassNames.FlexLeft);\n        $containerLeft.append(...Array.isArray($left) ? $left : [\n            $left\n        ]);\n        $container.append($containerLeft);\n        if ($right !== undefined) {\n            const $containerRight = document.createElement(\"div\");\n            $containerRight.classList.add($8218b30f18e17af9$export$985739bfa5723e08.ClassNames.FlexRight);\n            $containerRight.append(...Array.isArray($right) ? $right : [\n                $right\n            ]);\n            $container.append($containerRight);\n        }\n        return $li;\n    }\n    static CacheKey = \"game\";\n    static ClassNames = Object.freeze({\n        Container: \"container\",\n        Delete: \"delete\",\n        Disabled: \"disabled\",\n        Expanded: \"expanded\",\n        FlexLeft: \"flex-left\",\n        FlexRight: \"flex-right\",\n        Icon: \"material-symbols-outlined\",\n        Share: \"share\",\n        Swap: \"swap\",\n        Word: \"word\",\n        WordInfo: \"word-info\",\n        WordValid: \"word-valid\"\n    });\n    static Params = Object.freeze({\n        DrawerExpanded: (0, $97686966a3fec53f$export$94affb487e701bf2).urlParams(\"drawerExpanded\")\n    });\n    static State = class {\n        additionalSources;\n        drawerExpanded;\n        shareUrl;\n        version;\n        constructor(drawerExpanded, shareUrl, additionalSources, version){\n            this.drawerExpanded = drawerExpanded ?? false;\n            this.shareUrl = shareUrl ?? new $8218b30f18e17af9$export$985739bfa5723e08.State.ShareUrl();\n            this.additionalSources = additionalSources ?? [];\n            this.version = version ?? 0;\n        }\n        static fromObject(obj) {\n            return new $8218b30f18e17af9$export$985739bfa5723e08.State(obj.drawerExpanded, (0, $3e2f0fa58ba587b4$export$b1b145d64c7b5823)(obj.shareUrl, $8218b30f18e17af9$export$985739bfa5723e08.State.ShareUrl.fromObject), obj.additionalSources, obj.version);\n        }\n        static ShareUrl = class {\n            solution;\n            constructor(solution){\n                this.solution = solution ?? false;\n            }\n            copy(settings) {\n                return new $8218b30f18e17af9$export$985739bfa5723e08.State.ShareUrl(settings.solution ?? this.solution);\n            }\n            get(state, configuration) {\n                const url = (0, $3e2f0fa58ba587b4$export$f654b28f82155665)();\n                url.searchParams.set((0, $feafa30b0856daa8$export$ef2184bd89960b14).Params.Id.key, configuration.id);\n                url.searchParams.set((0, $feafa30b0856daa8$export$ef2184bd89960b14).Params.Mode.key, configuration.mode);\n                url.searchParams.set((0, $feafa30b0856daa8$export$ef2184bd89960b14).Params.Width.key, configuration.width);\n                if (this.solution) url.searchParams.set((0, $feafa30b0856daa8$export$ef2184bd89960b14).Params.Solution.key, (0, $feafa30b0856daa8$export$ef2184bd89960b14).Params.Solution.encode(state.solution));\n                return url.toString();\n            }\n            static fromObject(obj) {\n                return new $8218b30f18e17af9$export$985739bfa5723e08.State.ShareUrl(obj.solution);\n            }\n        };\n        static Version = 1;\n    };\n}\nif ((0, $3e2f0fa58ba587b4$export$da1115b7645c376c).has((0, $feafa30b0856daa8$export$ef2184bd89960b14).Params.Solution.key)) document.body.classList.add($8218b30f18e17af9$export$985739bfa5723e08.ClassNames.Share);\n\n\nconst $a48055948c7c3660$var$$info = document.getElementById(\"info\");\nconst $a48055948c7c3660$var$$infoDialog = document.getElementById(\"info-dialog\");\n$a48055948c7c3660$var$$info.addEventListener(\"click\", ()=>{\n    if (!$a48055948c7c3660$var$$infoDialog.open) $a48055948c7c3660$var$$infoDialog.showModal();\n});\n\n\nconst $d1349a7189b9e5e6$var$id = \"G-44BJC1S0CM\";\nconst $d1349a7189b9e5e6$var$script = document.createElement(\"script\");\n$d1349a7189b9e5e6$var$script.setAttribute(\"src\", `https://www.googletagmanager.com/gtag/js?id=${$d1349a7189b9e5e6$var$id}`);\ndocument.head.append($d1349a7189b9e5e6$var$script);\nconst $d1349a7189b9e5e6$var$dataLayer = window.dataLayer = window.dataLayer || [];\nfunction $d1349a7189b9e5e6$var$gtag() {\n    $d1349a7189b9e5e6$var$dataLayer.push(arguments);\n}\n$d1349a7189b9e5e6$var$gtag(\"js\", new Date());\n$d1349a7189b9e5e6$var$gtag(\"config\", $d1349a7189b9e5e6$var$id);\n\n\nconst $2fd5a75c703b0f49$var$game = new (0, $8218b30f18e17af9$export$985739bfa5723e08)();\n$2fd5a75c703b0f49$var$game.setup();\nwindow.addEventListener(\"popstate\", ()=>{\n    // Handle user navigating through history\n    window.location.reload();\n});\nwindow.debug = (0, $f1fc5431671d3192$export$1c9f709888824e05);\nwindow.game = $2fd5a75c703b0f49$var$game;\n\n})();\n//# sourceMappingURL=index.fd60516e.js.map\n","import { debug } from './components/debug'\nimport { Game } from './components/game'\nimport './components/info'\n\nif (process.env.NODE_ENV === 'production') {\n  require('./components/analytics')\n}\n\nconst game = new Game()\ngame.setup()\n\nwindow.addEventListener('popstate', () => {\n  // Handle user navigating through history\n  window.location.reload()\n})\n\nwindow.debug = debug\nwindow.game = game\n","import { urlParams } from './util'\n\nconst console = window.console = window.console || { debug: function () {} }\nconst consoleDebug = console.debug\n\nexport function debug (debug) {\n  console.debug = debug ? consoleDebug : function () {}\n}\n\n// Silence debug logging by default\ndebug(urlParams.has('debug'))\n","import pako from 'pako'\n\nexport const history = window.history\nconst location = window.location\nexport const localStorage = window.localStorage\nconst navigator = window.navigator\n\nexport const url = new URL(location)\nexport const urlParams = url.searchParams\n\nexport function arrayEquals (a, b, sort) {\n  if (typeof sort === 'function') {\n    a = a.toSorted(sort)\n    b = b.toSorted(sort)\n  }\n  return a.length === b.length && a.every((value, index) => b[index] === value)\n}\n\nexport function arrayIncludes (a, b, sort) {\n  return a.some((v) => arrayEquals(v, b, sort))\n}\n\n/**\n * cyrb53 (c) 2018 bryc (github.com/bryc)\n * License: Public domain. Attribution appreciated.\n * A fast and simple 53-bit string hash function with decent collision resistance.\n * Largely inspired by MurmurHash2/3, but with a focus on speed/simplicity.\n */\nexport function cyrb53 (str, seed = 0) {\n  let h1 = 0xdeadbeef ^ seed\n  let h2 = 0x41c6ce57 ^ seed\n  for (let i = 0, ch; i < str.length; i++) {\n    ch = str.charCodeAt(i)\n    h1 = Math.imul(h1 ^ ch, 2654435761)\n    h2 = Math.imul(h2 ^ ch, 1597334677)\n  }\n  h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507)\n  h1 ^= Math.imul(h2 ^ (h2 >>> 13), 3266489909)\n  h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507)\n  h2 ^= Math.imul(h1 ^ (h1 >>> 13), 3266489909)\n  return 4294967296 * (2097151 & h2) + (h1 >>> 0)\n}\n\nexport function getBaseUrl () {\n  return new URL(location.href.split(/[?#]/)[0])\n}\n\nexport function getClassName (...parts) {\n  return parts.join('-')\n}\n\nexport function getIndexesUnique (rand, array, max) {\n  const available = Object.keys(array)\n  if (max > available.length) {\n    max = available.length\n  }\n\n  const picked = []\n  for (; max > 0; max--) {\n    picked.push(Number(available.splice(randomIntInclusive(rand, available.length - 1), 1)[0]))\n  }\n\n  return picked\n}\n\nexport function getSign (num) {\n  const sign = Math.sign(num)\n  if (sign === 0) {\n    return '='\n  } else if (sign > 0) {\n    return '>'\n  } else {\n    return '<'\n  }\n}\n\nexport function base64decode (string) {\n  const binString = window.atob(base64unescape(string))\n  // noinspection JSCheckFunctionSignatures\n  return new TextDecoder().decode(pako.inflate(Uint8Array.from(binString, (c) => c.codePointAt(0))))\n}\n\nexport function base64encode (string) {\n  return base64escape(window.btoa(String.fromCodePoint(...pako.deflate(new TextEncoder().encode(string)))))\n}\n\nfunction base64escape (string) {\n  // https://en.wikipedia.org/wiki/Base64#URL_applications\n  return string.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '')\n}\n\nfunction base64unescape (string) {\n  return (string + '==='.slice((string.length + 3) % 4))\n    .replace(/-/g, '+').replace(/_/g, '/')\n}\n\nexport function optionally (value, func) {\n  return value === undefined ? value : func(value)\n}\n\nexport function randomIntInclusive (rand, max, min = 0) {\n  return Math.floor(rand() * (max - min + 1) + min)\n}\n\nexport function reload () {\n  location.assign(url.search)\n}\n\nexport function reverseString (str) {\n  return str.split('').reverse().join('')\n}\n\nexport function shuffle (rand, array) {\n  // https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_modern_algorithm\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(rand() * (i + 1))\n    const temp = array[i]\n    array[i] = array[j]\n    array[j] = temp\n  }\n  return array\n}\n\nexport function sortNumerically (a, b) {\n  return Number(a) - Number(b)\n}\n\n/**\n * A seeded pseudo-random number generator.\n * @see https://github.com/bryc/code/blob/master/jshash/PRNGs.md\n * @param a the seed value\n * @returns {function(): *} a function which generates static pseudo-random numbers per seed and call\n */\nexport function splitmix32 (a) {\n  return function () {\n    a |= 0\n    a = a + 0x9e3779b9 | 0\n    let t = a ^ a >>> 16\n    t = Math.imul(t, 0x21f0aaad)\n    t = t ^ t >>> 15\n    t = Math.imul(t, 0x735a2d97)\n    return ((t ^ t >>> 15) >>> 0) / 4294967296\n  }\n}\n\nexport async function writeToClipboard (string) {\n  try {\n    await navigator.clipboard.writeText(string)\n  } catch (error) {\n    console.error('Could not write to clipboard.', error.message)\n  }\n}\n","\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","import { Grid } from './grid'\nimport { EventListeners } from './eventListeners'\nimport Tippy from 'tippy.js'\nimport 'tippy.js/dist/tippy.css'\nimport { State } from './state'\nimport { getBaseUrl, getClassName, getSign, optionally, reload, url, urlParams, writeToClipboard } from './util'\nimport { Cell } from './cell'\nimport { Cache } from './cache'\nimport { Dictionary } from './dictionary'\nimport { Word } from './word'\n\nconst $expand = document.getElementById('expand')\nconst $footer = document.getElementById('footer')\nconst $hint = document.getElementById('hint')\nconst $includeProfanity = document.getElementById('include-profanity')\nconst $includeSolution = document.getElementById('include-solution')\nconst $mode = document.getElementById('mode')\nconst $new = document.getElementById('new')\nconst $path = document.getElementById('path')\nconst $reset = document.getElementById('reset')\nconst $selection = document.getElementById('selection')\nconst $share = document.getElementById('share')\nconst $statistics = document.querySelector('#statistics > ul')\nconst $status = document.getElementById('status')\nconst $swaps = document.querySelector('#swaps > ul')\nconst $undo = document.getElementById('undo')\nconst $width = document.getElementById('width')\nconst $words = document.querySelector('#words > ul')\n\nconst confirm = window.confirm\nconst crypto = window.crypto\nconst tippy = Tippy($share, { content: 'Copied!', theme: 'custom', trigger: 'manual' })\n\nexport class Game {\n  #configuration\n  #dictionary\n  #eventListeners = new EventListeners({ context: this })\n  #grid\n  #state\n\n  constructor () {\n    const overrides = [Game.Params.DrawerExpanded]\n    const initialState = Game.State.fromObject({ version: Game.State.Version })\n    this.#state = new State(Game.CacheKey, initialState, { overrides })\n\n    const state = this.#getState()\n    if (state.version < Game.State.Version) {\n      console.warn(`Ignoring stale cache with version ${state.version}. Current version: ${Game.State.Version}`)\n      this.#state.set(initialState)\n    }\n\n    this.#dictionary = new Dictionary()\n\n    const mode = this.#getMode()\n    const width = this.#getWidth()\n\n    this.#grid = new Grid(this.#dictionary, width, mode)\n    this.#configuration = this.#grid.getConfiguration()\n\n    const params = new URLSearchParams(url.search)\n    params.set(Grid.Params.Id.key, crypto.randomUUID().split('-')[0])\n\n    $new.href = `?${params.toString()}`\n    $path.href = `?${Grid.Params.Id.key}=${this.#configuration.id}`\n    $path.textContent = this.#configuration.id\n\n    this.#eventListeners.add([\n      { type: 'change', element: $includeProfanity, handler: this.#onIncludeProfanityChange },\n      { type: 'change', element: $includeSolution, handler: this.#onIncludeSolutionChange },\n      { type: 'change', element: $mode, handler: this.#onModeChange },\n      { type: 'change', element: $width, handler: this.#onWidthChange },\n      { type: 'click', element: $expand, handler: this.#onExpand },\n      { type: 'click', element: $hint, handler: this.#onHint },\n      { type: 'click', element: $reset, handler: this.reset },\n      { type: 'click', element: $share, handler: this.share },\n      { type: 'click', element: $swaps, handler: this.#deleteSwap },\n      { type: 'click', element: $undo, handler: this.#onUndo },\n      { type: 'click', element: $words, handler: this.#deleteWord },\n      { type: Grid.Events.Selection, handler: this.#updateSelection },\n      { type: Grid.Events.Update, handler: this.#onGridUpdate }\n    ])\n\n    this.#updateDrawer()\n    this.#updateModeSelector()\n    this.#updateWidthSelector()\n  }\n\n  reset () {\n    // Resolving in promise to prevent the Chrome 'Violation' warning in console\n    return Promise.resolve().then(() => {\n      if (!confirm('Are you sure you want to reset the grid?')) {\n        return\n      }\n      this.#grid.reset()\n      this.update()\n    })\n  }\n\n  async setup () {\n    // Load the base dictionary, and generate the grid from that\n    await this.#dictionary.load(Dictionary.Sources.Default)\n    this.#grid.setup()\n    this.update()\n\n    const state = this.#getState()\n\n    // Note that additional dictionary sources are not used to generate the grid. They are only used for validation.\n    const additionalSources = Array.from(new Set(\n      this.#grid.getState().getSources()\n        .filter((source) => source !== Dictionary.Names.Default)\n        .concat(state.additionalSources)\n    ))\n\n    for await (const source of additionalSources) {\n      await this.#dictionary.load(Dictionary.SourcesByName[source])\n    }\n  }\n\n  async share () {\n    const { id, mode, width } = this.#configuration\n    const size = `${width}x${width}`\n    const gameState = this.#getState()\n    const gridState = this.#grid.getState()\n    const statistics = this.#grid.getStatistics(gridState)\n\n    const content = [`Path#${id} | ${size} | ${statistics.hiddenWordsGuessed}/${statistics.hiddenWordCount}`]\n\n    if (mode === Grid.Modes.Challenge) {\n      content.push(`Score: ${statistics.score} / ${statistics.progress}%`)\n    }\n\n    let moves = ''\n    const lastMovesIndex = statistics.moves.length - 1\n    statistics.moves.forEach((move, index) => {\n      moves += move.getSymbol(mode)\n      if (index !== lastMovesIndex && (index + 1) % width === 0) {\n        moves += '\\n'\n      }\n    })\n\n    if (moves) {\n      content.push(moves)\n    }\n\n    const sources = gridState.getSources()\n    if (sources.length > 1) {\n      content.push(`Dictionary: ${sources.join(' + ')}`)\n    }\n\n    content.push(gameState.shareUrl.get(gridState, this.#configuration))\n\n    console.debug(content)\n\n    await writeToClipboard(content.join('\\n'))\n    tippy.show()\n    setTimeout(() => tippy.hide(), 1000)\n  }\n\n  update () {\n    this.#updateHint()\n    this.#updateStatus()\n    this.#updateSwaps()\n    this.#updateUndo()\n    this.#updateWords()\n  }\n\n  #deleteSwap (event) {\n    if (event.target.classList.contains(Game.ClassNames.Delete)) {\n      this.#grid.removeSwap(event.target.dataset.index)\n      this.update()\n    }\n  }\n\n  #deleteWord (event) {\n    if (event.target.classList.contains(Game.ClassNames.Delete)) {\n      this.#grid.removeWord(event.target.dataset.index)\n      this.update()\n    }\n  }\n\n  #getMode () {\n    return Grid.Params.Mode.get() ?? Grid.DefaultMode\n  }\n\n  #getState () {\n    return Game.State.fromObject(this.#state.get())\n  }\n\n  #getWidth () {\n    return optionally(Grid.Params.Width.get(), Number) ?? Grid.DefaultWidth\n  }\n\n  #onExpand () {\n    this.#state.set(Game.Params.DrawerExpanded.key, !this.#state.get(Game.Params.DrawerExpanded.key))\n    this.#updateDrawer()\n  }\n\n  #onGridUpdate () {\n    this.update()\n  }\n\n  #onHint () {\n    this.#grid.hint()\n    this.#updateHint()\n  }\n\n  async #onIncludeProfanityChange (event) {\n    const state = this.#getState()\n    if (event.target.checked) {\n      state.additionalSources = Array.from(new Set(state.additionalSources.concat([Dictionary.Names.Profanity])))\n      await this.#dictionary.load(Dictionary.Sources.Profanity)\n    } else {\n      const index = state.additionalSources.findIndex((source) => source === Dictionary.Names.Profanity)\n      state.additionalSources.splice(index, 1)\n      this.#dictionary.unload(Dictionary.Names.Profanity)\n    }\n    this.#state.set(state)\n  }\n\n  #onIncludeSolutionChange (event) {\n    const state = this.#getState()\n    state.shareUrl = state.shareUrl.copy({ solution: event.target.checked })\n    this.#state.set(state)\n  }\n\n  #onUndo () {\n    if (!$undo.classList.contains(Game.ClassNames.Disabled)) {\n      this.#grid.undo()\n    }\n  }\n\n  #onModeChange (event) {\n    Grid.Params.Mode.set(event.target.value)\n    reload()\n  }\n\n  #onWidthChange (event) {\n    Grid.Params.Width.set(event.target.value)\n    reload()\n  }\n\n  #updateDrawer () {\n    const state = this.#getState()\n    $footer.classList.toggle(Game.ClassNames.Expanded, state.drawerExpanded)\n    $expand.textContent = state.drawerExpanded ? 'expand_less' : 'expand_more'\n    $includeProfanity.checked = state.additionalSources.includes(Dictionary.Names.Profanity)\n    $includeSolution.checked = state.shareUrl.solution\n  }\n\n  #updateHint () {\n    $hint.classList.toggle(Game.ClassNames.Disabled, !this.#grid.hasHint())\n  }\n\n  #updateSelection () {\n    this.#updateUndo()\n\n    const selection = this.#grid.getSelection()\n    $selection.replaceChildren()\n    $selection.classList.remove(Game.ClassNames.WordValid)\n\n    // Ignore cells marked for swap\n    if (!selection.cells.filter((cell) => !cell.getFlags().has(Cell.Flags.Swap)).length) {\n      // Nothing to do\n      return\n    }\n\n    const $content = document.createElement('span')\n    $content.textContent = selection.content\n    $content.classList.toggle(Game.ClassNames.WordValid, selection.isValidWord)\n\n    const children = [$content]\n    if (selection.isValidWord) {\n      const $info = document.createElement('span')\n      $info.classList.add(Game.ClassNames.WordInfo)\n\n      if (this.#configuration.mode === Grid.Modes.Pathfinder) {\n        $info.textContent = getSign(selection.hiddenWordIndexes.length - selection.content.length)\n      } else {\n        const configuration = this.#grid.getConfiguration()\n        const move = new Grid.Move(Grid.Move.Types.Spell, { match: selection.match })\n        const word = new Word(configuration.width, selection.cells, move)\n        $info.textContent = word.points\n      }\n\n      children.push($info)\n    }\n\n    $selection.replaceChildren(...children)\n  }\n\n  #updateStatus () {\n    const statistics = this.#grid.getStatistics()\n    const hiddenWords = `${statistics.hiddenWordsGuessed}/${statistics.hiddenWordCount}`\n    if (this.#configuration.mode === Grid.Modes.Challenge) {\n      $status.textContent = statistics.score\n      $statistics.replaceChildren(...[\n        { name: 'Progress', value: `${statistics.progress}%` },\n        { name: 'Average Word Length', value: statistics.averageWordLength },\n        { name: 'Hidden Words Found', value: hiddenWords },\n        { name: 'Your Best Score', value: `${statistics.best} (${statistics.bestDiff})` }\n      ].map((item) => {\n        const $content = document.createElement('span')\n        $content.textContent = item.name\n        const $value = document.createElement('span')\n        $value.textContent = item.value\n        return Game.getListItem($content, $value)\n      }))\n    } else {\n      $status.textContent = hiddenWords\n    }\n  }\n\n  #updateSwaps () {\n    const swaps = this.#grid.getSwaps()\n    // noinspection JSCheckFunctionSignatures\n    $swaps.replaceChildren(...swaps.map((swap, index) => {\n      const $swap = document.createElement('span')\n      $swap.classList.add(Game.ClassNames.Swap)\n      $swap.textContent = `${swap.map((letter) => letter.toUpperCase()).join(' → ')}`\n      return Game.getListItem($swap, Game.getDeleteElement(index))\n    }))\n  }\n\n  #updateUndo () {\n    const moves = this.#grid.getMoves().filter((move) => move.type !== Grid.Move.Types.Hint)\n    const selection = this.#grid.getSelection()\n    const disabled = moves.length === 0 && selection.length === 0\n    $undo.classList.toggle(Game.ClassNames.Disabled, disabled)\n  }\n\n  #updateModeSelector () {\n    const mode = this.#getMode()\n    $mode.replaceChildren(...Object.entries(Grid.Modes).map(([key, value]) => {\n      const $option = document.createElement('option')\n      $option.textContent = key\n      $option.value = value\n      if (value === mode) {\n        $option.selected = true\n      }\n      return $option\n    }))\n  }\n\n  #updateWidthSelector () {\n    const width = this.#getWidth()\n    $width.replaceChildren(...Grid.Widths.map((value) => {\n      const $option = document.createElement('option')\n      $option.textContent = `${value}x${value}`\n      $option.value = value.toString()\n      if (value === width) {\n        $option.selected = true\n      }\n      return $option\n    }))\n  }\n\n  #updateWords () {\n    const state = this.#grid.getState()\n    const words = this.#grid.getWords(state).reverse()\n    const length = words.length\n    const isPathfinderMode = this.#configuration.mode === Grid.Modes.Pathfinder\n    $words.replaceChildren(...words.map((word, index) => {\n      const data = word.move.value\n      const $index = document.createElement('span')\n      $index.textContent = `${length - index}.`\n      const $word = document.createElement('span')\n      $word.classList.add(Game.ClassNames.Word, getClassName(Game.ClassNames.Word, 'match', data.match))\n      $word.textContent = word.content\n      const $info = document.createElement('span')\n      $info.classList.add(Game.ClassNames.WordInfo)\n      $info.textContent = isPathfinderMode\n        ? getSign(state.configuration.words[data.hiddenWordIndex].length - word.content.length)\n        : word.points\n      const $delete = isPathfinderMode ? undefined : Game.getDeleteElement(index)\n      return Game.getListItem([$index, $word, $info], $delete)\n    }))\n  }\n\n  static getDeleteElement (index) {\n    const $delete = document.createElement('span')\n    $delete.classList.add(Game.ClassNames.Delete, Game.ClassNames.Icon)\n    $delete.dataset.index = index.toString()\n    $delete.textContent = 'delete'\n    $delete.title = 'Delete'\n\n    return $delete\n  }\n\n  static getListItem ($left, $right) {\n    const $li = document.createElement('li')\n\n    const $container = document.createElement('div')\n    $container.classList.add(Game.ClassNames.Container)\n    $li.append($container)\n\n    const $containerLeft = document.createElement('div')\n    $containerLeft.classList.add(Game.ClassNames.FlexLeft)\n    $containerLeft.append(...(Array.isArray($left) ? $left : [$left]))\n    $container.append($containerLeft)\n\n    if ($right !== undefined) {\n      const $containerRight = document.createElement('div')\n      $containerRight.classList.add(Game.ClassNames.FlexRight)\n      $containerRight.append(...(Array.isArray($right) ? $right : [$right]))\n      $container.append($containerRight)\n    }\n\n    return $li\n  }\n\n  static CacheKey = 'game'\n\n  static ClassNames = Object.freeze({\n    Container: 'container',\n    Delete: 'delete',\n    Disabled: 'disabled',\n    Expanded: 'expanded',\n    FlexLeft: 'flex-left',\n    FlexRight: 'flex-right',\n    Icon: 'material-symbols-outlined',\n    Share: 'share',\n    Swap: 'swap',\n    Word: 'word',\n    WordInfo: 'word-info',\n    WordValid: 'word-valid'\n  })\n\n  static Params = Object.freeze({\n    DrawerExpanded: Cache.urlParams('drawerExpanded')\n  })\n\n  static State = class {\n    additionalSources\n    drawerExpanded\n    shareUrl\n    version\n\n    constructor (drawerExpanded, shareUrl, additionalSources, version) {\n      this.drawerExpanded = drawerExpanded ?? false\n      this.shareUrl = shareUrl ?? new Game.State.ShareUrl()\n      this.additionalSources = additionalSources ?? []\n      this.version = version ?? 0\n    }\n\n    static fromObject (obj) {\n      return new Game.State(\n        obj.drawerExpanded,\n        optionally(obj.shareUrl, Game.State.ShareUrl.fromObject),\n        obj.additionalSources,\n        obj.version\n      )\n    }\n\n    static ShareUrl = class {\n      solution\n\n      constructor (solution) {\n        this.solution = solution ?? false\n      }\n\n      copy (settings) {\n        return new Game.State.ShareUrl(settings.solution ?? this.solution)\n      }\n\n      get (state, configuration) {\n        const url = getBaseUrl()\n\n        url.searchParams.set(Grid.Params.Id.key, configuration.id)\n        url.searchParams.set(Grid.Params.Mode.key, configuration.mode)\n        url.searchParams.set(Grid.Params.Width.key, configuration.width)\n\n        if (this.solution) {\n          url.searchParams.set(Grid.Params.Solution.key, Grid.Params.Solution.encode(state.solution))\n        }\n\n        return url.toString()\n      }\n\n      static fromObject (obj) {\n        return new Game.State.ShareUrl(obj.solution)\n      }\n    }\n\n    static Version = 1\n  }\n}\n\nif (urlParams.has(Grid.Params.Solution.key)) {\n  document.body.classList.add(Game.ClassNames.Share)\n}\n","import { Cell } from './cell'\nimport { Coordinates } from './coordinates'\nimport { State } from './state'\nimport { EventListeners } from './eventListeners'\nimport { Word } from './word'\nimport { Flags } from './flag'\nimport {\n  arrayEquals,\n  arrayIncludes,\n  cyrb53,\n  getClassName,\n  history,\n  optionally, reverseString, sortNumerically,\n  url,\n  urlParams\n} from './util'\nimport { Cache } from './cache'\nimport { Dictionary } from './dictionary'\nimport { Generator } from './generator'\n\nconst $grid = document.getElementById('grid')\n\nexport class Grid {\n  #active\n  #cells = []\n  #configuration\n  #dictionary\n  #eventListeners = new EventListeners({ context: this, element: $grid })\n  #pointerIndex = -1\n  #selection = []\n  #selectionStart\n  #state\n\n  constructor (dictionary, width, mode) {\n    this.#configuration = new Grid.Configuration(Grid.getId(), width, mode)\n    this.#dictionary = dictionary\n\n    const sharedSolution = Grid.getSolution(this.#configuration.hash)\n\n    // Don't persist changes locally if a solution is provided in the URL\n    const persistence = sharedSolution === undefined\n    const initialState = new Grid.State(undefined, sharedSolution, new Grid.State.User(), Grid.State.Version)\n\n    this.#state = new State(this.#configuration.hash, initialState, { persistence })\n\n    const state = this.getState()\n    if (state.version < Grid.State.Version) {\n      console.warn(`Ignoring stale cache with version ${state.version}. Current version: ${Grid.State.Version}`)\n      this.#state.set(initialState)\n    }\n\n    if (urlParams.has('reset')) {\n      console.debug(`Resetting solution for path '${this.#configuration.id}'.`)\n      this.#resetSolution()\n      urlParams.delete('reset')\n      history.replaceState(history.state, 'reset', url)\n    }\n\n    document.body.classList.add(getClassName(Grid.Name, 'mode', this.#configuration.mode))\n    $grid.dataset.width = this.#configuration.width\n\n    this.#eventListeners.add([\n      { type: Cell.Events.Select, handler: this.#onSelect },\n      { type: 'pointerup', element: document, handler: this.#onPointerUp }\n    ])\n  }\n\n  getConfiguration () {\n    return this.#configuration\n  }\n\n  getMoves () {\n    return this.getState().solution.moves\n  }\n\n  getSelection () {\n    const cells = Array.from(this.#selection)\n    if (!cells.length) {\n      return new Grid.Selection(cells)\n    }\n\n    let pathIndexes = Grid.getIndexes(cells)\n    const lastPathCell = this.#getLastPathCell()\n    if (lastPathCell) {\n      // Make sure the selection can anchor to the existing path.\n      const selectionAnchorIndex = this.#getSelectionAnchorIndex(lastPathCell)\n      if (selectionAnchorIndex < 0) {\n        console.debug('Unable to anchor selection to existing path.')\n        pathIndexes.splice(0)\n      } else if (selectionAnchorIndex !== 0) {\n        console.debug('Anchoring selection at end.')\n        // Reverse pathIndexes to ensure they get stored in state in the proper order.\n        pathIndexes.reverse()\n      } else {\n        console.debug('Anchoring selection at beginning.')\n      }\n    }\n\n    let content = Grid.getContent(cells)\n    let isValid = false\n    if (pathIndexes.length) {\n      isValid = this.#dictionary.isValid(content)\n      if (!isValid) {\n        // Try the selection in reverse\n        const contentReversed = reverseString(content)\n        isValid = this.#dictionary.isValid(contentReversed)\n        if (isValid) {\n          // The word was spelled backwards\n          cells.reverse()\n          content = contentReversed\n        }\n      }\n    }\n\n    const state = this.getState()\n    const wordIndexes = Grid.getIndexes(cells)\n    const hiddenWordIndex = state.getHiddenWordIndex()\n    const hiddenWordIndexes = state.configuration.wordIndexes[hiddenWordIndex] ?? []\n    const revealedIndexes = wordIndexes.filter((index) => hiddenWordIndexes.includes(index))\n    const hintIndexes = revealedIndexes.filter((index) => !state.solution.hints.includes(index))\n\n    const isHiddenWord = isValid && (\n      this.#configuration.mode === Grid.Modes.Challenge ?\n        // In challenge mode, the spelled word must exist in the list of words used to generate the grid\n        state.configuration.words.includes(content)\n      : (\n        // In pathfinder mode, the content must match that of the current hidden word\n        // and the same path indexes must be used to create the word, regardless of order.\n        isValid &&\n        state.configuration.words[hiddenWordIndex] === content &&\n        arrayEquals(hiddenWordIndexes, wordIndexes, sortNumerically)\n      )\n    )\n\n    const updateIndexes = lastPathCell ? pathIndexes.concat([lastPathCell.getIndex()]) : pathIndexes\n    if (isValid && this.#configuration.mode === Grid.Modes.Pathfinder) {\n      const allHiddenWordHintIndexesUsed = hiddenWordIndexes\n        .every((index) => !state.solution.hints.includes(index) || wordIndexes.includes(index))\n      const previouslyGuessedWordsByIndex = state.solution.moves\n        .filter((move) => move.type === Grid.Move.Types.Spell && move.value.hiddenWordIndex === hiddenWordIndex)\n        .map((move) => move.value.index)\n      const previouslyGuessedWordIndexes = state.solution.words\n        .filter((word, index) => previouslyGuessedWordsByIndex.includes(index))\n      // Reject words where not all previous hint indexes have been used and duplicate guesses (by path index) for the\n      // same hidden word.\n      isValid = allHiddenWordHintIndexesUsed && !arrayIncludes(previouslyGuessedWordIndexes, wordIndexes)\n      if (isValid && isHiddenWord) {\n        // Ensure that the path matches the generated path to prevent the user from getting stuck in the case they\n        // spell a matching hidden word using the same indexes but in a different order.\n        pathIndexes = Array.from(hiddenWordIndexes)\n      }\n    }\n\n    return new Grid.Selection(\n      cells,\n      content,\n      pathIndexes,\n      hintIndexes,\n      updateIndexes,\n      wordIndexes,\n      hiddenWordIndex,\n      hiddenWordIndexes,\n      isHiddenWord,\n      isValid\n    )\n  }\n\n  getState () {\n    return Grid.State.fromObject(this.#state.get())\n  }\n\n  getStatistics (state) {\n    state ??= this.getState()\n    return new Grid.Statistics(this.#configuration, state, this.getWords(state))\n  }\n\n  getSwaps () {\n    const state = this.getState()\n    return state.solution.swaps.map((indexes) => indexes.map((index) => {\n      const cell = this.#cells[index]\n      const content = state.configuration.cells[index].content\n      const coordinates = cell.getCoordinates().toString()\n      return `${content} (${coordinates})`\n    }))\n  }\n\n  getWords (state) {\n    state ??= this.getState()\n    return state.solution.words.map((word, index) => {\n      const move = state.solution.moves\n        .find((move) => move.type === Grid.Move.Types.Spell && move.value.index === index)\n      return new Word(\n        this.#configuration.width,\n        word.map((index) => this.#cells[index]),\n        move\n      )\n    })\n  }\n\n  hasHint (state) {\n    return this.#getNextHint(state ?? this.getState()) !== undefined\n  }\n\n  hint () {\n    if (this.#configuration.mode === Grid.Modes.Challenge) {\n      // No hints in challenge mode\n      return\n    }\n\n    const state = this.getState()\n    const index = this.#getNextHint(state)\n    if (index === undefined) {\n      return\n    }\n\n    state.solution.hints.push(index)\n    state.solution.moves.push(new Grid.Move(Grid.Move.Types.Hint, index))\n\n    this.#setState(state)\n    this.#update([index])\n  }\n\n  #getNextHint (state) {\n    return state.configuration.wordIndexes[state.getHiddenWordIndex()]?.find((index) =>\n      !state.solution.hints.includes(index))\n  }\n\n  removeSwap (index) {\n    const state = this.getState()\n\n    // Remove the swap\n    const swap = state.solution.swaps.splice(index, 1)[0]\n\n    // Update moves\n    const moveIndex = state.solution.moves\n      .findIndex((move) => move.type === Grid.Move.Types.Swap && move.value === index)\n    state.solution.moves.splice(moveIndex, 1)\n\n    this.#setState(state)\n\n    // If one of the swapped cells was part of a word, remove the word, too.\n    const wordIndex = state.solution.words.findIndex((indexes) => swap.some((index) => indexes.indexOf(index) >= 0))\n    if (wordIndex >= 0) {\n      this.removeWord(wordIndex)\n    }\n\n    this.#update(swap)\n  }\n\n  removeWord (index) {\n    const state = this.getState()\n\n    // Remove the word and everything after it\n    const firstRemovedWord = state.solution.words.splice(index)[0]\n    const earliestPathIndex = state.solution.path.findIndex((index) => firstRemovedWord.indexOf(index) >= 0)\n\n    // Remove everything after and including the first matched path index.\n    const pathIndexes = state.solution.path.splice(earliestPathIndex)\n\n    // Update word validation sources\n    state.solution.sources.splice(index)\n\n    // Update moves\n    state.solution.moves = state.solution.moves.filter((move) => {\n      // Remove any spell moves including and after the removed word index\n      return !(move.type === Grid.Move.Types.Spell && move.value.index >= index)\n    })\n\n    this.#setState(state)\n\n    const lastPathCellIndex = state.solution.path[state.solution.path.length - 1]\n    if (lastPathCellIndex !== undefined) {\n      // Also update the last path item so the link can be removed.\n      pathIndexes.push(lastPathCellIndex)\n    }\n\n    this.#update(pathIndexes)\n  }\n\n  reset () {\n    this.#resetSolution()\n    this.#update(Grid.getIndexes(this.#cells))\n  }\n\n  setup () {\n    let configuration = this.#state.get(Grid.State.Keys.Configuration)\n    if (!configuration) {\n      // This grid has not been generated yet. Generate it and cache it.\n      const generator = new Generator(this.#configuration, this.#dictionary)\n      configuration = generator.generate()\n      this.#state.set(Grid.State.Keys.Configuration, configuration)\n    }\n\n    const solution = this.#state.get(Grid.State.Keys.Solution)\n    if (!solution) {\n      this.#resetSolution()\n    }\n\n    this.#cells = configuration.cells.map((state) =>\n      new Cell(this.#configuration.getCoordinates(state.index), Cell.State.fromObject(state)))\n\n    this.#update(Grid.getIndexes(this.#cells))\n\n    $grid.replaceChildren(...this.#cells.map((cell) => cell.getElement()))\n    $grid.classList.remove(Grid.ClassNames.Loading)\n  }\n\n  undo () {\n    if (this.#selection.length) {\n      // If there is an active selection, de-select it.\n      this.#deselect(this.#selection.splice(0))\n      return\n    }\n\n    const state = this.getState()\n    const moves = state.solution.moves.filter((move) => move.type !== Grid.Move.Types.Hint)\n    if (moves.length === 0) {\n      // If there are no moves, nothing to do.\n      return\n    }\n\n    const move = moves[moves.length - 1]\n    switch (move.type) {\n      case Grid.Move.Types.Spell:\n        this.removeWord(move.value.index)\n        break\n      case Grid.Move.Types.Swap:\n        this.removeSwap(move.value)\n        break\n    }\n  }\n\n  #activate (cell) {\n    this.#deactivate()\n    cell.update((state) => state.copy({ flags: state.getFlags().add(Cell.Flags.Active) }))\n    this.#active = cell\n  }\n\n  #anchorSelection (lastPathItem) {\n    const anchor = this.#selection[this.#getSelectionAnchorIndex(lastPathItem)]\n    if (anchor) {\n      // Visually anchor the selection to the end of the path.\n      const direction = lastPathItem.getDirection(anchor)\n      lastPathItem.update((state) => state.copy({ flags: state.getFlags().add(Cell.FlagsByName[direction]) }))\n    }\n  }\n\n  #deactivate () {\n    if (!this.#active) {\n      return\n    }\n\n    this.#active.update((state) => state.copy({ flags: state.getFlags().remove(Cell.Flags.Active) }))\n    this.#active = undefined\n  }\n\n  #deselect (selection) {\n    selection.forEach((cell) => cell.reset())\n    const lastPathCell = this.#getLastPathCell()\n    if (lastPathCell) {\n      this.#update([lastPathCell.getIndex()])\n    }\n    this.#dispatch(Grid.Events.Selection)\n  }\n\n  #dispatch (name, detail = null) {\n    const event = new CustomEvent(name, { detail })\n    // Ensure event is emitted after any currently processing events have been handled\n    setTimeout(() => document.dispatchEvent(event))\n  }\n\n  #getLastPathCell () {\n    const state = this.getState()\n    const path = state.solution.path\n    return this.#cells[path[path.length - 1]]\n  }\n\n  #getSelectionAnchorIndex (lastPathCell) {\n    if (this.#selection.length === 0) {\n      return\n    }\n\n    lastPathCell ??= this.#getLastPathCell()\n    if (!lastPathCell) {\n      return\n    }\n\n    // Try to anchor at the head of the selection first.\n    const indexes = [0]\n    const lastIndex = this.#selection.length - 1\n    if (lastIndex !== 0) {\n      indexes.push(lastIndex)\n    }\n\n    return indexes.find((index) => {\n      const cell = this.#selection[index]\n      return !cell.getFlags().has(Cell.Flags.Swap) && this.#isValid(lastPathCell, cell)\n    }) ?? -1\n  }\n\n  #isCrossing (source, target) {\n    // Get the neighbors that if connected would cause the path to cross\n    const [first, second] = source\n      .getCoordinates()\n      .getNeighborsCrossing(target.getCoordinates())\n      .map((neighbor) => this.#cells[this.#configuration.getIndex(neighbor.coordinates)])\n    // Check both of them to see if they are connected to the other one in any direction.\n    return first?.isConnected(second) || second?.isConnected(first) || false\n  }\n\n  #isValid (source, target) {\n    return source?.isNeighbor(target) && !this.#isCrossing(source, target)\n  }\n\n  #onPointerUp (event) {\n    this.#deactivate()\n\n    if (!this.#selectionStart) {\n      // User did not tap on a cell.\n      if (!event.target.closest('#grid') && !event.target.closest('#undo')) {\n        // User tapped outside the grid area and not on the undo button, de-select everything.\n        this.#deselect(this.#selection.splice(0))\n      }\n      return\n    }\n\n    const length = this.#selection.length\n    const count = length - this.#selectionStart.length\n    if (count > 1) {\n      // User selected multiple cells before pointerup was fired. Validate the selection.\n      this.#validate()\n    } else if (length === 2) {\n      const last = this.#selection[length - 1]\n      if (last.getFlags().has(Cell.Flags.Swap)) {\n        this.#swap(...this.#selection.splice(0))\n      }\n    }\n\n    this.#selectionStart = undefined\n  }\n\n  #onSelect (event) {\n    if (!this.#selectionStart && event.detail.event.type !== 'pointerdown') {\n      console.debug('Ignoring cell events prior to pointerdown.')\n      // Mobile sends out a 'pointerenter' event before the first 'pointerdown'.\n      // Ignore it, otherwise onSelect will get called multiple times for a single touch.\n      return\n    }\n\n    const cell = event.detail.cell\n\n    this.#activate(cell)\n\n    if (cell.getFlags().has(Cell.Flags.Validated)) {\n      // These cells cannot be selected\n      return\n    }\n\n    // User is doing a multi-select if multiple onSelect events have been fired before pointerup resets selectionStart.\n    const isMultiSelect = this.#selectionStart !== undefined\n    if (!isMultiSelect) {\n      // Save a reference to the first selection event.\n      this.#selectionStart = new Grid.SelectionStart(event, this.#selection.length)\n    } else if (this.#selection.length === 0) {\n      console.debug('SelectMultiple: Selection was cleared during multi-select. Wait for pointerup before continuing.')\n      return\n    }\n\n    const flags = []\n    const lastCell = this.#selection[this.#selection.length - 1]\n    const selectedIndex = this.#selection.findIndex((selected) => selected.equals(cell))\n\n    if (lastCell?.getFlags().has(Cell.Flags.Swap)) {\n      this.#onSwap(cell, lastCell, flags, selectedIndex, isMultiSelect)\n    } else {\n      const isNeighbor = cell.isNeighbor(lastCell)\n      const isValid = this.#isValid(lastCell, cell)\n      if (isMultiSelect) {\n        this.#onSelectMultiple(cell, lastCell, flags, selectedIndex, isValid)\n      } else {\n        this.#onSelectSingle(cell, lastCell, flags, selectedIndex, isNeighbor, isValid)\n      }\n    }\n\n    if (flags.includes(Cell.Flags.Path)) {\n      flags.push(Cell.FlagsByName[cell.getDirection(lastCell)], Cell.Flags.Selected)\n    }\n\n    const lastPathCell = this.#getLastPathCell()\n    if (lastPathCell) {\n      // Update the visual anchor of selection to path.\n      this.#update([lastPathCell.getIndex()])\n      if (this.#selection.length && !flags.includes(Cell.Flags.Swap)) {\n        this.#anchorSelection(lastPathCell)\n      }\n    }\n\n    if (flags.length) {\n      cell.update((state) => state.copy({ flags: state.getFlags().add(...flags) }))\n      this.#dispatch(Grid.Events.Selection)\n    }\n  }\n\n  #onSelectMultiple (cell, lastCell, flags, selectedIndex, isValid) {\n    if (selectedIndex >= 0) {\n      console.debug('SelectMultiple: Re-selecting a previously selected cell. De-select everything after it.')\n      this.#deselect(this.#selection.splice(selectedIndex + 1))\n    } else if (isValid) {\n      console.debug('SelectMultiple: A valid new cell has been selected.')\n      this.#selection.push(cell)\n      flags.push(Cell.Flags.Path)\n    } else {\n      console.debug('SelectMultiple: Invalid cell selected. Ignoring.')\n    }\n  }\n\n  #onSelectSingle (cell, lastCell, flags, selectedIndex, isNeighbor, isValid) {\n    if (selectedIndex >= 0) {\n      // An already selected cell was tapped.\n      if (\n        // No swaps outside of challenge mode\n        this.#configuration.mode === Grid.Modes.Challenge &&\n        this.#selection.length === 1 && !cell.getFlags().has(Cell.Flags.Swapped)) {\n        console.debug('SelectSingle: A non-swapped selected cell has been re-tapped. Mark for swap.')\n        flags.push(Cell.Flags.Swap)\n      } else {\n        const lastSelectionIndex = this.#selection.length - 1\n        if (this.#selection.length >= Word.minimumLength && selectedIndex === lastSelectionIndex) {\n          console.debug('SelectSingle: Submitting selection for validation.')\n          this.#validate()\n        } else {\n          console.debug('SelectSingle: Re-selecting a previously selected cell. De-select everything after it.')\n          this.#deselect(this.#selection.splice(selectedIndex + 1))\n        }\n      }\n    } else if (!isNeighbor) {\n      if (this.#selection.length) {\n        console.debug('SelectSingle: A non-neighboring cell has been selected. De-select everything else.')\n        this.#deselect(this.#selection.splice(0))\n      }\n      this.#selection.push(cell)\n      flags.push(Cell.Flags.Selected)\n    } else if (isValid) {\n      console.debug('SelectSingle: A valid new cell has been selected.')\n      this.#selection.push(cell)\n      flags.push(Cell.Flags.Path)\n    } else {\n      console.debug('SelectSingle: Invalid cell selected. Ignoring.')\n    }\n  }\n\n  #onSwap (cell, lastCell, flags, selectedIndex, isMultiSelect) {\n    if (isMultiSelect) {\n      console.debug('Swap: Multiple target cells selected. De-selecting everything except source cell.')\n      this.#deselect(this.#selection.splice(1))\n    } else if (\n      // User tapped a cell marked for swap or already swapped\n      cell.getFlags().has(Cell.Flags.Swap, Cell.Flags.Swapped) ||\n      // User tapped a cell with the same content as the cell marked for swap\n      cell.getContent() === lastCell.getContent()\n    ) {\n      console.debug('Swap: Invalid target cell selected. Cancelling swap.')\n      this.#deselect(this.#selection.splice(0))\n    } else if (!cell.getFlags().has(Cell.Flags.Swapped)) {\n      console.debug('Swap: Valid target cell selected. Initiating swap.')\n      flags.push(Cell.Flags.Swap)\n      this.#selection.push(cell)\n    }\n  }\n\n  #resetSolution () {\n    this.#state.update((state) => {\n      const hash = this.#configuration.hash\n      const hints = this.#configuration.mode === Grid.Modes.Pathfinder ? [state.configuration.path[0]] : []\n      state.solution = Grid.State.Solution.fromObject({ hash, hints })\n    })\n  }\n\n  #setState (state) {\n    this.#state.set(state)\n    if (urlParams.has(Grid.Params.Solution.key)) {\n      // Update solution URL parameter if present\n      Grid.Params.Solution.set(state.solution)\n    }\n  }\n\n  #swap (source, target) {\n    const state = this.getState()\n    const swap = [source.getIndex(), target.getIndex()]\n    state.solution.swaps.push(swap)\n\n    // Update moves\n    state.solution.moves.push(new Grid.Move(Grid.Move.Types.Swap, state.solution.swaps.length - 1))\n\n    this.#setState(state)\n    this.#update(swap)\n  }\n\n  /**\n   * This method is responsible for updating the state of cells belonging to the given indexes by examining the current\n   * state of the grid.\n   * @param indexes The indexes of the cells to update.\n   */\n  #update (indexes) {\n    const state = this.getState()\n    const cells = state.configuration.cells\n    const hints = state.solution.hints\n    const path = state.solution.path\n    const swaps = state.solution.swaps\n    const words = this.#configuration.mode === Grid.Modes.Pathfinder\n      // In pathfinder mode, only hidden words count\n      ? state.configuration.wordIndexes\n      // In challenge mode all spelled words count\n      : state.solution.words\n\n    const lastPathIndex = path.length - 1\n\n    indexes.forEach((index) => {\n      const cell = this.#cells[index]\n      let content = cells[index].content\n      const flags = new Flags()\n\n      // Handle cells that have a hint\n      const hintIndex = hints.indexOf(index)\n      if (hintIndex >= 0) {\n        flags.add(Cell.Flags.Hint)\n        if (hintIndex === 0) {\n          flags.add(Cell.Flags.First)\n        }\n      }\n\n      // Handle swapped cells\n      const swap = swaps.find((indexes) => indexes.includes(index))\n      if (swap) {\n        flags.add(Cell.Flags.Swapped)\n        const targetIndex = swap.indexOf(index) === 0 ? swap[1] : swap[0]\n        content = cells[targetIndex].content\n      }\n\n      // Handle cells that are part of the path\n      const pathIndex = path.indexOf(index)\n      if (pathIndex >= 0) {\n        flags.add(Cell.Flags.Path)\n\n        const nextPathIndex = path[pathIndex + 1]\n        if (nextPathIndex !== undefined) {\n          // Link current cell to next cell\n          const nextCell = this.#cells[nextPathIndex]\n          flags.add(Cell.FlagsByName[cell.getDirection(nextCell)])\n        }\n\n        if (pathIndex === 0) {\n          flags.add(Cell.Flags.First)\n        }\n\n        if (pathIndex === lastPathIndex) {\n          if (lastPathIndex !== this.#pointerIndex && this.#pointerIndex >= 0) {\n            // Remove flag from the old last path item\n            this.#cells[this.#pointerIndex].update((state) =>\n              state.copy({ flags: state.getFlags().remove(Cell.Flags.Last) }))\n          }\n\n          flags.add(Cell.Flags.Last)\n        }\n\n        // Handle cells that are part of a word\n        const word = words.find((indexes) => indexes.includes(index))\n        if (word) {\n          flags.add(Cell.Flags.Validated)\n\n          const lastWordIndex = word.length - 1\n          // If the starting path index of the word is later in the path than the ending path index of the word, the\n          // word was spelled in reverse\n          const isReversed = path.indexOf(word[0]) > path.indexOf(word[lastWordIndex])\n          const wordIndexes = (isReversed ? Array.from(word).reverse() : word)\n          const wordIndex = wordIndexes.indexOf(index)\n\n          if (arrayIncludes(state.configuration.wordIndexes, wordIndexes, sortNumerically)) {\n            // The user has spelled a hidden word using the optimal path.\n            flags.add(Cell.Flags.Revealed)\n          }\n\n          if (wordIndex === 0) {\n            flags.add(Cell.Flags.WordStart)\n          } else if (wordIndex === lastWordIndex) {\n            flags.add(Cell.Flags.WordEnd)\n          }\n        }\n      }\n\n      cell.update((state) => state.copy({ content, flags }))\n    })\n\n    this.#pointerIndex = lastPathIndex\n\n    const statistics = this.getStatistics(state)\n    if (statistics.score > state.user.highScore) {\n      state.user.highScore = statistics.score\n      this.#setState(state)\n    }\n\n    this.#dispatch(Grid.Events.Update)\n  }\n\n  /**\n   * Responsible for validating a selection of cells by index to see if the user has spelled a valid word.\n   */\n  #validate () {\n    const selection = this.getSelection()\n\n    this.#deselect(this.#selection.splice(0))\n\n    if (!selection.pathIndexes.length || !selection.isValidWord) {\n      return\n    }\n\n    const state = this.getState()\n\n    // Add the dictionary used to verify the word\n    state.solution.sources.push(this.#dictionary.getSource(selection.content))\n\n    // Add the spelled word to the list of spelled words\n    state.solution.words.push(selection.wordIndexes)\n\n    // Update moves\n    const index = state.solution.words.length - 1\n    const match = selection.match\n    const hiddenWordIndex = selection.hiddenWordIndex\n    state.solution.moves.push(new Grid.Move(Grid.Move.Types.Spell, { index, match, hiddenWordIndex }))\n\n    // Update path\n    switch (this.#configuration.mode) {\n      case Grid.Modes.Challenge: {\n        // In challenge mode, all valid words are added to the path.\n        state.solution.path.push(...selection.pathIndexes)\n        break\n      }\n      case Grid.Modes.Pathfinder: {\n        // In pathfinding mode, only hidden words can be added to the path.\n        if (selection.isHiddenWord) {\n          state.solution.path.push(...selection.pathIndexes)\n        } else if (selection.hintIndexes.length) {\n          // Add hints to any portion of the next hidden word that were revealed by the valid word.\n          state.solution.hints.push(...selection.hintIndexes)\n        }\n        break\n      }\n      default:\n        throw new Error(`Unsupported mode: ${this.#configuration.mode}.`)\n    }\n\n    this.#setState(state)\n    this.#update(selection.updateIndexes)\n  }\n\n  static getContent (cells) {\n    return cells.map((cell) => cell.getContent()).join('')\n  }\n\n  /**\n   * Get the indexes of the given cells.\n   * @param cells\n   * @returns {number[]}\n   */\n  static getIndexes (cells) {\n    return cells.map((cell) => cell.getIndex())\n  }\n\n  static getId () {\n    const id = Grid.Params.Id.get()\n    return (id === undefined || (Grid.DateRegex.test(id) && Date.parse(id) > Grid.Today)) ? Grid.DefaultId : id\n  }\n\n  static getMode () {\n    const mode = Grid.Params.Mode.get()\n    return Object.values(Grid.Modes).includes(mode) ? mode : Grid.DefaultMode\n  }\n\n  static getSolution (hash) {\n    const solution = Grid.Params.Solution.get()\n    if (solution?.hash === hash) {\n      return solution\n    }\n  }\n\n  static getWidth () {\n    const width = Number(Grid.Params.Width.get())\n    return Grid.Widths.includes(width) ? width : Grid.DefaultWidth\n  }\n\n  static Name = 'grid'\n  static ClassNames = Object.freeze({ Loading: getClassName(Grid.Name, 'loading') })\n  static DateRegex = /^\\d{4}-\\d{2}-\\d{2}$/\n  static DefaultId = (() => {\n    // The ID for the daily puzzle\n    const date = new Date()\n    const year = date.getFullYear()\n    const month = (date.getMonth() + 1).toString().padStart(2, '0')\n    const day = date.getDate().toString().padStart(2, '0')\n    return `${year}-${month}-${day}`\n  })()\n\n  static Events = Object.freeze({\n    Selection: getClassName(Grid.Name, 'selection'),\n    Update: getClassName(Grid.Name, 'update')\n  })\n\n  static Match = Object.freeze({\n    Exact: 'exact',\n    None: 'none',\n    Partial: 'partial'\n  })\n\n  static Modes = Object.freeze({\n    Challenge: 'challenge',\n    Pathfinder: 'pathfinder'\n  })\n\n  static Params = Object.freeze({\n    Id: Cache.urlParams('id'),\n    Mode: Cache.urlParams('mode'),\n    Solution: new Cache(\n      'solution',\n      urlParams.get.bind(urlParams),\n      (key, value) => {\n        urlParams.set(key, value)\n        history.pushState({ [key]: value }, '', url)\n      },\n      [Cache.Encoders.Base64, Cache.Encoders.Json]\n    ),\n    Width: Cache.urlParams('width')\n  })\n\n  static Today = Date.parse(Grid.DefaultId)\n  static Widths = Object.freeze([5, 7, 9])\n\n  static DefaultMode = Grid.Modes.Challenge\n  static DefaultWidth = Grid.Widths[0]\n\n  static SelectionStart = class {\n    event\n    length\n\n    constructor (event, length) {\n      this.event = event\n      this.length = length\n    }\n  }\n\n  static Configuration = class {\n    hash\n    id\n    maxColumn\n    maxRow\n    mode\n    seed\n    size\n    width\n\n    constructor (id, width, mode, hash) {\n      this.id = id ?? Grid.getId()\n      this.mode = mode ?? Grid.getMode()\n      this.width = width ?? Grid.getWidth()\n      this.maxColumn = this.maxRow = this.width - 1\n      this.size = this.width * this.width\n\n      // Anything that influences the outcome of the grid should be passed in here\n      this.seed = [this.mode, this.width, this.id].join(':')\n      this.hash = hash ?? cyrb53(this.seed)\n    }\n\n    getCoordinates (index) {\n      return new Coordinates(this.getRow(index), this.getColumn(index), this.width)\n    }\n\n    getColumn (index) {\n      return index % this.width\n    }\n\n    getIndex (coordinates) {\n      return (coordinates.row * this.width) + coordinates.column\n    }\n\n    getRow (index) {\n      return Math.floor(index / this.width)\n    }\n\n    isValid (coordinates) {\n      return (\n        coordinates.column >= 0 &&\n        coordinates.column <= this.maxColumn &&\n        coordinates.row >= 0 &&\n        coordinates.row <= this.maxRow\n      )\n    }\n  }\n\n  static Move = class {\n    type\n    value\n\n    constructor (type, value) {\n      this.type = type\n      this.value = value\n    }\n\n    getSymbol (mode) {\n      let symbol\n\n      switch (this.type) {\n        case Grid.Move.Types.Hint:\n          symbol = Grid.Move.Symbols.LightBulb\n          break\n        case Grid.Move.Types.Spell: {\n          symbol = Grid.Move.Symbols.CircleGreen\n          if (mode === Grid.Modes.Challenge && this.value.match === Grid.Match.Exact) {\n            symbol = Grid.Move.Symbols.CircleYellow\n          } else if (mode === Grid.Modes.Pathfinder) {\n            if (this.value.match === Grid.Match.Partial) {\n              symbol = Grid.Move.Symbols.CircleYellow\n            } else if (this.value.match === Grid.Match.None) {\n              symbol = Grid.Move.Symbols.CircleWhite\n            }\n          }\n          break\n        }\n        case Grid.Move.Types.Swap:\n          symbol = Grid.Move.Symbols.CirclePurple\n          break\n      }\n\n      return symbol\n    }\n\n    static fromObject (obj) {\n      return new Grid.Move(obj.type, obj.value)\n    }\n\n    static Types = Object.freeze({\n      Hint: 'hint',\n      Spell: 'spell',\n      Swap: 'swap'\n    })\n\n    static Symbols = Object.freeze({\n      CircleGreen: '🟢',\n      CirclePurple: '🟣',\n      CircleWhite: '⚪',\n      CircleYellow: '🟡',\n      LightBulb: '💡'\n    })\n  }\n\n  static Selection = class {\n    cells\n    content\n    hintIndexes\n    isHiddenWord\n    isValidWord\n    match\n    pathIndexes\n    hiddenWordIndex\n    hiddenWordIndexes\n    updateIndexes\n    wordIndexes\n\n    constructor (\n      cells,\n      content,\n      pathIndexes,\n      hintIndexes,\n      updateIndexes,\n      wordIndexes,\n      hiddenWordIndex,\n      hiddenWordIndexes,\n      isHiddenWord,\n      isValidWord\n    ) {\n      this.cells = cells\n      this.content = content\n      this.pathIndexes = pathIndexes ?? []\n      this.hintIndexes = hintIndexes ?? []\n      this.updateIndexes = updateIndexes ?? []\n      this.wordIndexes = wordIndexes ?? []\n      this.hiddenWordIndex = hiddenWordIndex ?? -1\n      this.hiddenWordIndexes = hiddenWordIndexes\n      this.isHiddenWord = isHiddenWord ?? false\n      this.isValidWord = isValidWord ?? false\n\n      this.match = this.isHiddenWord\n        ? Grid.Match.Exact\n        : (this.hintIndexes.length ? Grid.Match.Partial : Grid.Match.None)\n    }\n  }\n\n  static State = class {\n    configuration\n    solution\n    user\n    version\n\n    constructor (configuration, solution, user, version) {\n      this.configuration = configuration\n      this.solution = solution\n      this.user = user\n      this.version = version ?? 0\n    }\n\n    getRemainingPathIndexes () {\n      return this.configuration.path.slice(this.solution.path.length)\n    }\n\n    getHiddenWordIndex (cellIndex) {\n      // Use the index of the next cell in the configured path by default\n      cellIndex ??= this.configuration.path[this.solution.path.length]\n      return this.configuration.wordIndexes.findIndex((indexes) => indexes.includes(cellIndex))\n    }\n\n    getSources () {\n      return Array.from(new Set([Dictionary.Names.Default].concat(this.solution.sources))).sort()\n    }\n\n    static fromObject (obj) {\n      return new Grid.State(\n        optionally(obj.configuration, Grid.State.Configuration.fromObject),\n        optionally(obj.solution, Grid.State.Solution.fromObject),\n        optionally(obj.user, Grid.State.User.fromObject),\n        obj.version\n      )\n    }\n\n    static Version = 2\n\n    static Configuration = class {\n      cells\n      path\n      wordIndexes\n      words\n\n      constructor (cells, path, words, wordIndexes) {\n        this.cells = cells\n        this.path = path\n        this.words = words\n        this.wordIndexes = wordIndexes\n      }\n\n      static fromObject (obj) {\n        return new Grid.State.Configuration(obj.cells, obj.path, obj.words, obj.wordIndexes)\n      }\n    }\n\n    static Solution = class {\n      hash\n      moves\n      path\n      hints\n      sources\n      swaps\n      words\n\n      constructor (hash, path, moves, hints, swaps, words, sources) {\n        this.hash = hash\n        this.hints = hints ?? []\n        this.path = path ?? []\n        this.moves = moves ?? []\n        this.swaps = swaps ?? []\n        this.words = words ?? []\n        this.sources = sources ?? []\n      }\n\n      static fromObject (obj) {\n        return new Grid.State.Solution(\n          obj.hash,\n          obj.path,\n          optionally(obj.moves, (moves) => moves.map((obj) => Grid.Move.fromObject(obj))),\n          obj.hints,\n          obj.swaps,\n          obj.words,\n          obj.sources\n        )\n      }\n    }\n\n    static User = class {\n      highScore\n\n      constructor (highScore) {\n        this.highScore = highScore ?? 0\n      }\n\n      static fromObject (obj) {\n        return new Grid.State.User(obj.highScore)\n      }\n    }\n\n    static Keys = Object.freeze({\n      Configuration: 'configuration',\n      Solution: 'solution',\n      User: 'user'\n    })\n  }\n\n  static Statistics = class {\n    averageWordLength\n    best\n    bestDiff\n    hiddenWordCount\n    hiddenWordsGuessed\n    moves\n    progress\n    score\n    swapCount\n    wordCount\n\n    constructor (configuration, state, words) {\n      const { size } = configuration\n      const { length, points } = words.reduce(\n        (acc, word) => ({ length: acc.length + word.content.length, points: acc.points + word.points }),\n        { length: 0, points: 0 }\n      )\n\n      const score = points + (length === size ? size : 0)\n      const diff = state.user.highScore - score\n\n      this.averageWordLength = length === 0 ? 0 : (length / words.length).toPrecision(2)\n      this.best = state.user.highScore\n      this.bestDiff = diff === 0 ? '=' : (diff < 0 ? diff : `+${diff}`)\n      this.hiddenWordCount = state.configuration.words.length\n      this.hiddenWordsGuessed = state.configuration.words\n        .filter((content) => words.some((word) => word.content === content)).length\n      this.moves = state.solution.moves\n      this.progress = Math.trunc((state.solution.path.length / size) * 100)\n      this.score = score\n      this.swapCount = state.solution.swaps.length\n      this.wordCount = words.length\n    }\n  }\n}\n\nconst $gridSizeMultipliers = document.getElementById('grid-size-multipliers')\n\nGrid.Widths.forEach((width) => {\n  const $li = document.createElement('li')\n  $li.textContent = `${width}x${width} = ${Word.widthMultiplier(width)}`\n  $gridSizeMultipliers.append($li)\n})\n","import { Directions } from './coordinates'\nimport { getClassName } from './util'\nimport { Flag, Flags } from './flag'\nimport { EventListeners } from './eventListeners'\n\nconst $grid = document.getElementById('grid')\n\nexport class Cell {\n  #$content = document.createElement('span')\n  #$element = document.createElement('div')\n\n  #coordinates\n  #eventListeners = new EventListeners({ context: this, element: this.#$element })\n  #state\n\n  constructor (coordinates, state) {\n    this.#coordinates = coordinates\n    this.#state = state\n\n    this.#eventListeners.add([\n      { type: 'pointerdown', handler: this.#onSelect },\n      { type: 'pointerenter', handler: this.#onSelect }\n    ])\n\n    this.#$content.className = 'content'\n\n    const $background = document.createElement('div')\n    $background.classList.add('background')\n    $background.append(this.#$content)\n\n    this.#$element.append($background)\n\n    this.update()\n  }\n\n  equals (other) {\n    return this.getIndex() === other.getIndex()\n  }\n\n  getContent () {\n    return this.#state.content\n  }\n\n  getCoordinates () {\n    return this.#coordinates\n  }\n\n  getDirection (other) {\n    return this.getCoordinates().getDirection(other.getCoordinates())\n  }\n\n  getElement () {\n    return this.#$element\n  }\n\n  getFlags () {\n    return this.#state.getFlags()\n  }\n\n  getIndex () {\n    return this.#state.index\n  }\n\n  isConnected (other) {\n    return this.getFlags().has(Cell.FlagsByName[this.getDirection(other)])\n  }\n\n  isNeighbor (other) {\n    return this.getCoordinates().isNeighbor(other?.getCoordinates())\n  }\n\n  reset () {\n    this.update((state) => {\n      const flags = new Flags()\n      const existing = state.getFlags()\n      Cell.StickyFlags.filter((flag) => existing.has(flag)).forEach((flag) => flags.add(flag))\n      return state.copy({ flags })\n    })\n  }\n\n  toString () {\n    return `[${Cell.Name}:${this.getCoordinates.toString()}]`\n  }\n\n  update (state) {\n    if (state !== undefined) {\n      if (typeof state === 'function') {\n        state = state(this.#state)\n      }\n      if (!(state instanceof Cell.State)) {\n        throw new Error('Cannot update cell state: value given is not of type Cell.State')\n      }\n      this.#state = state\n    }\n\n    this.#$element.className = Cell.Name\n    this.#$element.dataset.index = this.getIndex()\n\n    const flags = this.getFlags()\n    const activeFlags = Object.values(Cell.Flags).filter((flag) => flags.has(flag))\n    activeFlags.forEach((flag) => this.#$element.classList.add(getClassName(Cell.Name, flag.name)))\n\n    this.#$content.textContent = this.#state.content\n\n    return this.#state\n  }\n\n  #onSelect (event) {\n    if (event.type === 'pointerdown') {\n      // Release pointer capture on target so other cells can receive events.\n      event.target.releasePointerCapture(event.pointerId)\n    }\n\n    if (event.buttons > 0) {\n      // User has clicked or touched the cell\n      const detail = { cell: this, event }\n      setTimeout(() => $grid.dispatchEvent(new CustomEvent(Cell.Events.Select, { detail })))\n    }\n  }\n\n  static Events = Object.freeze({ Select: 'cell-select' })\n\n  static Flags = Object.freeze({\n    Active: new Flag('active'),\n    DirectionEast: new Flag(Directions.East),\n    DirectionNorth: new Flag(Directions.North),\n    DirectionNorthEast: new Flag(Directions.NorthEast),\n    DirectionNorthWest: new Flag(Directions.NorthWest),\n    DirectionSouth: new Flag(Directions.South),\n    DirectionSouthEast: new Flag(Directions.SouthEast),\n    DirectionSouthWest: new Flag(Directions.SouthWest),\n    DirectionWest: new Flag(Directions.West),\n    First: new Flag('first'),\n    Hint: new Flag('hint'),\n    Last: new Flag('last'),\n    Path: new Flag('path'),\n    Revealed: new Flag('revealed'),\n    Selected: new Flag('selected'),\n    Swap: new Flag('swap'),\n    Swapped: new Flag('swapped'),\n    Validated: new Flag('validated'),\n    WordEnd: new Flag('word-end'),\n    WordStart: new Flag('word-start')\n  })\n\n  static FlagsByName = Object.fromEntries(Object.values(Cell.Flags).map((flag) => [flag.name, flag]))\n\n  static StickyFlags = Object.freeze([Cell.Flags.Hint, Cell.Flags.Swapped])\n\n  static Name = 'cell'\n\n  static State = class {\n    index\n    content\n    flags\n\n    #flags\n\n    constructor (index, content, flags = 0) {\n      this.index = index\n      this.content = content\n      this.flags = (flags instanceof Flags) ? flags.get() : flags\n    }\n\n    copy (settings) {\n      return new Cell.State(\n        settings.index ?? this.index,\n        settings.content ?? this.content,\n        settings.flags ?? this.flags\n      )\n    }\n\n    getFlags () {\n      return this.#flags ?? (this.#flags = new Flags(this.flags))\n    }\n\n    static fromObject (obj) {\n      return new Cell.State(obj.index, obj.content, obj.flags)\n    }\n  }\n}\n","import { getClassName } from './util'\n\nconst direction = 'direction'\nconst east = 'east'\nconst north = 'north'\nconst south = 'south'\nconst west = 'west'\n\nexport const Directions = Object.freeze({\n  East: getClassName(direction, east),\n  North: getClassName(direction, north),\n  NorthEast: getClassName(direction, north, east),\n  NorthWest: getClassName(direction, north, west),\n  South: getClassName(direction, south),\n  SouthEast: getClassName(direction, south, east),\n  SouthWest: getClassName(direction, south, west),\n  West: getClassName(direction, west)\n})\n\nconst DiagonalDirections = Object.freeze([\n  Directions.NorthEast,\n  Directions.NorthWest,\n  Directions.SouthEast,\n  Directions.SouthWest\n])\n\nexport class Coordinates {\n  column\n  id\n  row\n\n  #neighbors\n\n  constructor (row, column) {\n    this.id = [row, column].join(',')\n    this.row = Number(row)\n    this.column = Number(column)\n  }\n\n  add (other) {\n    return new Coordinates(this.row + other.row, this.column + other.column)\n  }\n\n  equals (other) {\n    return this.id === other?.id\n  }\n\n  getDirection (other) {\n    return this.getNeighbors().find((neighbor) => neighbor.coordinates.equals(other))?.direction\n  }\n\n  getNeighbors () {\n    if (!this.#neighbors) {\n      this.#neighbors = Coordinates.getNeighbors(this)\n    }\n    return this.#neighbors\n  }\n\n  getNeighborsCrossing (other) {\n    const crossing = Coordinates.Crossings[this.getDirection(other)] ?? []\n    return this.getNeighbors().filter((neighbor) => crossing.includes(neighbor.direction))\n  }\n\n  isNeighbor (other) {\n    return this.getNeighbors().some((neighbor) => neighbor.coordinates.equals(other))\n  }\n\n  toString () {\n    return this.id\n  }\n\n  static getNeighbors (coordinates) {\n    return Coordinates.Neighbors\n      .map((neighbor) => new Coordinates.Neighbor(coordinates.add(neighbor.coordinates), neighbor.direction))\n  }\n\n  static Crossings = Object.freeze({\n    [Directions.NorthEast]: [Directions.North, Directions.East],\n    [Directions.NorthWest]: [Directions.North, Directions.West],\n    [Directions.SouthEast]: [Directions.South, Directions.East],\n    [Directions.SouthWest]: [Directions.South, Directions.West]\n  })\n\n  static Neighbor = class {\n    coordinates\n    direction\n    isDirectionDiagonal\n\n    constructor (coordinates, direction) {\n      this.coordinates = coordinates\n      this.direction = direction\n      this.isDirectionDiagonal = DiagonalDirections.includes(direction)\n    }\n  }\n\n  static Neighbors = Object.freeze([\n    new Coordinates.Neighbor(new Coordinates(0, 1), Directions.East),\n    new Coordinates.Neighbor(new Coordinates(-1, 0), Directions.North),\n    new Coordinates.Neighbor(new Coordinates(-1, 1), Directions.NorthEast),\n    new Coordinates.Neighbor(new Coordinates(-1, -1), Directions.NorthWest),\n    new Coordinates.Neighbor(new Coordinates(1, 0), Directions.South),\n    new Coordinates.Neighbor(new Coordinates(1, 1), Directions.SouthEast),\n    new Coordinates.Neighbor(new Coordinates(1, -1), Directions.SouthWest),\n    new Coordinates.Neighbor(new Coordinates(0, -1), Directions.West)\n  ])\n}\n","let nextValue = 0\n\nexport class Flag {\n  name\n  value\n\n  constructor (name) {\n    this.name = name\n    this.value = 1 << nextValue++\n  }\n}\n\nexport class Flags {\n  #value\n\n  constructor (...flags) {\n    this.set(...flags)\n  }\n\n  add (...flags) {\n    flags.forEach((flag) => { this.#value |= flag.value })\n    return this\n  }\n\n  get () {\n    return this.#value\n  }\n\n  has (...flags) {\n    return flags.some((flag) => (this.#value & flag.value) > 0)\n  }\n\n  remove (...flags) {\n    flags.forEach((flag) => { this.#value &= ~flag.value })\n    return this\n  }\n\n  set (...flags) {\n    this.#value = 0\n    flags.forEach((flag) => {\n      if (typeof flag === 'number') {\n        this.#value = flag\n      } else if (flag instanceof Flags) {\n        this.#value = flag.get()\n      } else if (flag instanceof Flag) {\n        this.add(flag)\n      }\n    })\n    return this\n  }\n\n  toString (flags) {\n    return flags.flatMap((flag) => this.has(flag) ? [flag.name] : []).join(',')\n  }\n}\n","export class EventListeners {\n  #events = []\n  #options = {\n    context: undefined,\n    element: document\n  }\n\n  constructor (options = {}, events = []) {\n    this.#options = Object.assign(this.#options, options)\n    this.add(events)\n  }\n\n  add (options = {}, events = []) {\n    // Allow omission of options\n    if (Array.isArray(options)) {\n      events = options\n      options = {}\n    }\n\n    if (events.length === 0) {\n      return\n    }\n\n    this.#events = this.#events.concat(events.map((event) => {\n      event = Object.assign({}, this.#options, options, event)\n      if (!event.type) {\n        throw new Error('Event type is required')\n      } else if (!Array.isArray(event.type)) {\n        event.type = [event.type]\n      }\n      if (event.context) {\n        if (!Array.isArray(event.context)) {\n          event.context = [event.context]\n        }\n        event.handler = event.handler.bind(...event.context)\n      }\n      event.type.forEach((type) => event.element.addEventListener(type, event.handler, event.options))\n      return event\n    }))\n  }\n\n  remove () {\n    this.#events.forEach((event) =>\n      event.type.forEach((type) => event.element.removeEventListener(type, event.handler))\n    )\n    this.#events = []\n  }\n}\n","import { Cache } from './cache'\n\nexport class State {\n  #cache\n  #persistence\n  #value\n\n  constructor (key, defaultValue, options) {\n    options = Object.assign({ encoding: [Cache.Encoders.Json], overrides: [], persistence: true }, options)\n    this.#cache = Cache.localStorage(key, options.encoding)\n    this.#persistence = options.persistence !== false\n    this.#value = structuredClone(defaultValue)\n\n    if (this.#persistence) {\n      try {\n        const value = this.#cache.get()\n        if (value !== undefined) {\n          console.debug(`Found local cache for key '${key}'.`, value)\n          this.set(value)\n        }\n      } catch (e) {\n        console.error(`Could not load cache for key '${key}': ${e.message}`)\n      }\n    }\n\n    const overrides = options.overrides ?? []\n    overrides.forEach((cache) => {\n      try {\n        const value = cache.get()\n        if (value !== undefined) {\n          console.debug(`Overriding local cache at key '${cache.key}'.`, value)\n          this.set(cache.key, value)\n        }\n      } catch (e) {\n        console.error(`Could not override local cache at key '${cache.key}': ${e.message}`)\n      }\n    })\n  }\n\n  get (key) {\n    return structuredClone(key === undefined ? this.#value : this.#value[key])\n  }\n\n  set (key, value) {\n    if (arguments.length === 1) {\n      value = key\n      key = this.#cache.key\n    }\n\n    if (value === undefined) {\n      return\n    }\n\n    const isCacheKey = key === this.#cache.key\n\n    value = structuredClone(value)\n    if (isCacheKey) {\n      this.#value = value\n    } else {\n      this.#value[key] = value\n    }\n\n    if (this.#persistence) {\n      this.#cache.set(this.#value)\n    }\n\n    return this.get()\n  }\n\n  update (updater) {\n    const state = this.get()\n    return this.set(updater(state) ?? state)\n  }\n}\n","import { base64decode, base64encode, localStorage, urlParams } from './util'\n\nexport class Cache {\n  encoding\n  getter\n  key\n  setter\n\n  constructor (key, getter, setter, encoding = []) {\n    this.key = key\n    this.getter = getter\n    this.setter = setter\n    this.encoding = encoding\n  }\n\n  copy (settings) {\n    return new Cache(\n      settings.key ?? this.key,\n      settings.getter ?? this.getter,\n      settings.setter ?? this.setter,\n      settings.encoding ?? this.encoding\n    )\n  }\n\n  decode (value) {\n    if (value === null || value === undefined) {\n      return\n    }\n\n    if (this.encoding.includes(Cache.Encoders.Base64)) {\n      value = base64decode(value)\n    }\n\n    if (this.encoding.includes(Cache.Encoders.Json)) {\n      value = JSON.parse(value)\n    }\n\n    return value\n  }\n\n  encode (value) {\n    if (value === null || value === undefined) {\n      return\n    }\n\n    if (this.encoding.includes(Cache.Encoders.Json)) {\n      value = JSON.stringify(value)\n    }\n\n    if (this.encoding.includes(Cache.Encoders.Base64)) {\n      value = base64encode(value)\n    }\n\n    return value\n  }\n\n  get () {\n    return this.decode(this.getter(this.key))\n  }\n\n  set (value) {\n    return this.setter(this.key, this.encode(value))\n  }\n\n  static localStorage (key, encoding) {\n    return new Cache(key, localStorage.getItem.bind(localStorage), localStorage.setItem.bind(localStorage), encoding)\n  }\n\n  static urlParams (key, encoding) {\n    return new Cache(key, urlParams.get.bind(urlParams), urlParams.set.bind(urlParams), encoding)\n  }\n\n  static Encoders = Object.freeze({\n    Base64: 'base64',\n    Json: 'json'\n  })\n}\n","import { lettersByCharacter } from './letter'\nimport { Cell } from './cell'\nimport { Grid } from './grid'\n\nexport class Word {\n  content\n  indexes = []\n  move\n  points\n\n  constructor (width, cells, move) {\n    const content = []\n    const pointScoringLetters = []\n    cells.forEach((cell) => {\n      const character = cell.getContent()\n      content.push(character)\n      const letter = lettersByCharacter[character]\n      if (!cell.getFlags().has(Cell.Flags.Swapped) || move.value.match === Grid.Match.Exact) {\n        // Points are only scored for letters that are not swapped, unless the word exactly matches a secret word.\n        pointScoringLetters.push(letter)\n      }\n      this.indexes.push(cell.getIndex())\n    })\n\n    this.content = content.join('')\n    this.move = move\n\n    const lengthMultiplier = Math.floor(pointScoringLetters.length / Word.widthMultiplier(width))\n    this.points = pointScoringLetters.reduce((points, letter) => points + letter.points, 0) * lengthMultiplier\n  }\n\n  static widthMultiplier (width) {\n    return Math.floor(width / 2)\n  }\n\n  static minimumLength = 3\n}\n","export class Letter {\n  character\n  frequency\n  points\n  weight\n\n  constructor (character) {\n    this.character = character\n    this.frequency = Letter.frequencies[character]\n\n    // Assign points to the letter based on which tier it falls into. Every letter is worth at least one point and\n    // will gain an additional point for each cumulative tier it is in.\n    this.points = Letter.pointTiers.reduce((points, tier) => points + (this.frequency < tier ? 1 : 0), 1)\n\n    // Calculate the weight of the letter based on the cumulative frequency of this letter and all those before it.\n    // Weight is on a sliding scale between 0 and 1.\n    const characters = Letter.characters.slice(0, Letter.characters.indexOf(character) + 1)\n    this.weight = characters.reduce((weight, character) => weight + Letter.frequencies[character], 0)\n  }\n\n  /**\n   * Stores letters by their frequency of usage. The values must add up to 1.\n   * @see https://en.wikipedia.org/wiki/Letter_frequency#Relative_frequencies_of_letters_in_the_English_language\n   * @type {Object.<string, number>}\n   */\n  static frequencies = Object.freeze({\n    a: 0.08167,\n    b: 0.01492,\n    c: 0.02782,\n    d: 0.04253,\n    e: 0.12702,\n    f: 0.02228,\n    g: 0.02015,\n    h: 0.06094,\n    i: 0.06966,\n    j: 0.00153,\n    k: 0.00772,\n    l: 0.04025,\n    m: 0.02406,\n    n: 0.06749,\n    o: 0.07507,\n    p: 0.01929,\n    q: 0.00095,\n    r: 0.05987,\n    s: 0.06327,\n    t: 0.09056,\n    u: 0.02758,\n    v: 0.00978,\n    w: 0.02360,\n    x: 0.00150,\n    y: 0.01974,\n    z: 0.00074\n  })\n\n  static characters = Object.freeze(Object.keys(Letter.frequencies))\n\n  /**\n   * Defines point tiers based on letter frequency percentage.\n   * @type {number[]} Frequency tiers.\n   */\n  static pointTiers = [0.1, 0.5, 1, 4, 8].map((n) => n / 100)\n}\n\nexport const lettersByCharacter = Object.fromEntries(Letter.characters.map((character) => [\n  character,\n  new Letter(character)\n]))\n\nexport const letters = Object.values(lettersByCharacter)\n\nconst $letterPoints = document.getElementById('letter-points')\n\nconst letterPointBuckets = {}\nletters.forEach((letter) =>\n  (letterPointBuckets[letter.points] ?? (letterPointBuckets[letter.points] = [])).push(letter))\n\nfor (const points in letterPointBuckets) {\n  const $li = document.createElement('li')\n  const $points = document.createElement('span')\n  $points.classList.add('points')\n  $points.textContent = `${points} Point${points > 1 ? 's' : ''}:`\n  const $letters = document.createElement('span')\n  $letters.classList.add('letters')\n  $letters.textContent = letterPointBuckets[points].map((letter) => letter.character).join(', ')\n  $li.append($points, $letters)\n  $letterPoints.append($li)\n}\n","import { shuffle } from './util'\nimport { Word } from './word'\n\nexport class Dictionary {\n  sources = {}\n  words = []\n\n  async load (source) {\n    if (this.sources[source.name]) {\n      console.debug(`Dictionary '${source.name}' has already been loaded.`)\n      return\n    }\n\n    console.debug(`Loading dictionary '${source.name}' from URL: '${source.url}'`)\n    try {\n      // Always use cached copy if it exists\n      const response = await fetch(source.url, { cache: 'force-cache' })\n      const text = await response.text()\n      const startIndex = this.words.length\n      this.words = Array.from(\n        new Set(this.words.concat(text.split('\\n').filter((word) => word.length >= Word.minimumLength)))\n      )\n      const range = new Dictionary.Range(startIndex, this.words.length - 1)\n      this.sources[source.name] = source.withRange(range)\n      console.debug(`Words loaded. New word count: ${this.words.length}`)\n    } catch (e) {\n      console.error(`Could not load words for dictionary '${source.name}' from URL '${source.url}'`, e.message)\n    }\n  }\n\n  /**\n   * Gets random words from the words dictionary until the length is met.\n   * @param rand A PRNG used to choose indexes from the set of words.\n   * @param length The exact total length of the picked words.\n   * @param maximumWordLength Optional maximum length for a picked word.\n   * @returns {*[]|*} An array of words.\n   */\n  getWords (rand, length, maximumWordLength) {\n    let availableWords = Array.from(this.words)\n    let count = 0\n\n    if (maximumWordLength) {\n      availableWords = availableWords.filter((word) => word.length <= maximumWordLength)\n    }\n\n    console.debug(`getWords: ${length} characters with maximum word length of ${maximumWordLength}.`)\n\n    const result = []\n    function next () {\n      let maximumWordLength = length - count - Word.minimumLength\n      if (maximumWordLength >= Word.minimumLength) {\n        availableWords = availableWords.filter((word) => word.length <= maximumWordLength)\n      } else {\n        maximumWordLength = maximumWordLength + Word.minimumLength\n        availableWords = availableWords.filter((word) => word.length === maximumWordLength)\n      }\n\n      console.debug(\n        `getWords ${result.length}: ` +\n        `count = ${count}/${length}, ` +\n        `maximumWordLength = ${maximumWordLength}, ` +\n        `availableWords = ${availableWords.length}`\n      )\n\n      const nextWordIndex = Math.floor(rand() * availableWords.length)\n      const nextWord = availableWords[nextWordIndex]\n      availableWords.splice(nextWordIndex, 1)\n\n      console.debug(`getWords picked word '${nextWord}' at index ${nextWordIndex}.`)\n\n      result.push(nextWord)\n      count += nextWord.length\n\n      if (count === length) {\n        // Shuffle the results, since the algorithm is biased towards putting the shortest word last.\n        shuffle(rand, result)\n        console.debug(`getWords result: ${result.join(', ')}`)\n        return result\n      }\n\n      return next()\n    }\n\n    return next()\n  }\n\n  getSource (word) {\n    const index = this.words.indexOf(word)\n    if (index < 0) {\n      return\n    }\n\n    for (const name in this.sources) {\n      if (this.sources[name]?.range.contains(index)) {\n        return name\n      }\n    }\n  }\n\n  isValid (word) {\n    return word.length >= Word.minimumLength && this.words.includes(word)\n  }\n\n  unload (name) {\n    const source = this.sources[name]\n    if (!source) {\n      console.warn(`Dictionary '${name}' has not been loaded.`)\n      return\n    }\n\n    console.debug(`Unloading dictionary '${source.name}'. Current word count: ${this.words.length}`)\n    source.range.extract(this.words)\n    delete this.sources[source.name]\n\n    // Update any sources after this one\n    for (const name in this.sources) {\n      const other = this.sources[name]\n      if (other.range.startIndex > source.range.startIndex) {\n        const range = other.range.offset(-source.range.count)\n        console.debug(\n          `Updating range for dictionary '${other.name}' from (${other.range.toString()}) to (${range.toString()}).`)\n        this.sources[name] = other.withRange(range)\n      }\n    }\n\n    console.debug(`Words unloaded. New word count: ${this.words.length}`)\n  }\n\n  static Range = class {\n    endIndex\n    count\n    startIndex\n\n    constructor (startIndex, endIndex) {\n      this.startIndex = startIndex\n      this.endIndex = endIndex\n      this.count = (endIndex - startIndex) + 1\n    }\n\n    contains (index) {\n      return index >= this.startIndex && index <= this.endIndex\n    }\n\n    extract (words) {\n      words.splice(this.startIndex, this.count)\n    }\n\n    offset (count) {\n      return new Dictionary.Range(this.startIndex + count, this.endIndex + count)\n    }\n\n    toString () {\n      return [this.startIndex, this.endIndex].join(',')\n    }\n  }\n\n  static Source = class {\n    name\n    range\n    url\n\n    constructor (name, url, range) {\n      this.name = name\n      this.url = url\n      this.range = range\n    }\n\n    withRange (range) {\n      return new Dictionary.Source(this.name, this.url, range)\n    }\n  }\n\n  static BaseUrl = 'https://raw.githubusercontent.com/kflorence/word-list/'\n\n  static Names = Object.freeze({\n    Default: 'default',\n    Profanity: 'profanity'\n  })\n\n  static Sources = Object.freeze({\n    Default: new Dictionary.Source(\n      Dictionary.Names.Default,\n      `${Dictionary.BaseUrl}/d00c2d094a4a4c68da1722eec3e83cd5078af771/words.txt`\n    ),\n    Profanity: new Dictionary.Source(\n      Dictionary.Names.Profanity,\n      `${Dictionary.BaseUrl}/d00c2d094a4a4c68da1722eec3e83cd5078af771/words-profanity.txt`\n    )\n  })\n\n  static SourcesByName = Object.freeze(\n    Object.fromEntries(\n      Object.entries(Dictionary.Names).map(([key, name]) => [name, Dictionary.Sources[key]])))\n}\n","import { getIndexesUnique, randomIntInclusive, reverseString, splitmix32 } from './util'\nimport { Grid } from './grid'\nimport { Cell } from './cell'\n\nexport class Generator {\n  characters\n  configuration\n  dictionary\n  rand\n  wordBoundaries\n  words\n\n  #invalidSteps = {}\n  #maxTries\n  #path = []\n  #steps\n  #tries = 0\n  #restartThreshold\n\n  constructor (configuration, dictionary) {\n    this.rand = splitmix32(configuration.hash)\n    this.words = dictionary.getWords(\n      this.rand,\n      configuration.size,\n      Math.ceil(configuration.width + (configuration.width / 2))\n    )\n\n    const words = Array.from(this.words)\n    const characters = words.reduce((characters, word) => characters.concat(word.split('')), [])\n\n    if (configuration.mode === Grid.Modes.Challenge) {\n      // Randomly reverse up to half of the words\n      const reverseCount = randomIntInclusive(this.rand, Math.floor(words.length / 2))\n      console.debug(`Reversing ${reverseCount} words.`)\n      getIndexesUnique(this.rand, words, reverseCount)\n        .forEach((index) => { words[index] = reverseString(words[index]) })\n\n      // Randomly swap up to 1/8 of characters\n      const swapCount = randomIntInclusive(this.rand, Math.floor(characters.length / 8)) * 2\n      console.debug(`Swapping ${swapCount} characters.`)\n      const swapIndexes = getIndexesUnique(this.rand, characters, swapCount)\n      while (swapIndexes.length) {\n        const [sourceIndex] = swapIndexes.splice(0, 1)\n        const [targetIndex] = swapIndexes.splice(swapIndexes.length - 1, 1)\n        console.debug(\n          `Swapping ${sourceIndex} (${characters[sourceIndex]}) with ${targetIndex} (${characters[targetIndex]})`)\n        const source = characters[sourceIndex]\n        characters[sourceIndex] = characters[targetIndex]\n        characters[targetIndex] = source\n      }\n    }\n\n    this.characters = characters\n    this.configuration = configuration\n    this.dictionary = dictionary\n    this.wordBoundaries = Generator.getWordBoundaries(this.words)\n\n    this.#steps = new Array(configuration.size)\n    this.#restartThreshold = configuration.size * configuration.width\n    this.#maxTries = this.#restartThreshold * configuration.size\n  }\n\n  /**\n   * Generate grid state configuration.\n   * @returns {Grid.State.Configuration}\n   */\n  generate () {\n    while (this.#path.length < this.configuration.size) {\n      this.#step()\n    }\n\n    const cells = this.#steps.map((step) => step.state)\n    const path = this.#path.map((step) => step.index)\n    const wordIndexes = this.wordBoundaries.map((boundary) => boundary.map((index) => path[index]))\n\n    console.debug('Done.', path)\n\n    return new Grid.State.Configuration(cells, path, this.words, wordIndexes)\n  }\n\n  #getAvailableCellIndexes () {\n    // Return an array of all indexes that don't contain a value\n    return [...this.#steps].flatMap((v, i) => (v === undefined ? [i] : []))\n  }\n\n  #getConnectableIndexes (pool) {\n    const connectable = []\n    const queue = []\n    const visited = {}\n\n    function dequeue () {\n      const index = queue.pop()\n\n      connectable.push(index)\n\n      // Remove this index from the pool\n      pool.splice(pool.indexOf(index), 1)\n\n      return index\n    }\n\n    function enqueue (index) {\n      visited[index] = true\n      queue.push(index)\n    }\n\n    // Start processing from the end\n    enqueue(pool[pool.length - 1])\n\n    while (queue.length > 0) {\n      const index = dequeue()\n      const coordinates = this.configuration.getCoordinates(index)\n      const validIndexes = pool.filter((index) => !visited[index])\n      if (validIndexes.length) {\n        // Enqueue all valid neighbors\n        this.#getNeighbors(coordinates, validIndexes)\n          .forEach((neighbor) => enqueue(this.configuration.getIndex(neighbor.coordinates)))\n      }\n    }\n\n    return connectable.sort((a, b) => a - b)\n  }\n\n  #getConnectableGroups (indexes) {\n    const groups = []\n    const pool = Array.from(indexes)\n\n    while (pool.length > 0) {\n      groups.push(this.#getConnectableIndexes(pool))\n    }\n\n    return groups\n  }\n\n  #getNeighbors (coordinates, validIndexes) {\n    if (!validIndexes.length) {\n      return []\n    }\n\n    return coordinates.getNeighbors().filter((neighbor) => {\n      if (!this.configuration.isValid(neighbor.coordinates)) {\n        return false\n      }\n\n      const index = this.configuration.getIndex(neighbor.coordinates)\n      if (validIndexes && !validIndexes.includes(index)) {\n        return false\n      }\n\n      if (neighbor.isDirectionDiagonal) {\n        // console.log('neighbor is directional', neighbor)\n        const [source, target] = neighbor.coordinates\n          .getNeighborsCrossing(coordinates)\n          .map((neighbor) => {\n            const index = this.configuration.getIndex(neighbor.coordinates)\n            return this.#steps[index]\n          })\n        // console.log(source, target, source?.isConnected(target))\n        if (source?.isConnected(target)) {\n          // Eliminate neighbors that cannot be reached due to crossing paths\n          return false\n        }\n      }\n\n      return true\n    })\n  }\n\n  #step () {\n    this.#tries++\n\n    const steps = this.#path.length\n    const stepsRemaining = this.configuration.size - steps\n\n    console.debug(`Steps remaining: ${stepsRemaining}. Total tries: ${this.#tries}`)\n\n    if (this.#tries > this.#maxTries) {\n      // Shouldn't happen, but break the loop if it gets stuck for some reason.\n      throw new Error(`Too many tries: ${this.#tries}. Stopping.`)\n    } else if (this.#tries % this.#restartThreshold === 0) {\n      // Sometimes a random path causes too many choices. To speed things up, restart every X number of tries.\n      console.debug('Exhausted tries on current path. Starting over.')\n      this.#restart()\n    }\n\n    const availableCellIndexes = this.#getAvailableCellIndexes()\n    const lastStep = this.#path[steps - 1]\n\n    if (!lastStep) {\n      // First step\n      const index = randomIntInclusive(this.rand, availableCellIndexes.length - 1)\n      this.#addStep(availableCellIndexes[index])\n      return\n    }\n\n    // Filter out any steps we have already determined to be invalid from this point.\n    const validStepIndexes = availableCellIndexes.filter((index) => !this.#invalidSteps[Step.key(lastStep.key, index)])\n\n    // The minimum group size after picking the next step\n    const minGroupSize = stepsRemaining - 1\n    const validNeighbors = this.#getNeighbors(lastStep.coordinates, validStepIndexes)\n      .filter((neighbor) => {\n        const index = this.configuration.getIndex(neighbor.coordinates)\n        // Assess groupability of available indexes assuming this neighbor is picked, and so removed from availability.\n        const groupableIndexes = availableCellIndexes.filter((available) => available !== index)\n        const groups = this.#getConnectableGroups(groupableIndexes)\n\n        console.debug('Found groups', groups, 'for neighbor', neighbor, 'with available indexes', groupableIndexes)\n\n        if (groups.length > 1) {\n          console.debug('Excluding neighbor: multiple groups', neighbor)\n          return false\n        } else if (groups.length === 1 && groups[0].length < minGroupSize) {\n          // Picking this neighbor would result in a group that is too small for the number of remaining steps.\n          console.debug('Excluding neighbor: group is too small', neighbor)\n          return false\n        }\n\n        return true\n      })\n\n    if (!validNeighbors.length) {\n      console.debug('No valid steps from here. Removing last step and trying again.')\n      return this.#removeLastStep()\n    }\n\n    // Pick a random neighbor from the list of valid neighbors to step to\n    const index = randomIntInclusive(this.rand, validNeighbors.length - 1)\n    this.#addStep(this.configuration.getIndex(validNeighbors[index].coordinates), lastStep)\n  }\n\n  #addStep (index, lastStep) {\n    const coordinates = this.configuration.getCoordinates(index)\n    const character = this.characters[this.#path.length]\n    const step = new Step(new Cell.State(index, character), coordinates, lastStep)\n\n    this.#steps[index] = step\n    this.#path.push(step)\n\n    console.debug('Added step:', step)\n  }\n\n  #removeLastStep () {\n    const step = this.#path.pop()\n    const index = step.index\n\n    delete this.#steps[index]\n\n    // Mark this choice as invalid so we don't try it again\n    this.#invalidSteps[step.key] = true\n\n    console.debug('Removed step:', step)\n  }\n\n  #restart () {\n    while (this.#path.length > 0) {\n      this.#removeLastStep()\n    }\n\n    for (const key in this.#invalidSteps) {\n      this.#invalidSteps[key] = {}\n    }\n  }\n\n  static getWordBoundaries (words) {\n    return words.reduce((boundaries, word) => {\n      const last = boundaries[boundaries.length - 1]\n      const lastIndex = last ? last[last.length - 1] + 1 : 0\n      boundaries.push([...word.split('').map((_, index) => lastIndex + index)])\n      return boundaries\n    }, [])\n  }\n}\n\nclass Step {\n  coordinates\n  index\n  key\n  parent\n  state\n\n  constructor (state, coordinates, parent) {\n    this.coordinates = coordinates\n    this.index = state.index\n    this.key = parent ? Step.key(parent.key, this.index) : this.index.toString()\n    this.parent = parent\n    this.state = state\n  }\n\n  equals (other) {\n    return this.index === other?.index\n  }\n\n  isConnected (other) {\n    return (this.parent?.equals(other) || other?.parent?.equals(this)) === true\n  }\n\n  static key (...parts) {\n    return parts.join('.')\n  }\n}\n","/**!\n* tippy.js v6.3.7\n* (c) 2017-2021 atomiks\n* MIT License\n*/\nimport { createPopper, applyStyles } from '@popperjs/core';\n\nvar ROUND_ARROW = '<svg width=\"16\" height=\"6\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 6s1.796-.013 4.67-3.615C5.851.9 6.93.006 8 0c1.07-.006 2.148.887 3.343 2.385C14.233 6.005 16 6 16 6H0z\"></svg>';\nvar BOX_CLASS = \"tippy-box\";\nvar CONTENT_CLASS = \"tippy-content\";\nvar BACKDROP_CLASS = \"tippy-backdrop\";\nvar ARROW_CLASS = \"tippy-arrow\";\nvar SVG_ARROW_CLASS = \"tippy-svg-arrow\";\nvar TOUCH_OPTIONS = {\n  passive: true,\n  capture: true\n};\nvar TIPPY_DEFAULT_APPEND_TO = function TIPPY_DEFAULT_APPEND_TO() {\n  return document.body;\n};\n\nfunction hasOwnProperty(obj, key) {\n  return {}.hasOwnProperty.call(obj, key);\n}\nfunction getValueAtIndexOrReturn(value, index, defaultValue) {\n  if (Array.isArray(value)) {\n    var v = value[index];\n    return v == null ? Array.isArray(defaultValue) ? defaultValue[index] : defaultValue : v;\n  }\n\n  return value;\n}\nfunction isType(value, type) {\n  var str = {}.toString.call(value);\n  return str.indexOf('[object') === 0 && str.indexOf(type + \"]\") > -1;\n}\nfunction invokeWithArgsOrReturn(value, args) {\n  return typeof value === 'function' ? value.apply(void 0, args) : value;\n}\nfunction debounce(fn, ms) {\n  // Avoid wrapping in `setTimeout` if ms is 0 anyway\n  if (ms === 0) {\n    return fn;\n  }\n\n  var timeout;\n  return function (arg) {\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      fn(arg);\n    }, ms);\n  };\n}\nfunction removeProperties(obj, keys) {\n  var clone = Object.assign({}, obj);\n  keys.forEach(function (key) {\n    delete clone[key];\n  });\n  return clone;\n}\nfunction splitBySpaces(value) {\n  return value.split(/\\s+/).filter(Boolean);\n}\nfunction normalizeToArray(value) {\n  return [].concat(value);\n}\nfunction pushIfUnique(arr, value) {\n  if (arr.indexOf(value) === -1) {\n    arr.push(value);\n  }\n}\nfunction unique(arr) {\n  return arr.filter(function (item, index) {\n    return arr.indexOf(item) === index;\n  });\n}\nfunction getBasePlacement(placement) {\n  return placement.split('-')[0];\n}\nfunction arrayFrom(value) {\n  return [].slice.call(value);\n}\nfunction removeUndefinedProps(obj) {\n  return Object.keys(obj).reduce(function (acc, key) {\n    if (obj[key] !== undefined) {\n      acc[key] = obj[key];\n    }\n\n    return acc;\n  }, {});\n}\n\nfunction div() {\n  return document.createElement('div');\n}\nfunction isElement(value) {\n  return ['Element', 'Fragment'].some(function (type) {\n    return isType(value, type);\n  });\n}\nfunction isNodeList(value) {\n  return isType(value, 'NodeList');\n}\nfunction isMouseEvent(value) {\n  return isType(value, 'MouseEvent');\n}\nfunction isReferenceElement(value) {\n  return !!(value && value._tippy && value._tippy.reference === value);\n}\nfunction getArrayOfElements(value) {\n  if (isElement(value)) {\n    return [value];\n  }\n\n  if (isNodeList(value)) {\n    return arrayFrom(value);\n  }\n\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  return arrayFrom(document.querySelectorAll(value));\n}\nfunction setTransitionDuration(els, value) {\n  els.forEach(function (el) {\n    if (el) {\n      el.style.transitionDuration = value + \"ms\";\n    }\n  });\n}\nfunction setVisibilityState(els, state) {\n  els.forEach(function (el) {\n    if (el) {\n      el.setAttribute('data-state', state);\n    }\n  });\n}\nfunction getOwnerDocument(elementOrElements) {\n  var _element$ownerDocumen;\n\n  var _normalizeToArray = normalizeToArray(elementOrElements),\n      element = _normalizeToArray[0]; // Elements created via a <template> have an ownerDocument with no reference to the body\n\n\n  return element != null && (_element$ownerDocumen = element.ownerDocument) != null && _element$ownerDocumen.body ? element.ownerDocument : document;\n}\nfunction isCursorOutsideInteractiveBorder(popperTreeData, event) {\n  var clientX = event.clientX,\n      clientY = event.clientY;\n  return popperTreeData.every(function (_ref) {\n    var popperRect = _ref.popperRect,\n        popperState = _ref.popperState,\n        props = _ref.props;\n    var interactiveBorder = props.interactiveBorder;\n    var basePlacement = getBasePlacement(popperState.placement);\n    var offsetData = popperState.modifiersData.offset;\n\n    if (!offsetData) {\n      return true;\n    }\n\n    var topDistance = basePlacement === 'bottom' ? offsetData.top.y : 0;\n    var bottomDistance = basePlacement === 'top' ? offsetData.bottom.y : 0;\n    var leftDistance = basePlacement === 'right' ? offsetData.left.x : 0;\n    var rightDistance = basePlacement === 'left' ? offsetData.right.x : 0;\n    var exceedsTop = popperRect.top - clientY + topDistance > interactiveBorder;\n    var exceedsBottom = clientY - popperRect.bottom - bottomDistance > interactiveBorder;\n    var exceedsLeft = popperRect.left - clientX + leftDistance > interactiveBorder;\n    var exceedsRight = clientX - popperRect.right - rightDistance > interactiveBorder;\n    return exceedsTop || exceedsBottom || exceedsLeft || exceedsRight;\n  });\n}\nfunction updateTransitionEndListener(box, action, listener) {\n  var method = action + \"EventListener\"; // some browsers apparently support `transition` (unprefixed) but only fire\n  // `webkitTransitionEnd`...\n\n  ['transitionend', 'webkitTransitionEnd'].forEach(function (event) {\n    box[method](event, listener);\n  });\n}\n/**\n * Compared to xxx.contains, this function works for dom structures with shadow\n * dom\n */\n\nfunction actualContains(parent, child) {\n  var target = child;\n\n  while (target) {\n    var _target$getRootNode;\n\n    if (parent.contains(target)) {\n      return true;\n    }\n\n    target = target.getRootNode == null ? void 0 : (_target$getRootNode = target.getRootNode()) == null ? void 0 : _target$getRootNode.host;\n  }\n\n  return false;\n}\n\nvar currentInput = {\n  isTouch: false\n};\nvar lastMouseMoveTime = 0;\n/**\n * When a `touchstart` event is fired, it's assumed the user is using touch\n * input. We'll bind a `mousemove` event listener to listen for mouse input in\n * the future. This way, the `isTouch` property is fully dynamic and will handle\n * hybrid devices that use a mix of touch + mouse input.\n */\n\nfunction onDocumentTouchStart() {\n  if (currentInput.isTouch) {\n    return;\n  }\n\n  currentInput.isTouch = true;\n\n  if (window.performance) {\n    document.addEventListener('mousemove', onDocumentMouseMove);\n  }\n}\n/**\n * When two `mousemove` event are fired consecutively within 20ms, it's assumed\n * the user is using mouse input again. `mousemove` can fire on touch devices as\n * well, but very rarely that quickly.\n */\n\nfunction onDocumentMouseMove() {\n  var now = performance.now();\n\n  if (now - lastMouseMoveTime < 20) {\n    currentInput.isTouch = false;\n    document.removeEventListener('mousemove', onDocumentMouseMove);\n  }\n\n  lastMouseMoveTime = now;\n}\n/**\n * When an element is in focus and has a tippy, leaving the tab/window and\n * returning causes it to show again. For mouse users this is unexpected, but\n * for keyboard use it makes sense.\n * TODO: find a better technique to solve this problem\n */\n\nfunction onWindowBlur() {\n  var activeElement = document.activeElement;\n\n  if (isReferenceElement(activeElement)) {\n    var instance = activeElement._tippy;\n\n    if (activeElement.blur && !instance.state.isVisible) {\n      activeElement.blur();\n    }\n  }\n}\nfunction bindGlobalEventListeners() {\n  document.addEventListener('touchstart', onDocumentTouchStart, TOUCH_OPTIONS);\n  window.addEventListener('blur', onWindowBlur);\n}\n\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\nvar isIE11 = isBrowser ? // @ts-ignore\n!!window.msCrypto : false;\n\nfunction createMemoryLeakWarning(method) {\n  var txt = method === 'destroy' ? 'n already-' : ' ';\n  return [method + \"() was called on a\" + txt + \"destroyed instance. This is a no-op but\", 'indicates a potential memory leak.'].join(' ');\n}\nfunction clean(value) {\n  var spacesAndTabs = /[ \\t]{2,}/g;\n  var lineStartWithSpaces = /^[ \\t]*/gm;\n  return value.replace(spacesAndTabs, ' ').replace(lineStartWithSpaces, '').trim();\n}\n\nfunction getDevMessage(message) {\n  return clean(\"\\n  %ctippy.js\\n\\n  %c\" + clean(message) + \"\\n\\n  %c\\uD83D\\uDC77\\u200D This is a development-only message. It will be removed in production.\\n  \");\n}\n\nfunction getFormattedMessage(message) {\n  return [getDevMessage(message), // title\n  'color: #00C584; font-size: 1.3em; font-weight: bold;', // message\n  'line-height: 1.5', // footer\n  'color: #a6a095;'];\n} // Assume warnings and errors never have the same message\n\nvar visitedMessages;\n\nif (process.env.NODE_ENV !== \"production\") {\n  resetVisitedMessages();\n}\n\nfunction resetVisitedMessages() {\n  visitedMessages = new Set();\n}\nfunction warnWhen(condition, message) {\n  if (condition && !visitedMessages.has(message)) {\n    var _console;\n\n    visitedMessages.add(message);\n\n    (_console = console).warn.apply(_console, getFormattedMessage(message));\n  }\n}\nfunction errorWhen(condition, message) {\n  if (condition && !visitedMessages.has(message)) {\n    var _console2;\n\n    visitedMessages.add(message);\n\n    (_console2 = console).error.apply(_console2, getFormattedMessage(message));\n  }\n}\nfunction validateTargets(targets) {\n  var didPassFalsyValue = !targets;\n  var didPassPlainObject = Object.prototype.toString.call(targets) === '[object Object]' && !targets.addEventListener;\n  errorWhen(didPassFalsyValue, ['tippy() was passed', '`' + String(targets) + '`', 'as its targets (first) argument. Valid types are: String, Element,', 'Element[], or NodeList.'].join(' '));\n  errorWhen(didPassPlainObject, ['tippy() was passed a plain object which is not supported as an argument', 'for virtual positioning. Use props.getReferenceClientRect instead.'].join(' '));\n}\n\nvar pluginProps = {\n  animateFill: false,\n  followCursor: false,\n  inlinePositioning: false,\n  sticky: false\n};\nvar renderProps = {\n  allowHTML: false,\n  animation: 'fade',\n  arrow: true,\n  content: '',\n  inertia: false,\n  maxWidth: 350,\n  role: 'tooltip',\n  theme: '',\n  zIndex: 9999\n};\nvar defaultProps = Object.assign({\n  appendTo: TIPPY_DEFAULT_APPEND_TO,\n  aria: {\n    content: 'auto',\n    expanded: 'auto'\n  },\n  delay: 0,\n  duration: [300, 250],\n  getReferenceClientRect: null,\n  hideOnClick: true,\n  ignoreAttributes: false,\n  interactive: false,\n  interactiveBorder: 2,\n  interactiveDebounce: 0,\n  moveTransition: '',\n  offset: [0, 10],\n  onAfterUpdate: function onAfterUpdate() {},\n  onBeforeUpdate: function onBeforeUpdate() {},\n  onCreate: function onCreate() {},\n  onDestroy: function onDestroy() {},\n  onHidden: function onHidden() {},\n  onHide: function onHide() {},\n  onMount: function onMount() {},\n  onShow: function onShow() {},\n  onShown: function onShown() {},\n  onTrigger: function onTrigger() {},\n  onUntrigger: function onUntrigger() {},\n  onClickOutside: function onClickOutside() {},\n  placement: 'top',\n  plugins: [],\n  popperOptions: {},\n  render: null,\n  showOnCreate: false,\n  touch: true,\n  trigger: 'mouseenter focus',\n  triggerTarget: null\n}, pluginProps, renderProps);\nvar defaultKeys = Object.keys(defaultProps);\nvar setDefaultProps = function setDefaultProps(partialProps) {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    validateProps(partialProps, []);\n  }\n\n  var keys = Object.keys(partialProps);\n  keys.forEach(function (key) {\n    defaultProps[key] = partialProps[key];\n  });\n};\nfunction getExtendedPassedProps(passedProps) {\n  var plugins = passedProps.plugins || [];\n  var pluginProps = plugins.reduce(function (acc, plugin) {\n    var name = plugin.name,\n        defaultValue = plugin.defaultValue;\n\n    if (name) {\n      var _name;\n\n      acc[name] = passedProps[name] !== undefined ? passedProps[name] : (_name = defaultProps[name]) != null ? _name : defaultValue;\n    }\n\n    return acc;\n  }, {});\n  return Object.assign({}, passedProps, pluginProps);\n}\nfunction getDataAttributeProps(reference, plugins) {\n  var propKeys = plugins ? Object.keys(getExtendedPassedProps(Object.assign({}, defaultProps, {\n    plugins: plugins\n  }))) : defaultKeys;\n  var props = propKeys.reduce(function (acc, key) {\n    var valueAsString = (reference.getAttribute(\"data-tippy-\" + key) || '').trim();\n\n    if (!valueAsString) {\n      return acc;\n    }\n\n    if (key === 'content') {\n      acc[key] = valueAsString;\n    } else {\n      try {\n        acc[key] = JSON.parse(valueAsString);\n      } catch (e) {\n        acc[key] = valueAsString;\n      }\n    }\n\n    return acc;\n  }, {});\n  return props;\n}\nfunction evaluateProps(reference, props) {\n  var out = Object.assign({}, props, {\n    content: invokeWithArgsOrReturn(props.content, [reference])\n  }, props.ignoreAttributes ? {} : getDataAttributeProps(reference, props.plugins));\n  out.aria = Object.assign({}, defaultProps.aria, out.aria);\n  out.aria = {\n    expanded: out.aria.expanded === 'auto' ? props.interactive : out.aria.expanded,\n    content: out.aria.content === 'auto' ? props.interactive ? null : 'describedby' : out.aria.content\n  };\n  return out;\n}\nfunction validateProps(partialProps, plugins) {\n  if (partialProps === void 0) {\n    partialProps = {};\n  }\n\n  if (plugins === void 0) {\n    plugins = [];\n  }\n\n  var keys = Object.keys(partialProps);\n  keys.forEach(function (prop) {\n    var nonPluginProps = removeProperties(defaultProps, Object.keys(pluginProps));\n    var didPassUnknownProp = !hasOwnProperty(nonPluginProps, prop); // Check if the prop exists in `plugins`\n\n    if (didPassUnknownProp) {\n      didPassUnknownProp = plugins.filter(function (plugin) {\n        return plugin.name === prop;\n      }).length === 0;\n    }\n\n    warnWhen(didPassUnknownProp, [\"`\" + prop + \"`\", \"is not a valid prop. You may have spelled it incorrectly, or if it's\", 'a plugin, forgot to pass it in an array as props.plugins.', '\\n\\n', 'All props: https://atomiks.github.io/tippyjs/v6/all-props/\\n', 'Plugins: https://atomiks.github.io/tippyjs/v6/plugins/'].join(' '));\n  });\n}\n\nvar innerHTML = function innerHTML() {\n  return 'innerHTML';\n};\n\nfunction dangerouslySetInnerHTML(element, html) {\n  element[innerHTML()] = html;\n}\n\nfunction createArrowElement(value) {\n  var arrow = div();\n\n  if (value === true) {\n    arrow.className = ARROW_CLASS;\n  } else {\n    arrow.className = SVG_ARROW_CLASS;\n\n    if (isElement(value)) {\n      arrow.appendChild(value);\n    } else {\n      dangerouslySetInnerHTML(arrow, value);\n    }\n  }\n\n  return arrow;\n}\n\nfunction setContent(content, props) {\n  if (isElement(props.content)) {\n    dangerouslySetInnerHTML(content, '');\n    content.appendChild(props.content);\n  } else if (typeof props.content !== 'function') {\n    if (props.allowHTML) {\n      dangerouslySetInnerHTML(content, props.content);\n    } else {\n      content.textContent = props.content;\n    }\n  }\n}\nfunction getChildren(popper) {\n  var box = popper.firstElementChild;\n  var boxChildren = arrayFrom(box.children);\n  return {\n    box: box,\n    content: boxChildren.find(function (node) {\n      return node.classList.contains(CONTENT_CLASS);\n    }),\n    arrow: boxChildren.find(function (node) {\n      return node.classList.contains(ARROW_CLASS) || node.classList.contains(SVG_ARROW_CLASS);\n    }),\n    backdrop: boxChildren.find(function (node) {\n      return node.classList.contains(BACKDROP_CLASS);\n    })\n  };\n}\nfunction render(instance) {\n  var popper = div();\n  var box = div();\n  box.className = BOX_CLASS;\n  box.setAttribute('data-state', 'hidden');\n  box.setAttribute('tabindex', '-1');\n  var content = div();\n  content.className = CONTENT_CLASS;\n  content.setAttribute('data-state', 'hidden');\n  setContent(content, instance.props);\n  popper.appendChild(box);\n  box.appendChild(content);\n  onUpdate(instance.props, instance.props);\n\n  function onUpdate(prevProps, nextProps) {\n    var _getChildren = getChildren(popper),\n        box = _getChildren.box,\n        content = _getChildren.content,\n        arrow = _getChildren.arrow;\n\n    if (nextProps.theme) {\n      box.setAttribute('data-theme', nextProps.theme);\n    } else {\n      box.removeAttribute('data-theme');\n    }\n\n    if (typeof nextProps.animation === 'string') {\n      box.setAttribute('data-animation', nextProps.animation);\n    } else {\n      box.removeAttribute('data-animation');\n    }\n\n    if (nextProps.inertia) {\n      box.setAttribute('data-inertia', '');\n    } else {\n      box.removeAttribute('data-inertia');\n    }\n\n    box.style.maxWidth = typeof nextProps.maxWidth === 'number' ? nextProps.maxWidth + \"px\" : nextProps.maxWidth;\n\n    if (nextProps.role) {\n      box.setAttribute('role', nextProps.role);\n    } else {\n      box.removeAttribute('role');\n    }\n\n    if (prevProps.content !== nextProps.content || prevProps.allowHTML !== nextProps.allowHTML) {\n      setContent(content, instance.props);\n    }\n\n    if (nextProps.arrow) {\n      if (!arrow) {\n        box.appendChild(createArrowElement(nextProps.arrow));\n      } else if (prevProps.arrow !== nextProps.arrow) {\n        box.removeChild(arrow);\n        box.appendChild(createArrowElement(nextProps.arrow));\n      }\n    } else if (arrow) {\n      box.removeChild(arrow);\n    }\n  }\n\n  return {\n    popper: popper,\n    onUpdate: onUpdate\n  };\n} // Runtime check to identify if the render function is the default one; this\n// way we can apply default CSS transitions logic and it can be tree-shaken away\n\nrender.$$tippy = true;\n\nvar idCounter = 1;\nvar mouseMoveListeners = []; // Used by `hideAll()`\n\nvar mountedInstances = [];\nfunction createTippy(reference, passedProps) {\n  var props = evaluateProps(reference, Object.assign({}, defaultProps, getExtendedPassedProps(removeUndefinedProps(passedProps)))); // ===========================================================================\n  // 🔒 Private members\n  // ===========================================================================\n\n  var showTimeout;\n  var hideTimeout;\n  var scheduleHideAnimationFrame;\n  var isVisibleFromClick = false;\n  var didHideDueToDocumentMouseDown = false;\n  var didTouchMove = false;\n  var ignoreOnFirstUpdate = false;\n  var lastTriggerEvent;\n  var currentTransitionEndListener;\n  var onFirstUpdate;\n  var listeners = [];\n  var debouncedOnMouseMove = debounce(onMouseMove, props.interactiveDebounce);\n  var currentTarget; // ===========================================================================\n  // 🔑 Public members\n  // ===========================================================================\n\n  var id = idCounter++;\n  var popperInstance = null;\n  var plugins = unique(props.plugins);\n  var state = {\n    // Is the instance currently enabled?\n    isEnabled: true,\n    // Is the tippy currently showing and not transitioning out?\n    isVisible: false,\n    // Has the instance been destroyed?\n    isDestroyed: false,\n    // Is the tippy currently mounted to the DOM?\n    isMounted: false,\n    // Has the tippy finished transitioning in?\n    isShown: false\n  };\n  var instance = {\n    // properties\n    id: id,\n    reference: reference,\n    popper: div(),\n    popperInstance: popperInstance,\n    props: props,\n    state: state,\n    plugins: plugins,\n    // methods\n    clearDelayTimeouts: clearDelayTimeouts,\n    setProps: setProps,\n    setContent: setContent,\n    show: show,\n    hide: hide,\n    hideWithInteractivity: hideWithInteractivity,\n    enable: enable,\n    disable: disable,\n    unmount: unmount,\n    destroy: destroy\n  }; // TODO: Investigate why this early return causes a TDZ error in the tests —\n  // it doesn't seem to happen in the browser\n\n  /* istanbul ignore if */\n\n  if (!props.render) {\n    if (process.env.NODE_ENV !== \"production\") {\n      errorWhen(true, 'render() function has not been supplied.');\n    }\n\n    return instance;\n  } // ===========================================================================\n  // Initial mutations\n  // ===========================================================================\n\n\n  var _props$render = props.render(instance),\n      popper = _props$render.popper,\n      onUpdate = _props$render.onUpdate;\n\n  popper.setAttribute('data-tippy-root', '');\n  popper.id = \"tippy-\" + instance.id;\n  instance.popper = popper;\n  reference._tippy = instance;\n  popper._tippy = instance;\n  var pluginsHooks = plugins.map(function (plugin) {\n    return plugin.fn(instance);\n  });\n  var hasAriaExpanded = reference.hasAttribute('aria-expanded');\n  addListeners();\n  handleAriaExpandedAttribute();\n  handleStyles();\n  invokeHook('onCreate', [instance]);\n\n  if (props.showOnCreate) {\n    scheduleShow();\n  } // Prevent a tippy with a delay from hiding if the cursor left then returned\n  // before it started hiding\n\n\n  popper.addEventListener('mouseenter', function () {\n    if (instance.props.interactive && instance.state.isVisible) {\n      instance.clearDelayTimeouts();\n    }\n  });\n  popper.addEventListener('mouseleave', function () {\n    if (instance.props.interactive && instance.props.trigger.indexOf('mouseenter') >= 0) {\n      getDocument().addEventListener('mousemove', debouncedOnMouseMove);\n    }\n  });\n  return instance; // ===========================================================================\n  // 🔒 Private methods\n  // ===========================================================================\n\n  function getNormalizedTouchSettings() {\n    var touch = instance.props.touch;\n    return Array.isArray(touch) ? touch : [touch, 0];\n  }\n\n  function getIsCustomTouchBehavior() {\n    return getNormalizedTouchSettings()[0] === 'hold';\n  }\n\n  function getIsDefaultRenderFn() {\n    var _instance$props$rende;\n\n    // @ts-ignore\n    return !!((_instance$props$rende = instance.props.render) != null && _instance$props$rende.$$tippy);\n  }\n\n  function getCurrentTarget() {\n    return currentTarget || reference;\n  }\n\n  function getDocument() {\n    var parent = getCurrentTarget().parentNode;\n    return parent ? getOwnerDocument(parent) : document;\n  }\n\n  function getDefaultTemplateChildren() {\n    return getChildren(popper);\n  }\n\n  function getDelay(isShow) {\n    // For touch or keyboard input, force `0` delay for UX reasons\n    // Also if the instance is mounted but not visible (transitioning out),\n    // ignore delay\n    if (instance.state.isMounted && !instance.state.isVisible || currentInput.isTouch || lastTriggerEvent && lastTriggerEvent.type === 'focus') {\n      return 0;\n    }\n\n    return getValueAtIndexOrReturn(instance.props.delay, isShow ? 0 : 1, defaultProps.delay);\n  }\n\n  function handleStyles(fromHide) {\n    if (fromHide === void 0) {\n      fromHide = false;\n    }\n\n    popper.style.pointerEvents = instance.props.interactive && !fromHide ? '' : 'none';\n    popper.style.zIndex = \"\" + instance.props.zIndex;\n  }\n\n  function invokeHook(hook, args, shouldInvokePropsHook) {\n    if (shouldInvokePropsHook === void 0) {\n      shouldInvokePropsHook = true;\n    }\n\n    pluginsHooks.forEach(function (pluginHooks) {\n      if (pluginHooks[hook]) {\n        pluginHooks[hook].apply(pluginHooks, args);\n      }\n    });\n\n    if (shouldInvokePropsHook) {\n      var _instance$props;\n\n      (_instance$props = instance.props)[hook].apply(_instance$props, args);\n    }\n  }\n\n  function handleAriaContentAttribute() {\n    var aria = instance.props.aria;\n\n    if (!aria.content) {\n      return;\n    }\n\n    var attr = \"aria-\" + aria.content;\n    var id = popper.id;\n    var nodes = normalizeToArray(instance.props.triggerTarget || reference);\n    nodes.forEach(function (node) {\n      var currentValue = node.getAttribute(attr);\n\n      if (instance.state.isVisible) {\n        node.setAttribute(attr, currentValue ? currentValue + \" \" + id : id);\n      } else {\n        var nextValue = currentValue && currentValue.replace(id, '').trim();\n\n        if (nextValue) {\n          node.setAttribute(attr, nextValue);\n        } else {\n          node.removeAttribute(attr);\n        }\n      }\n    });\n  }\n\n  function handleAriaExpandedAttribute() {\n    if (hasAriaExpanded || !instance.props.aria.expanded) {\n      return;\n    }\n\n    var nodes = normalizeToArray(instance.props.triggerTarget || reference);\n    nodes.forEach(function (node) {\n      if (instance.props.interactive) {\n        node.setAttribute('aria-expanded', instance.state.isVisible && node === getCurrentTarget() ? 'true' : 'false');\n      } else {\n        node.removeAttribute('aria-expanded');\n      }\n    });\n  }\n\n  function cleanupInteractiveMouseListeners() {\n    getDocument().removeEventListener('mousemove', debouncedOnMouseMove);\n    mouseMoveListeners = mouseMoveListeners.filter(function (listener) {\n      return listener !== debouncedOnMouseMove;\n    });\n  }\n\n  function onDocumentPress(event) {\n    // Moved finger to scroll instead of an intentional tap outside\n    if (currentInput.isTouch) {\n      if (didTouchMove || event.type === 'mousedown') {\n        return;\n      }\n    }\n\n    var actualTarget = event.composedPath && event.composedPath()[0] || event.target; // Clicked on interactive popper\n\n    if (instance.props.interactive && actualContains(popper, actualTarget)) {\n      return;\n    } // Clicked on the event listeners target\n\n\n    if (normalizeToArray(instance.props.triggerTarget || reference).some(function (el) {\n      return actualContains(el, actualTarget);\n    })) {\n      if (currentInput.isTouch) {\n        return;\n      }\n\n      if (instance.state.isVisible && instance.props.trigger.indexOf('click') >= 0) {\n        return;\n      }\n    } else {\n      invokeHook('onClickOutside', [instance, event]);\n    }\n\n    if (instance.props.hideOnClick === true) {\n      instance.clearDelayTimeouts();\n      instance.hide(); // `mousedown` event is fired right before `focus` if pressing the\n      // currentTarget. This lets a tippy with `focus` trigger know that it\n      // should not show\n\n      didHideDueToDocumentMouseDown = true;\n      setTimeout(function () {\n        didHideDueToDocumentMouseDown = false;\n      }); // The listener gets added in `scheduleShow()`, but this may be hiding it\n      // before it shows, and hide()'s early bail-out behavior can prevent it\n      // from being cleaned up\n\n      if (!instance.state.isMounted) {\n        removeDocumentPress();\n      }\n    }\n  }\n\n  function onTouchMove() {\n    didTouchMove = true;\n  }\n\n  function onTouchStart() {\n    didTouchMove = false;\n  }\n\n  function addDocumentPress() {\n    var doc = getDocument();\n    doc.addEventListener('mousedown', onDocumentPress, true);\n    doc.addEventListener('touchend', onDocumentPress, TOUCH_OPTIONS);\n    doc.addEventListener('touchstart', onTouchStart, TOUCH_OPTIONS);\n    doc.addEventListener('touchmove', onTouchMove, TOUCH_OPTIONS);\n  }\n\n  function removeDocumentPress() {\n    var doc = getDocument();\n    doc.removeEventListener('mousedown', onDocumentPress, true);\n    doc.removeEventListener('touchend', onDocumentPress, TOUCH_OPTIONS);\n    doc.removeEventListener('touchstart', onTouchStart, TOUCH_OPTIONS);\n    doc.removeEventListener('touchmove', onTouchMove, TOUCH_OPTIONS);\n  }\n\n  function onTransitionedOut(duration, callback) {\n    onTransitionEnd(duration, function () {\n      if (!instance.state.isVisible && popper.parentNode && popper.parentNode.contains(popper)) {\n        callback();\n      }\n    });\n  }\n\n  function onTransitionedIn(duration, callback) {\n    onTransitionEnd(duration, callback);\n  }\n\n  function onTransitionEnd(duration, callback) {\n    var box = getDefaultTemplateChildren().box;\n\n    function listener(event) {\n      if (event.target === box) {\n        updateTransitionEndListener(box, 'remove', listener);\n        callback();\n      }\n    } // Make callback synchronous if duration is 0\n    // `transitionend` won't fire otherwise\n\n\n    if (duration === 0) {\n      return callback();\n    }\n\n    updateTransitionEndListener(box, 'remove', currentTransitionEndListener);\n    updateTransitionEndListener(box, 'add', listener);\n    currentTransitionEndListener = listener;\n  }\n\n  function on(eventType, handler, options) {\n    if (options === void 0) {\n      options = false;\n    }\n\n    var nodes = normalizeToArray(instance.props.triggerTarget || reference);\n    nodes.forEach(function (node) {\n      node.addEventListener(eventType, handler, options);\n      listeners.push({\n        node: node,\n        eventType: eventType,\n        handler: handler,\n        options: options\n      });\n    });\n  }\n\n  function addListeners() {\n    if (getIsCustomTouchBehavior()) {\n      on('touchstart', onTrigger, {\n        passive: true\n      });\n      on('touchend', onMouseLeave, {\n        passive: true\n      });\n    }\n\n    splitBySpaces(instance.props.trigger).forEach(function (eventType) {\n      if (eventType === 'manual') {\n        return;\n      }\n\n      on(eventType, onTrigger);\n\n      switch (eventType) {\n        case 'mouseenter':\n          on('mouseleave', onMouseLeave);\n          break;\n\n        case 'focus':\n          on(isIE11 ? 'focusout' : 'blur', onBlurOrFocusOut);\n          break;\n\n        case 'focusin':\n          on('focusout', onBlurOrFocusOut);\n          break;\n      }\n    });\n  }\n\n  function removeListeners() {\n    listeners.forEach(function (_ref) {\n      var node = _ref.node,\n          eventType = _ref.eventType,\n          handler = _ref.handler,\n          options = _ref.options;\n      node.removeEventListener(eventType, handler, options);\n    });\n    listeners = [];\n  }\n\n  function onTrigger(event) {\n    var _lastTriggerEvent;\n\n    var shouldScheduleClickHide = false;\n\n    if (!instance.state.isEnabled || isEventListenerStopped(event) || didHideDueToDocumentMouseDown) {\n      return;\n    }\n\n    var wasFocused = ((_lastTriggerEvent = lastTriggerEvent) == null ? void 0 : _lastTriggerEvent.type) === 'focus';\n    lastTriggerEvent = event;\n    currentTarget = event.currentTarget;\n    handleAriaExpandedAttribute();\n\n    if (!instance.state.isVisible && isMouseEvent(event)) {\n      // If scrolling, `mouseenter` events can be fired if the cursor lands\n      // over a new target, but `mousemove` events don't get fired. This\n      // causes interactive tooltips to get stuck open until the cursor is\n      // moved\n      mouseMoveListeners.forEach(function (listener) {\n        return listener(event);\n      });\n    } // Toggle show/hide when clicking click-triggered tooltips\n\n\n    if (event.type === 'click' && (instance.props.trigger.indexOf('mouseenter') < 0 || isVisibleFromClick) && instance.props.hideOnClick !== false && instance.state.isVisible) {\n      shouldScheduleClickHide = true;\n    } else {\n      scheduleShow(event);\n    }\n\n    if (event.type === 'click') {\n      isVisibleFromClick = !shouldScheduleClickHide;\n    }\n\n    if (shouldScheduleClickHide && !wasFocused) {\n      scheduleHide(event);\n    }\n  }\n\n  function onMouseMove(event) {\n    var target = event.target;\n    var isCursorOverReferenceOrPopper = getCurrentTarget().contains(target) || popper.contains(target);\n\n    if (event.type === 'mousemove' && isCursorOverReferenceOrPopper) {\n      return;\n    }\n\n    var popperTreeData = getNestedPopperTree().concat(popper).map(function (popper) {\n      var _instance$popperInsta;\n\n      var instance = popper._tippy;\n      var state = (_instance$popperInsta = instance.popperInstance) == null ? void 0 : _instance$popperInsta.state;\n\n      if (state) {\n        return {\n          popperRect: popper.getBoundingClientRect(),\n          popperState: state,\n          props: props\n        };\n      }\n\n      return null;\n    }).filter(Boolean);\n\n    if (isCursorOutsideInteractiveBorder(popperTreeData, event)) {\n      cleanupInteractiveMouseListeners();\n      scheduleHide(event);\n    }\n  }\n\n  function onMouseLeave(event) {\n    var shouldBail = isEventListenerStopped(event) || instance.props.trigger.indexOf('click') >= 0 && isVisibleFromClick;\n\n    if (shouldBail) {\n      return;\n    }\n\n    if (instance.props.interactive) {\n      instance.hideWithInteractivity(event);\n      return;\n    }\n\n    scheduleHide(event);\n  }\n\n  function onBlurOrFocusOut(event) {\n    if (instance.props.trigger.indexOf('focusin') < 0 && event.target !== getCurrentTarget()) {\n      return;\n    } // If focus was moved to within the popper\n\n\n    if (instance.props.interactive && event.relatedTarget && popper.contains(event.relatedTarget)) {\n      return;\n    }\n\n    scheduleHide(event);\n  }\n\n  function isEventListenerStopped(event) {\n    return currentInput.isTouch ? getIsCustomTouchBehavior() !== event.type.indexOf('touch') >= 0 : false;\n  }\n\n  function createPopperInstance() {\n    destroyPopperInstance();\n    var _instance$props2 = instance.props,\n        popperOptions = _instance$props2.popperOptions,\n        placement = _instance$props2.placement,\n        offset = _instance$props2.offset,\n        getReferenceClientRect = _instance$props2.getReferenceClientRect,\n        moveTransition = _instance$props2.moveTransition;\n    var arrow = getIsDefaultRenderFn() ? getChildren(popper).arrow : null;\n    var computedReference = getReferenceClientRect ? {\n      getBoundingClientRect: getReferenceClientRect,\n      contextElement: getReferenceClientRect.contextElement || getCurrentTarget()\n    } : reference;\n    var tippyModifier = {\n      name: '$$tippy',\n      enabled: true,\n      phase: 'beforeWrite',\n      requires: ['computeStyles'],\n      fn: function fn(_ref2) {\n        var state = _ref2.state;\n\n        if (getIsDefaultRenderFn()) {\n          var _getDefaultTemplateCh = getDefaultTemplateChildren(),\n              box = _getDefaultTemplateCh.box;\n\n          ['placement', 'reference-hidden', 'escaped'].forEach(function (attr) {\n            if (attr === 'placement') {\n              box.setAttribute('data-placement', state.placement);\n            } else {\n              if (state.attributes.popper[\"data-popper-\" + attr]) {\n                box.setAttribute(\"data-\" + attr, '');\n              } else {\n                box.removeAttribute(\"data-\" + attr);\n              }\n            }\n          });\n          state.attributes.popper = {};\n        }\n      }\n    };\n    var modifiers = [{\n      name: 'offset',\n      options: {\n        offset: offset\n      }\n    }, {\n      name: 'preventOverflow',\n      options: {\n        padding: {\n          top: 2,\n          bottom: 2,\n          left: 5,\n          right: 5\n        }\n      }\n    }, {\n      name: 'flip',\n      options: {\n        padding: 5\n      }\n    }, {\n      name: 'computeStyles',\n      options: {\n        adaptive: !moveTransition\n      }\n    }, tippyModifier];\n\n    if (getIsDefaultRenderFn() && arrow) {\n      modifiers.push({\n        name: 'arrow',\n        options: {\n          element: arrow,\n          padding: 3\n        }\n      });\n    }\n\n    modifiers.push.apply(modifiers, (popperOptions == null ? void 0 : popperOptions.modifiers) || []);\n    instance.popperInstance = createPopper(computedReference, popper, Object.assign({}, popperOptions, {\n      placement: placement,\n      onFirstUpdate: onFirstUpdate,\n      modifiers: modifiers\n    }));\n  }\n\n  function destroyPopperInstance() {\n    if (instance.popperInstance) {\n      instance.popperInstance.destroy();\n      instance.popperInstance = null;\n    }\n  }\n\n  function mount() {\n    var appendTo = instance.props.appendTo;\n    var parentNode; // By default, we'll append the popper to the triggerTargets's parentNode so\n    // it's directly after the reference element so the elements inside the\n    // tippy can be tabbed to\n    // If there are clipping issues, the user can specify a different appendTo\n    // and ensure focus management is handled correctly manually\n\n    var node = getCurrentTarget();\n\n    if (instance.props.interactive && appendTo === TIPPY_DEFAULT_APPEND_TO || appendTo === 'parent') {\n      parentNode = node.parentNode;\n    } else {\n      parentNode = invokeWithArgsOrReturn(appendTo, [node]);\n    } // The popper element needs to exist on the DOM before its position can be\n    // updated as Popper needs to read its dimensions\n\n\n    if (!parentNode.contains(popper)) {\n      parentNode.appendChild(popper);\n    }\n\n    instance.state.isMounted = true;\n    createPopperInstance();\n    /* istanbul ignore else */\n\n    if (process.env.NODE_ENV !== \"production\") {\n      // Accessibility check\n      warnWhen(instance.props.interactive && appendTo === defaultProps.appendTo && node.nextElementSibling !== popper, ['Interactive tippy element may not be accessible via keyboard', 'navigation because it is not directly after the reference element', 'in the DOM source order.', '\\n\\n', 'Using a wrapper <div> or <span> tag around the reference element', 'solves this by creating a new parentNode context.', '\\n\\n', 'Specifying `appendTo: document.body` silences this warning, but it', 'assumes you are using a focus management solution to handle', 'keyboard navigation.', '\\n\\n', 'See: https://atomiks.github.io/tippyjs/v6/accessibility/#interactivity'].join(' '));\n    }\n  }\n\n  function getNestedPopperTree() {\n    return arrayFrom(popper.querySelectorAll('[data-tippy-root]'));\n  }\n\n  function scheduleShow(event) {\n    instance.clearDelayTimeouts();\n\n    if (event) {\n      invokeHook('onTrigger', [instance, event]);\n    }\n\n    addDocumentPress();\n    var delay = getDelay(true);\n\n    var _getNormalizedTouchSe = getNormalizedTouchSettings(),\n        touchValue = _getNormalizedTouchSe[0],\n        touchDelay = _getNormalizedTouchSe[1];\n\n    if (currentInput.isTouch && touchValue === 'hold' && touchDelay) {\n      delay = touchDelay;\n    }\n\n    if (delay) {\n      showTimeout = setTimeout(function () {\n        instance.show();\n      }, delay);\n    } else {\n      instance.show();\n    }\n  }\n\n  function scheduleHide(event) {\n    instance.clearDelayTimeouts();\n    invokeHook('onUntrigger', [instance, event]);\n\n    if (!instance.state.isVisible) {\n      removeDocumentPress();\n      return;\n    } // For interactive tippies, scheduleHide is added to a document.body handler\n    // from onMouseLeave so must intercept scheduled hides from mousemove/leave\n    // events when trigger contains mouseenter and click, and the tip is\n    // currently shown as a result of a click.\n\n\n    if (instance.props.trigger.indexOf('mouseenter') >= 0 && instance.props.trigger.indexOf('click') >= 0 && ['mouseleave', 'mousemove'].indexOf(event.type) >= 0 && isVisibleFromClick) {\n      return;\n    }\n\n    var delay = getDelay(false);\n\n    if (delay) {\n      hideTimeout = setTimeout(function () {\n        if (instance.state.isVisible) {\n          instance.hide();\n        }\n      }, delay);\n    } else {\n      // Fixes a `transitionend` problem when it fires 1 frame too\n      // late sometimes, we don't want hide() to be called.\n      scheduleHideAnimationFrame = requestAnimationFrame(function () {\n        instance.hide();\n      });\n    }\n  } // ===========================================================================\n  // 🔑 Public methods\n  // ===========================================================================\n\n\n  function enable() {\n    instance.state.isEnabled = true;\n  }\n\n  function disable() {\n    // Disabling the instance should also hide it\n    // https://github.com/atomiks/tippy.js-react/issues/106\n    instance.hide();\n    instance.state.isEnabled = false;\n  }\n\n  function clearDelayTimeouts() {\n    clearTimeout(showTimeout);\n    clearTimeout(hideTimeout);\n    cancelAnimationFrame(scheduleHideAnimationFrame);\n  }\n\n  function setProps(partialProps) {\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== \"production\") {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('setProps'));\n    }\n\n    if (instance.state.isDestroyed) {\n      return;\n    }\n\n    invokeHook('onBeforeUpdate', [instance, partialProps]);\n    removeListeners();\n    var prevProps = instance.props;\n    var nextProps = evaluateProps(reference, Object.assign({}, prevProps, removeUndefinedProps(partialProps), {\n      ignoreAttributes: true\n    }));\n    instance.props = nextProps;\n    addListeners();\n\n    if (prevProps.interactiveDebounce !== nextProps.interactiveDebounce) {\n      cleanupInteractiveMouseListeners();\n      debouncedOnMouseMove = debounce(onMouseMove, nextProps.interactiveDebounce);\n    } // Ensure stale aria-expanded attributes are removed\n\n\n    if (prevProps.triggerTarget && !nextProps.triggerTarget) {\n      normalizeToArray(prevProps.triggerTarget).forEach(function (node) {\n        node.removeAttribute('aria-expanded');\n      });\n    } else if (nextProps.triggerTarget) {\n      reference.removeAttribute('aria-expanded');\n    }\n\n    handleAriaExpandedAttribute();\n    handleStyles();\n\n    if (onUpdate) {\n      onUpdate(prevProps, nextProps);\n    }\n\n    if (instance.popperInstance) {\n      createPopperInstance(); // Fixes an issue with nested tippies if they are all getting re-rendered,\n      // and the nested ones get re-rendered first.\n      // https://github.com/atomiks/tippyjs-react/issues/177\n      // TODO: find a cleaner / more efficient solution(!)\n\n      getNestedPopperTree().forEach(function (nestedPopper) {\n        // React (and other UI libs likely) requires a rAF wrapper as it flushes\n        // its work in one\n        requestAnimationFrame(nestedPopper._tippy.popperInstance.forceUpdate);\n      });\n    }\n\n    invokeHook('onAfterUpdate', [instance, partialProps]);\n  }\n\n  function setContent(content) {\n    instance.setProps({\n      content: content\n    });\n  }\n\n  function show() {\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== \"production\") {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('show'));\n    } // Early bail-out\n\n\n    var isAlreadyVisible = instance.state.isVisible;\n    var isDestroyed = instance.state.isDestroyed;\n    var isDisabled = !instance.state.isEnabled;\n    var isTouchAndTouchDisabled = currentInput.isTouch && !instance.props.touch;\n    var duration = getValueAtIndexOrReturn(instance.props.duration, 0, defaultProps.duration);\n\n    if (isAlreadyVisible || isDestroyed || isDisabled || isTouchAndTouchDisabled) {\n      return;\n    } // Normalize `disabled` behavior across browsers.\n    // Firefox allows events on disabled elements, but Chrome doesn't.\n    // Using a wrapper element (i.e. <span>) is recommended.\n\n\n    if (getCurrentTarget().hasAttribute('disabled')) {\n      return;\n    }\n\n    invokeHook('onShow', [instance], false);\n\n    if (instance.props.onShow(instance) === false) {\n      return;\n    }\n\n    instance.state.isVisible = true;\n\n    if (getIsDefaultRenderFn()) {\n      popper.style.visibility = 'visible';\n    }\n\n    handleStyles();\n    addDocumentPress();\n\n    if (!instance.state.isMounted) {\n      popper.style.transition = 'none';\n    } // If flipping to the opposite side after hiding at least once, the\n    // animation will use the wrong placement without resetting the duration\n\n\n    if (getIsDefaultRenderFn()) {\n      var _getDefaultTemplateCh2 = getDefaultTemplateChildren(),\n          box = _getDefaultTemplateCh2.box,\n          content = _getDefaultTemplateCh2.content;\n\n      setTransitionDuration([box, content], 0);\n    }\n\n    onFirstUpdate = function onFirstUpdate() {\n      var _instance$popperInsta2;\n\n      if (!instance.state.isVisible || ignoreOnFirstUpdate) {\n        return;\n      }\n\n      ignoreOnFirstUpdate = true; // reflow\n\n      void popper.offsetHeight;\n      popper.style.transition = instance.props.moveTransition;\n\n      if (getIsDefaultRenderFn() && instance.props.animation) {\n        var _getDefaultTemplateCh3 = getDefaultTemplateChildren(),\n            _box = _getDefaultTemplateCh3.box,\n            _content = _getDefaultTemplateCh3.content;\n\n        setTransitionDuration([_box, _content], duration);\n        setVisibilityState([_box, _content], 'visible');\n      }\n\n      handleAriaContentAttribute();\n      handleAriaExpandedAttribute();\n      pushIfUnique(mountedInstances, instance); // certain modifiers (e.g. `maxSize`) require a second update after the\n      // popper has been positioned for the first time\n\n      (_instance$popperInsta2 = instance.popperInstance) == null ? void 0 : _instance$popperInsta2.forceUpdate();\n      invokeHook('onMount', [instance]);\n\n      if (instance.props.animation && getIsDefaultRenderFn()) {\n        onTransitionedIn(duration, function () {\n          instance.state.isShown = true;\n          invokeHook('onShown', [instance]);\n        });\n      }\n    };\n\n    mount();\n  }\n\n  function hide() {\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== \"production\") {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('hide'));\n    } // Early bail-out\n\n\n    var isAlreadyHidden = !instance.state.isVisible;\n    var isDestroyed = instance.state.isDestroyed;\n    var isDisabled = !instance.state.isEnabled;\n    var duration = getValueAtIndexOrReturn(instance.props.duration, 1, defaultProps.duration);\n\n    if (isAlreadyHidden || isDestroyed || isDisabled) {\n      return;\n    }\n\n    invokeHook('onHide', [instance], false);\n\n    if (instance.props.onHide(instance) === false) {\n      return;\n    }\n\n    instance.state.isVisible = false;\n    instance.state.isShown = false;\n    ignoreOnFirstUpdate = false;\n    isVisibleFromClick = false;\n\n    if (getIsDefaultRenderFn()) {\n      popper.style.visibility = 'hidden';\n    }\n\n    cleanupInteractiveMouseListeners();\n    removeDocumentPress();\n    handleStyles(true);\n\n    if (getIsDefaultRenderFn()) {\n      var _getDefaultTemplateCh4 = getDefaultTemplateChildren(),\n          box = _getDefaultTemplateCh4.box,\n          content = _getDefaultTemplateCh4.content;\n\n      if (instance.props.animation) {\n        setTransitionDuration([box, content], duration);\n        setVisibilityState([box, content], 'hidden');\n      }\n    }\n\n    handleAriaContentAttribute();\n    handleAriaExpandedAttribute();\n\n    if (instance.props.animation) {\n      if (getIsDefaultRenderFn()) {\n        onTransitionedOut(duration, instance.unmount);\n      }\n    } else {\n      instance.unmount();\n    }\n  }\n\n  function hideWithInteractivity(event) {\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== \"production\") {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('hideWithInteractivity'));\n    }\n\n    getDocument().addEventListener('mousemove', debouncedOnMouseMove);\n    pushIfUnique(mouseMoveListeners, debouncedOnMouseMove);\n    debouncedOnMouseMove(event);\n  }\n\n  function unmount() {\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== \"production\") {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('unmount'));\n    }\n\n    if (instance.state.isVisible) {\n      instance.hide();\n    }\n\n    if (!instance.state.isMounted) {\n      return;\n    }\n\n    destroyPopperInstance(); // If a popper is not interactive, it will be appended outside the popper\n    // tree by default. This seems mainly for interactive tippies, but we should\n    // find a workaround if possible\n\n    getNestedPopperTree().forEach(function (nestedPopper) {\n      nestedPopper._tippy.unmount();\n    });\n\n    if (popper.parentNode) {\n      popper.parentNode.removeChild(popper);\n    }\n\n    mountedInstances = mountedInstances.filter(function (i) {\n      return i !== instance;\n    });\n    instance.state.isMounted = false;\n    invokeHook('onHidden', [instance]);\n  }\n\n  function destroy() {\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== \"production\") {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('destroy'));\n    }\n\n    if (instance.state.isDestroyed) {\n      return;\n    }\n\n    instance.clearDelayTimeouts();\n    instance.unmount();\n    removeListeners();\n    delete reference._tippy;\n    instance.state.isDestroyed = true;\n    invokeHook('onDestroy', [instance]);\n  }\n}\n\nfunction tippy(targets, optionalProps) {\n  if (optionalProps === void 0) {\n    optionalProps = {};\n  }\n\n  var plugins = defaultProps.plugins.concat(optionalProps.plugins || []);\n  /* istanbul ignore else */\n\n  if (process.env.NODE_ENV !== \"production\") {\n    validateTargets(targets);\n    validateProps(optionalProps, plugins);\n  }\n\n  bindGlobalEventListeners();\n  var passedProps = Object.assign({}, optionalProps, {\n    plugins: plugins\n  });\n  var elements = getArrayOfElements(targets);\n  /* istanbul ignore else */\n\n  if (process.env.NODE_ENV !== \"production\") {\n    var isSingleContentElement = isElement(passedProps.content);\n    var isMoreThanOneReferenceElement = elements.length > 1;\n    warnWhen(isSingleContentElement && isMoreThanOneReferenceElement, ['tippy() was passed an Element as the `content` prop, but more than', 'one tippy instance was created by this invocation. This means the', 'content element will only be appended to the last tippy instance.', '\\n\\n', 'Instead, pass the .innerHTML of the element, or use a function that', 'returns a cloned version of the element instead.', '\\n\\n', '1) content: element.innerHTML\\n', '2) content: () => element.cloneNode(true)'].join(' '));\n  }\n\n  var instances = elements.reduce(function (acc, reference) {\n    var instance = reference && createTippy(reference, passedProps);\n\n    if (instance) {\n      acc.push(instance);\n    }\n\n    return acc;\n  }, []);\n  return isElement(targets) ? instances[0] : instances;\n}\n\ntippy.defaultProps = defaultProps;\ntippy.setDefaultProps = setDefaultProps;\ntippy.currentInput = currentInput;\nvar hideAll = function hideAll(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      excludedReferenceOrInstance = _ref.exclude,\n      duration = _ref.duration;\n\n  mountedInstances.forEach(function (instance) {\n    var isExcluded = false;\n\n    if (excludedReferenceOrInstance) {\n      isExcluded = isReferenceElement(excludedReferenceOrInstance) ? instance.reference === excludedReferenceOrInstance : instance.popper === excludedReferenceOrInstance.popper;\n    }\n\n    if (!isExcluded) {\n      var originalDuration = instance.props.duration;\n      instance.setProps({\n        duration: duration\n      });\n      instance.hide();\n\n      if (!instance.state.isDestroyed) {\n        instance.setProps({\n          duration: originalDuration\n        });\n      }\n    }\n  });\n};\n\n// every time the popper is destroyed (i.e. a new target), removing the styles\n// and causing transitions to break for singletons when the console is open, but\n// most notably for non-transform styles being used, `gpuAcceleration: false`.\n\nvar applyStylesModifier = Object.assign({}, applyStyles, {\n  effect: function effect(_ref) {\n    var state = _ref.state;\n    var initialStyles = {\n      popper: {\n        position: state.options.strategy,\n        left: '0',\n        top: '0',\n        margin: '0'\n      },\n      arrow: {\n        position: 'absolute'\n      },\n      reference: {}\n    };\n    Object.assign(state.elements.popper.style, initialStyles.popper);\n    state.styles = initialStyles;\n\n    if (state.elements.arrow) {\n      Object.assign(state.elements.arrow.style, initialStyles.arrow);\n    } // intentionally return no cleanup function\n    // return () => { ... }\n\n  }\n});\n\nvar createSingleton = function createSingleton(tippyInstances, optionalProps) {\n  var _optionalProps$popper;\n\n  if (optionalProps === void 0) {\n    optionalProps = {};\n  }\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    errorWhen(!Array.isArray(tippyInstances), ['The first argument passed to createSingleton() must be an array of', 'tippy instances. The passed value was', String(tippyInstances)].join(' '));\n  }\n\n  var individualInstances = tippyInstances;\n  var references = [];\n  var triggerTargets = [];\n  var currentTarget;\n  var overrides = optionalProps.overrides;\n  var interceptSetPropsCleanups = [];\n  var shownOnCreate = false;\n\n  function setTriggerTargets() {\n    triggerTargets = individualInstances.map(function (instance) {\n      return normalizeToArray(instance.props.triggerTarget || instance.reference);\n    }).reduce(function (acc, item) {\n      return acc.concat(item);\n    }, []);\n  }\n\n  function setReferences() {\n    references = individualInstances.map(function (instance) {\n      return instance.reference;\n    });\n  }\n\n  function enableInstances(isEnabled) {\n    individualInstances.forEach(function (instance) {\n      if (isEnabled) {\n        instance.enable();\n      } else {\n        instance.disable();\n      }\n    });\n  }\n\n  function interceptSetProps(singleton) {\n    return individualInstances.map(function (instance) {\n      var originalSetProps = instance.setProps;\n\n      instance.setProps = function (props) {\n        originalSetProps(props);\n\n        if (instance.reference === currentTarget) {\n          singleton.setProps(props);\n        }\n      };\n\n      return function () {\n        instance.setProps = originalSetProps;\n      };\n    });\n  } // have to pass singleton, as it maybe undefined on first call\n\n\n  function prepareInstance(singleton, target) {\n    var index = triggerTargets.indexOf(target); // bail-out\n\n    if (target === currentTarget) {\n      return;\n    }\n\n    currentTarget = target;\n    var overrideProps = (overrides || []).concat('content').reduce(function (acc, prop) {\n      acc[prop] = individualInstances[index].props[prop];\n      return acc;\n    }, {});\n    singleton.setProps(Object.assign({}, overrideProps, {\n      getReferenceClientRect: typeof overrideProps.getReferenceClientRect === 'function' ? overrideProps.getReferenceClientRect : function () {\n        var _references$index;\n\n        return (_references$index = references[index]) == null ? void 0 : _references$index.getBoundingClientRect();\n      }\n    }));\n  }\n\n  enableInstances(false);\n  setReferences();\n  setTriggerTargets();\n  var plugin = {\n    fn: function fn() {\n      return {\n        onDestroy: function onDestroy() {\n          enableInstances(true);\n        },\n        onHidden: function onHidden() {\n          currentTarget = null;\n        },\n        onClickOutside: function onClickOutside(instance) {\n          if (instance.props.showOnCreate && !shownOnCreate) {\n            shownOnCreate = true;\n            currentTarget = null;\n          }\n        },\n        onShow: function onShow(instance) {\n          if (instance.props.showOnCreate && !shownOnCreate) {\n            shownOnCreate = true;\n            prepareInstance(instance, references[0]);\n          }\n        },\n        onTrigger: function onTrigger(instance, event) {\n          prepareInstance(instance, event.currentTarget);\n        }\n      };\n    }\n  };\n  var singleton = tippy(div(), Object.assign({}, removeProperties(optionalProps, ['overrides']), {\n    plugins: [plugin].concat(optionalProps.plugins || []),\n    triggerTarget: triggerTargets,\n    popperOptions: Object.assign({}, optionalProps.popperOptions, {\n      modifiers: [].concat(((_optionalProps$popper = optionalProps.popperOptions) == null ? void 0 : _optionalProps$popper.modifiers) || [], [applyStylesModifier])\n    })\n  }));\n  var originalShow = singleton.show;\n\n  singleton.show = function (target) {\n    originalShow(); // first time, showOnCreate or programmatic call with no params\n    // default to showing first instance\n\n    if (!currentTarget && target == null) {\n      return prepareInstance(singleton, references[0]);\n    } // triggered from event (do nothing as prepareInstance already called by onTrigger)\n    // programmatic call with no params when already visible (do nothing again)\n\n\n    if (currentTarget && target == null) {\n      return;\n    } // target is index of instance\n\n\n    if (typeof target === 'number') {\n      return references[target] && prepareInstance(singleton, references[target]);\n    } // target is a child tippy instance\n\n\n    if (individualInstances.indexOf(target) >= 0) {\n      var ref = target.reference;\n      return prepareInstance(singleton, ref);\n    } // target is a ReferenceElement\n\n\n    if (references.indexOf(target) >= 0) {\n      return prepareInstance(singleton, target);\n    }\n  };\n\n  singleton.showNext = function () {\n    var first = references[0];\n\n    if (!currentTarget) {\n      return singleton.show(0);\n    }\n\n    var index = references.indexOf(currentTarget);\n    singleton.show(references[index + 1] || first);\n  };\n\n  singleton.showPrevious = function () {\n    var last = references[references.length - 1];\n\n    if (!currentTarget) {\n      return singleton.show(last);\n    }\n\n    var index = references.indexOf(currentTarget);\n    var target = references[index - 1] || last;\n    singleton.show(target);\n  };\n\n  var originalSetProps = singleton.setProps;\n\n  singleton.setProps = function (props) {\n    overrides = props.overrides || overrides;\n    originalSetProps(props);\n  };\n\n  singleton.setInstances = function (nextInstances) {\n    enableInstances(true);\n    interceptSetPropsCleanups.forEach(function (fn) {\n      return fn();\n    });\n    individualInstances = nextInstances;\n    enableInstances(false);\n    setReferences();\n    setTriggerTargets();\n    interceptSetPropsCleanups = interceptSetProps(singleton);\n    singleton.setProps({\n      triggerTarget: triggerTargets\n    });\n  };\n\n  interceptSetPropsCleanups = interceptSetProps(singleton);\n  return singleton;\n};\n\nvar BUBBLING_EVENTS_MAP = {\n  mouseover: 'mouseenter',\n  focusin: 'focus',\n  click: 'click'\n};\n/**\n * Creates a delegate instance that controls the creation of tippy instances\n * for child elements (`target` CSS selector).\n */\n\nfunction delegate(targets, props) {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    errorWhen(!(props && props.target), ['You must specity a `target` prop indicating a CSS selector string matching', 'the target elements that should receive a tippy.'].join(' '));\n  }\n\n  var listeners = [];\n  var childTippyInstances = [];\n  var disabled = false;\n  var target = props.target;\n  var nativeProps = removeProperties(props, ['target']);\n  var parentProps = Object.assign({}, nativeProps, {\n    trigger: 'manual',\n    touch: false\n  });\n  var childProps = Object.assign({\n    touch: defaultProps.touch\n  }, nativeProps, {\n    showOnCreate: true\n  });\n  var returnValue = tippy(targets, parentProps);\n  var normalizedReturnValue = normalizeToArray(returnValue);\n\n  function onTrigger(event) {\n    if (!event.target || disabled) {\n      return;\n    }\n\n    var targetNode = event.target.closest(target);\n\n    if (!targetNode) {\n      return;\n    } // Get relevant trigger with fallbacks:\n    // 1. Check `data-tippy-trigger` attribute on target node\n    // 2. Fallback to `trigger` passed to `delegate()`\n    // 3. Fallback to `defaultProps.trigger`\n\n\n    var trigger = targetNode.getAttribute('data-tippy-trigger') || props.trigger || defaultProps.trigger; // @ts-ignore\n\n    if (targetNode._tippy) {\n      return;\n    }\n\n    if (event.type === 'touchstart' && typeof childProps.touch === 'boolean') {\n      return;\n    }\n\n    if (event.type !== 'touchstart' && trigger.indexOf(BUBBLING_EVENTS_MAP[event.type]) < 0) {\n      return;\n    }\n\n    var instance = tippy(targetNode, childProps);\n\n    if (instance) {\n      childTippyInstances = childTippyInstances.concat(instance);\n    }\n  }\n\n  function on(node, eventType, handler, options) {\n    if (options === void 0) {\n      options = false;\n    }\n\n    node.addEventListener(eventType, handler, options);\n    listeners.push({\n      node: node,\n      eventType: eventType,\n      handler: handler,\n      options: options\n    });\n  }\n\n  function addEventListeners(instance) {\n    var reference = instance.reference;\n    on(reference, 'touchstart', onTrigger, TOUCH_OPTIONS);\n    on(reference, 'mouseover', onTrigger);\n    on(reference, 'focusin', onTrigger);\n    on(reference, 'click', onTrigger);\n  }\n\n  function removeEventListeners() {\n    listeners.forEach(function (_ref) {\n      var node = _ref.node,\n          eventType = _ref.eventType,\n          handler = _ref.handler,\n          options = _ref.options;\n      node.removeEventListener(eventType, handler, options);\n    });\n    listeners = [];\n  }\n\n  function applyMutations(instance) {\n    var originalDestroy = instance.destroy;\n    var originalEnable = instance.enable;\n    var originalDisable = instance.disable;\n\n    instance.destroy = function (shouldDestroyChildInstances) {\n      if (shouldDestroyChildInstances === void 0) {\n        shouldDestroyChildInstances = true;\n      }\n\n      if (shouldDestroyChildInstances) {\n        childTippyInstances.forEach(function (instance) {\n          instance.destroy();\n        });\n      }\n\n      childTippyInstances = [];\n      removeEventListeners();\n      originalDestroy();\n    };\n\n    instance.enable = function () {\n      originalEnable();\n      childTippyInstances.forEach(function (instance) {\n        return instance.enable();\n      });\n      disabled = false;\n    };\n\n    instance.disable = function () {\n      originalDisable();\n      childTippyInstances.forEach(function (instance) {\n        return instance.disable();\n      });\n      disabled = true;\n    };\n\n    addEventListeners(instance);\n  }\n\n  normalizedReturnValue.forEach(applyMutations);\n  return returnValue;\n}\n\nvar animateFill = {\n  name: 'animateFill',\n  defaultValue: false,\n  fn: function fn(instance) {\n    var _instance$props$rende;\n\n    // @ts-ignore\n    if (!((_instance$props$rende = instance.props.render) != null && _instance$props$rende.$$tippy)) {\n      if (process.env.NODE_ENV !== \"production\") {\n        errorWhen(instance.props.animateFill, 'The `animateFill` plugin requires the default render function.');\n      }\n\n      return {};\n    }\n\n    var _getChildren = getChildren(instance.popper),\n        box = _getChildren.box,\n        content = _getChildren.content;\n\n    var backdrop = instance.props.animateFill ? createBackdropElement() : null;\n    return {\n      onCreate: function onCreate() {\n        if (backdrop) {\n          box.insertBefore(backdrop, box.firstElementChild);\n          box.setAttribute('data-animatefill', '');\n          box.style.overflow = 'hidden';\n          instance.setProps({\n            arrow: false,\n            animation: 'shift-away'\n          });\n        }\n      },\n      onMount: function onMount() {\n        if (backdrop) {\n          var transitionDuration = box.style.transitionDuration;\n          var duration = Number(transitionDuration.replace('ms', '')); // The content should fade in after the backdrop has mostly filled the\n          // tooltip element. `clip-path` is the other alternative but is not\n          // well-supported and is buggy on some devices.\n\n          content.style.transitionDelay = Math.round(duration / 10) + \"ms\";\n          backdrop.style.transitionDuration = transitionDuration;\n          setVisibilityState([backdrop], 'visible');\n        }\n      },\n      onShow: function onShow() {\n        if (backdrop) {\n          backdrop.style.transitionDuration = '0ms';\n        }\n      },\n      onHide: function onHide() {\n        if (backdrop) {\n          setVisibilityState([backdrop], 'hidden');\n        }\n      }\n    };\n  }\n};\n\nfunction createBackdropElement() {\n  var backdrop = div();\n  backdrop.className = BACKDROP_CLASS;\n  setVisibilityState([backdrop], 'hidden');\n  return backdrop;\n}\n\nvar mouseCoords = {\n  clientX: 0,\n  clientY: 0\n};\nvar activeInstances = [];\n\nfunction storeMouseCoords(_ref) {\n  var clientX = _ref.clientX,\n      clientY = _ref.clientY;\n  mouseCoords = {\n    clientX: clientX,\n    clientY: clientY\n  };\n}\n\nfunction addMouseCoordsListener(doc) {\n  doc.addEventListener('mousemove', storeMouseCoords);\n}\n\nfunction removeMouseCoordsListener(doc) {\n  doc.removeEventListener('mousemove', storeMouseCoords);\n}\n\nvar followCursor = {\n  name: 'followCursor',\n  defaultValue: false,\n  fn: function fn(instance) {\n    var reference = instance.reference;\n    var doc = getOwnerDocument(instance.props.triggerTarget || reference);\n    var isInternalUpdate = false;\n    var wasFocusEvent = false;\n    var isUnmounted = true;\n    var prevProps = instance.props;\n\n    function getIsInitialBehavior() {\n      return instance.props.followCursor === 'initial' && instance.state.isVisible;\n    }\n\n    function addListener() {\n      doc.addEventListener('mousemove', onMouseMove);\n    }\n\n    function removeListener() {\n      doc.removeEventListener('mousemove', onMouseMove);\n    }\n\n    function unsetGetReferenceClientRect() {\n      isInternalUpdate = true;\n      instance.setProps({\n        getReferenceClientRect: null\n      });\n      isInternalUpdate = false;\n    }\n\n    function onMouseMove(event) {\n      // If the instance is interactive, avoid updating the position unless it's\n      // over the reference element\n      var isCursorOverReference = event.target ? reference.contains(event.target) : true;\n      var followCursor = instance.props.followCursor;\n      var clientX = event.clientX,\n          clientY = event.clientY;\n      var rect = reference.getBoundingClientRect();\n      var relativeX = clientX - rect.left;\n      var relativeY = clientY - rect.top;\n\n      if (isCursorOverReference || !instance.props.interactive) {\n        instance.setProps({\n          // @ts-ignore - unneeded DOMRect properties\n          getReferenceClientRect: function getReferenceClientRect() {\n            var rect = reference.getBoundingClientRect();\n            var x = clientX;\n            var y = clientY;\n\n            if (followCursor === 'initial') {\n              x = rect.left + relativeX;\n              y = rect.top + relativeY;\n            }\n\n            var top = followCursor === 'horizontal' ? rect.top : y;\n            var right = followCursor === 'vertical' ? rect.right : x;\n            var bottom = followCursor === 'horizontal' ? rect.bottom : y;\n            var left = followCursor === 'vertical' ? rect.left : x;\n            return {\n              width: right - left,\n              height: bottom - top,\n              top: top,\n              right: right,\n              bottom: bottom,\n              left: left\n            };\n          }\n        });\n      }\n    }\n\n    function create() {\n      if (instance.props.followCursor) {\n        activeInstances.push({\n          instance: instance,\n          doc: doc\n        });\n        addMouseCoordsListener(doc);\n      }\n    }\n\n    function destroy() {\n      activeInstances = activeInstances.filter(function (data) {\n        return data.instance !== instance;\n      });\n\n      if (activeInstances.filter(function (data) {\n        return data.doc === doc;\n      }).length === 0) {\n        removeMouseCoordsListener(doc);\n      }\n    }\n\n    return {\n      onCreate: create,\n      onDestroy: destroy,\n      onBeforeUpdate: function onBeforeUpdate() {\n        prevProps = instance.props;\n      },\n      onAfterUpdate: function onAfterUpdate(_, _ref2) {\n        var followCursor = _ref2.followCursor;\n\n        if (isInternalUpdate) {\n          return;\n        }\n\n        if (followCursor !== undefined && prevProps.followCursor !== followCursor) {\n          destroy();\n\n          if (followCursor) {\n            create();\n\n            if (instance.state.isMounted && !wasFocusEvent && !getIsInitialBehavior()) {\n              addListener();\n            }\n          } else {\n            removeListener();\n            unsetGetReferenceClientRect();\n          }\n        }\n      },\n      onMount: function onMount() {\n        if (instance.props.followCursor && !wasFocusEvent) {\n          if (isUnmounted) {\n            onMouseMove(mouseCoords);\n            isUnmounted = false;\n          }\n\n          if (!getIsInitialBehavior()) {\n            addListener();\n          }\n        }\n      },\n      onTrigger: function onTrigger(_, event) {\n        if (isMouseEvent(event)) {\n          mouseCoords = {\n            clientX: event.clientX,\n            clientY: event.clientY\n          };\n        }\n\n        wasFocusEvent = event.type === 'focus';\n      },\n      onHidden: function onHidden() {\n        if (instance.props.followCursor) {\n          unsetGetReferenceClientRect();\n          removeListener();\n          isUnmounted = true;\n        }\n      }\n    };\n  }\n};\n\nfunction getProps(props, modifier) {\n  var _props$popperOptions;\n\n  return {\n    popperOptions: Object.assign({}, props.popperOptions, {\n      modifiers: [].concat((((_props$popperOptions = props.popperOptions) == null ? void 0 : _props$popperOptions.modifiers) || []).filter(function (_ref) {\n        var name = _ref.name;\n        return name !== modifier.name;\n      }), [modifier])\n    })\n  };\n}\n\nvar inlinePositioning = {\n  name: 'inlinePositioning',\n  defaultValue: false,\n  fn: function fn(instance) {\n    var reference = instance.reference;\n\n    function isEnabled() {\n      return !!instance.props.inlinePositioning;\n    }\n\n    var placement;\n    var cursorRectIndex = -1;\n    var isInternalUpdate = false;\n    var triedPlacements = [];\n    var modifier = {\n      name: 'tippyInlinePositioning',\n      enabled: true,\n      phase: 'afterWrite',\n      fn: function fn(_ref2) {\n        var state = _ref2.state;\n\n        if (isEnabled()) {\n          if (triedPlacements.indexOf(state.placement) !== -1) {\n            triedPlacements = [];\n          }\n\n          if (placement !== state.placement && triedPlacements.indexOf(state.placement) === -1) {\n            triedPlacements.push(state.placement);\n            instance.setProps({\n              // @ts-ignore - unneeded DOMRect properties\n              getReferenceClientRect: function getReferenceClientRect() {\n                return _getReferenceClientRect(state.placement);\n              }\n            });\n          }\n\n          placement = state.placement;\n        }\n      }\n    };\n\n    function _getReferenceClientRect(placement) {\n      return getInlineBoundingClientRect(getBasePlacement(placement), reference.getBoundingClientRect(), arrayFrom(reference.getClientRects()), cursorRectIndex);\n    }\n\n    function setInternalProps(partialProps) {\n      isInternalUpdate = true;\n      instance.setProps(partialProps);\n      isInternalUpdate = false;\n    }\n\n    function addModifier() {\n      if (!isInternalUpdate) {\n        setInternalProps(getProps(instance.props, modifier));\n      }\n    }\n\n    return {\n      onCreate: addModifier,\n      onAfterUpdate: addModifier,\n      onTrigger: function onTrigger(_, event) {\n        if (isMouseEvent(event)) {\n          var rects = arrayFrom(instance.reference.getClientRects());\n          var cursorRect = rects.find(function (rect) {\n            return rect.left - 2 <= event.clientX && rect.right + 2 >= event.clientX && rect.top - 2 <= event.clientY && rect.bottom + 2 >= event.clientY;\n          });\n          var index = rects.indexOf(cursorRect);\n          cursorRectIndex = index > -1 ? index : cursorRectIndex;\n        }\n      },\n      onHidden: function onHidden() {\n        cursorRectIndex = -1;\n      }\n    };\n  }\n};\nfunction getInlineBoundingClientRect(currentBasePlacement, boundingRect, clientRects, cursorRectIndex) {\n  // Not an inline element, or placement is not yet known\n  if (clientRects.length < 2 || currentBasePlacement === null) {\n    return boundingRect;\n  } // There are two rects and they are disjoined\n\n\n  if (clientRects.length === 2 && cursorRectIndex >= 0 && clientRects[0].left > clientRects[1].right) {\n    return clientRects[cursorRectIndex] || boundingRect;\n  }\n\n  switch (currentBasePlacement) {\n    case 'top':\n    case 'bottom':\n      {\n        var firstRect = clientRects[0];\n        var lastRect = clientRects[clientRects.length - 1];\n        var isTop = currentBasePlacement === 'top';\n        var top = firstRect.top;\n        var bottom = lastRect.bottom;\n        var left = isTop ? firstRect.left : lastRect.left;\n        var right = isTop ? firstRect.right : lastRect.right;\n        var width = right - left;\n        var height = bottom - top;\n        return {\n          top: top,\n          bottom: bottom,\n          left: left,\n          right: right,\n          width: width,\n          height: height\n        };\n      }\n\n    case 'left':\n    case 'right':\n      {\n        var minLeft = Math.min.apply(Math, clientRects.map(function (rects) {\n          return rects.left;\n        }));\n        var maxRight = Math.max.apply(Math, clientRects.map(function (rects) {\n          return rects.right;\n        }));\n        var measureRects = clientRects.filter(function (rect) {\n          return currentBasePlacement === 'left' ? rect.left === minLeft : rect.right === maxRight;\n        });\n        var _top = measureRects[0].top;\n        var _bottom = measureRects[measureRects.length - 1].bottom;\n        var _left = minLeft;\n        var _right = maxRight;\n\n        var _width = _right - _left;\n\n        var _height = _bottom - _top;\n\n        return {\n          top: _top,\n          bottom: _bottom,\n          left: _left,\n          right: _right,\n          width: _width,\n          height: _height\n        };\n      }\n\n    default:\n      {\n        return boundingRect;\n      }\n  }\n}\n\nvar sticky = {\n  name: 'sticky',\n  defaultValue: false,\n  fn: function fn(instance) {\n    var reference = instance.reference,\n        popper = instance.popper;\n\n    function getReference() {\n      return instance.popperInstance ? instance.popperInstance.state.elements.reference : reference;\n    }\n\n    function shouldCheck(value) {\n      return instance.props.sticky === true || instance.props.sticky === value;\n    }\n\n    var prevRefRect = null;\n    var prevPopRect = null;\n\n    function updatePosition() {\n      var currentRefRect = shouldCheck('reference') ? getReference().getBoundingClientRect() : null;\n      var currentPopRect = shouldCheck('popper') ? popper.getBoundingClientRect() : null;\n\n      if (currentRefRect && areRectsDifferent(prevRefRect, currentRefRect) || currentPopRect && areRectsDifferent(prevPopRect, currentPopRect)) {\n        if (instance.popperInstance) {\n          instance.popperInstance.update();\n        }\n      }\n\n      prevRefRect = currentRefRect;\n      prevPopRect = currentPopRect;\n\n      if (instance.state.isMounted) {\n        requestAnimationFrame(updatePosition);\n      }\n    }\n\n    return {\n      onMount: function onMount() {\n        if (instance.props.sticky) {\n          updatePosition();\n        }\n      }\n    };\n  }\n};\n\nfunction areRectsDifferent(rectA, rectB) {\n  if (rectA && rectB) {\n    return rectA.top !== rectB.top || rectA.right !== rectB.right || rectA.bottom !== rectB.bottom || rectA.left !== rectB.left;\n  }\n\n  return true;\n}\n\ntippy.setDefaultProps({\n  render: render\n});\n\nexport default tippy;\nexport { animateFill, createSingleton, delegate, followCursor, hideAll, inlinePositioning, ROUND_ARROW as roundArrow, sticky };\n//# sourceMappingURL=tippy.esm.js.map\n","export const ROUND_ARROW =\n  '<svg width=\"16\" height=\"6\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 6s1.796-.013 4.67-3.615C5.851.9 6.93.006 8 0c1.07-.006 2.148.887 3.343 2.385C14.233 6.005 16 6 16 6H0z\"></svg>';\n\nexport const BOX_CLASS = `__NAMESPACE_PREFIX__-box`;\nexport const CONTENT_CLASS = `__NAMESPACE_PREFIX__-content`;\nexport const BACKDROP_CLASS = `__NAMESPACE_PREFIX__-backdrop`;\nexport const ARROW_CLASS = `__NAMESPACE_PREFIX__-arrow`;\nexport const SVG_ARROW_CLASS = `__NAMESPACE_PREFIX__-svg-arrow`;\n\nexport const TOUCH_OPTIONS = {passive: true, capture: true};\n\nexport const TIPPY_DEFAULT_APPEND_TO = () => document.body;\n","import {BasePlacement, Placement} from './types';\n\nexport function hasOwnProperty(\n  obj: Record<string, unknown>,\n  key: string\n): boolean {\n  return {}.hasOwnProperty.call(obj, key);\n}\n\nexport function getValueAtIndexOrReturn<T>(\n  value: T | [T | null, T | null],\n  index: number,\n  defaultValue: T | [T, T]\n): T {\n  if (Array.isArray(value)) {\n    const v = value[index];\n    return v == null\n      ? Array.isArray(defaultValue)\n        ? defaultValue[index]\n        : defaultValue\n      : v;\n  }\n\n  return value;\n}\n\nexport function isType(value: any, type: string): boolean {\n  const str = {}.toString.call(value);\n  return str.indexOf('[object') === 0 && str.indexOf(`${type}]`) > -1;\n}\n\nexport function invokeWithArgsOrReturn(value: any, args: any[]): any {\n  return typeof value === 'function' ? value(...args) : value;\n}\n\nexport function debounce<T>(\n  fn: (arg: T) => void,\n  ms: number\n): (arg: T) => void {\n  // Avoid wrapping in `setTimeout` if ms is 0 anyway\n  if (ms === 0) {\n    return fn;\n  }\n\n  let timeout: any;\n\n  return (arg): void => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      fn(arg);\n    }, ms);\n  };\n}\n\nexport function removeProperties<T>(obj: T, keys: string[]): Partial<T> {\n  const clone = {...obj};\n  keys.forEach((key) => {\n    delete (clone as any)[key];\n  });\n  return clone;\n}\n\nexport function splitBySpaces(value: string): string[] {\n  return value.split(/\\s+/).filter(Boolean);\n}\n\nexport function normalizeToArray<T>(value: T | T[]): T[] {\n  return ([] as T[]).concat(value);\n}\n\nexport function pushIfUnique<T>(arr: T[], value: T): void {\n  if (arr.indexOf(value) === -1) {\n    arr.push(value);\n  }\n}\n\nexport function appendPxIfNumber(value: string | number): string {\n  return typeof value === 'number' ? `${value}px` : value;\n}\n\nexport function unique<T>(arr: T[]): T[] {\n  return arr.filter((item, index) => arr.indexOf(item) === index);\n}\n\nexport function getNumber(value: string | number): number {\n  return typeof value === 'number' ? value : parseFloat(value);\n}\n\nexport function getBasePlacement(placement: Placement): BasePlacement {\n  return placement.split('-')[0] as BasePlacement;\n}\n\nexport function arrayFrom(value: ArrayLike<any>): any[] {\n  return [].slice.call(value);\n}\n\nexport function removeUndefinedProps(\n  obj: Record<string, unknown>\n): Partial<Record<string, unknown>> {\n  return Object.keys(obj).reduce((acc, key) => {\n    if (obj[key] !== undefined) {\n      (acc as any)[key] = obj[key];\n    }\n\n    return acc;\n  }, {});\n}\n","import {ReferenceElement, Targets} from './types';\nimport {PopperTreeData} from './types-internal';\nimport {arrayFrom, isType, normalizeToArray, getBasePlacement} from './utils';\n\nexport function div(): HTMLDivElement {\n  return document.createElement('div');\n}\n\nexport function isElement(value: unknown): value is Element | DocumentFragment {\n  return ['Element', 'Fragment'].some((type) => isType(value, type));\n}\n\nexport function isNodeList(value: unknown): value is NodeList {\n  return isType(value, 'NodeList');\n}\n\nexport function isMouseEvent(value: unknown): value is MouseEvent {\n  return isType(value, 'MouseEvent');\n}\n\nexport function isReferenceElement(value: any): value is ReferenceElement {\n  return !!(value && value._tippy && value._tippy.reference === value);\n}\n\nexport function getArrayOfElements(value: Targets): Element[] {\n  if (isElement(value)) {\n    return [value];\n  }\n\n  if (isNodeList(value)) {\n    return arrayFrom(value);\n  }\n\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  return arrayFrom(document.querySelectorAll(value));\n}\n\nexport function setTransitionDuration(\n  els: (HTMLDivElement | null)[],\n  value: number\n): void {\n  els.forEach((el) => {\n    if (el) {\n      el.style.transitionDuration = `${value}ms`;\n    }\n  });\n}\n\nexport function setVisibilityState(\n  els: (HTMLDivElement | null)[],\n  state: 'visible' | 'hidden'\n): void {\n  els.forEach((el) => {\n    if (el) {\n      el.setAttribute('data-state', state);\n    }\n  });\n}\n\nexport function getOwnerDocument(\n  elementOrElements: Element | Element[]\n): Document {\n  const [element] = normalizeToArray(elementOrElements);\n\n  // Elements created via a <template> have an ownerDocument with no reference to the body\n  return element?.ownerDocument?.body ? element.ownerDocument : document;\n}\n\nexport function isCursorOutsideInteractiveBorder(\n  popperTreeData: PopperTreeData[],\n  event: MouseEvent\n): boolean {\n  const {clientX, clientY} = event;\n\n  return popperTreeData.every(({popperRect, popperState, props}) => {\n    const {interactiveBorder} = props;\n    const basePlacement = getBasePlacement(popperState.placement);\n    const offsetData = popperState.modifiersData.offset;\n\n    if (!offsetData) {\n      return true;\n    }\n\n    const topDistance = basePlacement === 'bottom' ? offsetData.top!.y : 0;\n    const bottomDistance = basePlacement === 'top' ? offsetData.bottom!.y : 0;\n    const leftDistance = basePlacement === 'right' ? offsetData.left!.x : 0;\n    const rightDistance = basePlacement === 'left' ? offsetData.right!.x : 0;\n\n    const exceedsTop =\n      popperRect.top - clientY + topDistance > interactiveBorder;\n    const exceedsBottom =\n      clientY - popperRect.bottom - bottomDistance > interactiveBorder;\n    const exceedsLeft =\n      popperRect.left - clientX + leftDistance > interactiveBorder;\n    const exceedsRight =\n      clientX - popperRect.right - rightDistance > interactiveBorder;\n\n    return exceedsTop || exceedsBottom || exceedsLeft || exceedsRight;\n  });\n}\n\nexport function updateTransitionEndListener(\n  box: HTMLDivElement,\n  action: 'add' | 'remove',\n  listener: (event: TransitionEvent) => void\n): void {\n  const method = `${action}EventListener` as\n    | 'addEventListener'\n    | 'removeEventListener';\n\n  // some browsers apparently support `transition` (unprefixed) but only fire\n  // `webkitTransitionEnd`...\n  ['transitionend', 'webkitTransitionEnd'].forEach((event) => {\n    box[method](event, listener as EventListener);\n  });\n}\n\n/**\n * Compared to xxx.contains, this function works for dom structures with shadow\n * dom\n */\nexport function actualContains(parent: Element, child: Element): boolean {\n  let target = child;\n  while (target) {\n    if (parent.contains(target)) {\n      return true;\n    }\n    target = (target.getRootNode?.() as any)?.host;\n  }\n  return false;\n}\n","import {TOUCH_OPTIONS} from './constants';\nimport {isReferenceElement} from './dom-utils';\n\nexport const currentInput = {isTouch: false};\nlet lastMouseMoveTime = 0;\n\n/**\n * When a `touchstart` event is fired, it's assumed the user is using touch\n * input. We'll bind a `mousemove` event listener to listen for mouse input in\n * the future. This way, the `isTouch` property is fully dynamic and will handle\n * hybrid devices that use a mix of touch + mouse input.\n */\nexport function onDocumentTouchStart(): void {\n  if (currentInput.isTouch) {\n    return;\n  }\n\n  currentInput.isTouch = true;\n\n  if (window.performance) {\n    document.addEventListener('mousemove', onDocumentMouseMove);\n  }\n}\n\n/**\n * When two `mousemove` event are fired consecutively within 20ms, it's assumed\n * the user is using mouse input again. `mousemove` can fire on touch devices as\n * well, but very rarely that quickly.\n */\nexport function onDocumentMouseMove(): void {\n  const now = performance.now();\n\n  if (now - lastMouseMoveTime < 20) {\n    currentInput.isTouch = false;\n\n    document.removeEventListener('mousemove', onDocumentMouseMove);\n  }\n\n  lastMouseMoveTime = now;\n}\n\n/**\n * When an element is in focus and has a tippy, leaving the tab/window and\n * returning causes it to show again. For mouse users this is unexpected, but\n * for keyboard use it makes sense.\n * TODO: find a better technique to solve this problem\n */\nexport function onWindowBlur(): void {\n  const activeElement = document.activeElement as HTMLElement | null;\n\n  if (isReferenceElement(activeElement)) {\n    const instance = activeElement._tippy!;\n\n    if (activeElement.blur && !instance.state.isVisible) {\n      activeElement.blur();\n    }\n  }\n}\n\nexport default function bindGlobalEventListeners(): void {\n  document.addEventListener('touchstart', onDocumentTouchStart, TOUCH_OPTIONS);\n  window.addEventListener('blur', onWindowBlur);\n}\n","export const isBrowser =\n  typeof window !== 'undefined' && typeof document !== 'undefined';\n\nexport const isIE11 = isBrowser\n  ? // @ts-ignore\n    !!window.msCrypto\n  : false;\n","import {Targets} from './types';\n\nexport function createMemoryLeakWarning(method: string): string {\n  const txt = method === 'destroy' ? 'n already-' : ' ';\n\n  return [\n    `${method}() was called on a${txt}destroyed instance. This is a no-op but`,\n    'indicates a potential memory leak.',\n  ].join(' ');\n}\n\nexport function clean(value: string): string {\n  const spacesAndTabs = /[ \\t]{2,}/g;\n  const lineStartWithSpaces = /^[ \\t]*/gm;\n\n  return value\n    .replace(spacesAndTabs, ' ')\n    .replace(lineStartWithSpaces, '')\n    .trim();\n}\n\nfunction getDevMessage(message: string): string {\n  return clean(`\n  %ctippy.js\n\n  %c${clean(message)}\n\n  %c👷‍ This is a development-only message. It will be removed in production.\n  `);\n}\n\nexport function getFormattedMessage(message: string): string[] {\n  return [\n    getDevMessage(message),\n    // title\n    'color: #00C584; font-size: 1.3em; font-weight: bold;',\n    // message\n    'line-height: 1.5',\n    // footer\n    'color: #a6a095;',\n  ];\n}\n\n// Assume warnings and errors never have the same message\nlet visitedMessages: Set<string>;\nif (__DEV__) {\n  resetVisitedMessages();\n}\n\nexport function resetVisitedMessages(): void {\n  visitedMessages = new Set();\n}\n\nexport function warnWhen(condition: boolean, message: string): void {\n  if (condition && !visitedMessages.has(message)) {\n    visitedMessages.add(message);\n    console.warn(...getFormattedMessage(message));\n  }\n}\n\nexport function errorWhen(condition: boolean, message: string): void {\n  if (condition && !visitedMessages.has(message)) {\n    visitedMessages.add(message);\n    console.error(...getFormattedMessage(message));\n  }\n}\n\nexport function validateTargets(targets: Targets): void {\n  const didPassFalsyValue = !targets;\n  const didPassPlainObject =\n    Object.prototype.toString.call(targets) === '[object Object]' &&\n    !(targets as any).addEventListener;\n\n  errorWhen(\n    didPassFalsyValue,\n    [\n      'tippy() was passed',\n      '`' + String(targets) + '`',\n      'as its targets (first) argument. Valid types are: String, Element,',\n      'Element[], or NodeList.',\n    ].join(' ')\n  );\n\n  errorWhen(\n    didPassPlainObject,\n    [\n      'tippy() was passed a plain object which is not supported as an argument',\n      'for virtual positioning. Use props.getReferenceClientRect instead.',\n    ].join(' ')\n  );\n}\n","import {DefaultProps, Plugin, Props, ReferenceElement, Tippy} from './types';\nimport {\n  hasOwnProperty,\n  removeProperties,\n  invokeWithArgsOrReturn,\n} from './utils';\nimport {warnWhen} from './validation';\nimport {TIPPY_DEFAULT_APPEND_TO} from './constants';\n\nconst pluginProps = {\n  animateFill: false,\n  followCursor: false,\n  inlinePositioning: false,\n  sticky: false,\n};\n\nconst renderProps = {\n  allowHTML: false,\n  animation: 'fade',\n  arrow: true,\n  content: '',\n  inertia: false,\n  maxWidth: 350,\n  role: 'tooltip',\n  theme: '',\n  zIndex: 9999,\n};\n\nexport const defaultProps: DefaultProps = {\n  appendTo: TIPPY_DEFAULT_APPEND_TO,\n  aria: {\n    content: 'auto',\n    expanded: 'auto',\n  },\n  delay: 0,\n  duration: [300, 250],\n  getReferenceClientRect: null,\n  hideOnClick: true,\n  ignoreAttributes: false,\n  interactive: false,\n  interactiveBorder: 2,\n  interactiveDebounce: 0,\n  moveTransition: '',\n  offset: [0, 10],\n  onAfterUpdate() {},\n  onBeforeUpdate() {},\n  onCreate() {},\n  onDestroy() {},\n  onHidden() {},\n  onHide() {},\n  onMount() {},\n  onShow() {},\n  onShown() {},\n  onTrigger() {},\n  onUntrigger() {},\n  onClickOutside() {},\n  placement: 'top',\n  plugins: [],\n  popperOptions: {},\n  render: null,\n  showOnCreate: false,\n  touch: true,\n  trigger: 'mouseenter focus',\n  triggerTarget: null,\n  ...pluginProps,\n  ...renderProps,\n};\n\nconst defaultKeys = Object.keys(defaultProps);\n\nexport const setDefaultProps: Tippy['setDefaultProps'] = (partialProps) => {\n  /* istanbul ignore else */\n  if (__DEV__) {\n    validateProps(partialProps, []);\n  }\n\n  const keys = Object.keys(partialProps) as Array<keyof DefaultProps>;\n  keys.forEach((key) => {\n    (defaultProps as any)[key] = partialProps[key];\n  });\n};\n\nexport function getExtendedPassedProps(\n  passedProps: Partial<Props> & Record<string, unknown>\n): Partial<Props> {\n  const plugins = passedProps.plugins || [];\n  const pluginProps = plugins.reduce<Record<string, unknown>>((acc, plugin) => {\n    const {name, defaultValue} = plugin;\n\n    if (name) {\n      acc[name] =\n        passedProps[name] !== undefined\n          ? passedProps[name]\n          : (defaultProps as any)[name] ?? defaultValue;\n    }\n\n    return acc;\n  }, {});\n\n  return {\n    ...passedProps,\n    ...pluginProps,\n  };\n}\n\nexport function getDataAttributeProps(\n  reference: ReferenceElement,\n  plugins: Plugin[]\n): Record<string, unknown> {\n  const propKeys = plugins\n    ? Object.keys(getExtendedPassedProps({...defaultProps, plugins}))\n    : defaultKeys;\n\n  const props = propKeys.reduce(\n    (acc: Partial<Props> & Record<string, unknown>, key) => {\n      const valueAsString = (\n        reference.getAttribute(`data-tippy-${key}`) || ''\n      ).trim();\n\n      if (!valueAsString) {\n        return acc;\n      }\n\n      if (key === 'content') {\n        acc[key] = valueAsString;\n      } else {\n        try {\n          acc[key] = JSON.parse(valueAsString);\n        } catch (e) {\n          acc[key] = valueAsString;\n        }\n      }\n\n      return acc;\n    },\n    {}\n  );\n\n  return props;\n}\n\nexport function evaluateProps(\n  reference: ReferenceElement,\n  props: Props\n): Props {\n  const out = {\n    ...props,\n    content: invokeWithArgsOrReturn(props.content, [reference]),\n    ...(props.ignoreAttributes\n      ? {}\n      : getDataAttributeProps(reference, props.plugins)),\n  };\n\n  out.aria = {\n    ...defaultProps.aria,\n    ...out.aria,\n  };\n\n  out.aria = {\n    expanded:\n      out.aria.expanded === 'auto' ? props.interactive : out.aria.expanded,\n    content:\n      out.aria.content === 'auto'\n        ? props.interactive\n          ? null\n          : 'describedby'\n        : out.aria.content,\n  };\n\n  return out;\n}\n\nexport function validateProps(\n  partialProps: Partial<Props> = {},\n  plugins: Plugin[] = []\n): void {\n  const keys = Object.keys(partialProps) as Array<keyof Props>;\n  keys.forEach((prop) => {\n    const nonPluginProps = removeProperties(\n      defaultProps,\n      Object.keys(pluginProps)\n    );\n\n    let didPassUnknownProp = !hasOwnProperty(nonPluginProps, prop);\n\n    // Check if the prop exists in `plugins`\n    if (didPassUnknownProp) {\n      didPassUnknownProp =\n        plugins.filter((plugin) => plugin.name === prop).length === 0;\n    }\n\n    warnWhen(\n      didPassUnknownProp,\n      [\n        `\\`${prop}\\``,\n        \"is not a valid prop. You may have spelled it incorrectly, or if it's\",\n        'a plugin, forgot to pass it in an array as props.plugins.',\n        '\\n\\n',\n        'All props: https://atomiks.github.io/tippyjs/v6/all-props/\\n',\n        'Plugins: https://atomiks.github.io/tippyjs/v6/plugins/',\n      ].join(' ')\n    );\n  });\n}\n","import {\n  ARROW_CLASS,\n  BACKDROP_CLASS,\n  BOX_CLASS,\n  CONTENT_CLASS,\n  SVG_ARROW_CLASS,\n} from './constants';\nimport {div, isElement} from './dom-utils';\nimport {Instance, PopperElement, Props} from './types';\nimport {PopperChildren} from './types-internal';\nimport {arrayFrom} from './utils';\n\n// Firefox extensions don't allow .innerHTML = \"...\" property. This tricks it.\nconst innerHTML = (): 'innerHTML' => 'innerHTML';\n\nfunction dangerouslySetInnerHTML(element: Element, html: string): void {\n  element[innerHTML()] = html;\n}\n\nfunction createArrowElement(value: Props['arrow']): HTMLDivElement {\n  const arrow = div();\n\n  if (value === true) {\n    arrow.className = ARROW_CLASS;\n  } else {\n    arrow.className = SVG_ARROW_CLASS;\n\n    if (isElement(value)) {\n      arrow.appendChild(value);\n    } else {\n      dangerouslySetInnerHTML(arrow, value as string);\n    }\n  }\n\n  return arrow;\n}\n\nexport function setContent(content: HTMLDivElement, props: Props): void {\n  if (isElement(props.content)) {\n    dangerouslySetInnerHTML(content, '');\n    content.appendChild(props.content);\n  } else if (typeof props.content !== 'function') {\n    if (props.allowHTML) {\n      dangerouslySetInnerHTML(content, props.content);\n    } else {\n      content.textContent = props.content;\n    }\n  }\n}\n\nexport function getChildren(popper: PopperElement): PopperChildren {\n  const box = popper.firstElementChild as HTMLDivElement;\n  const boxChildren = arrayFrom(box.children);\n\n  return {\n    box,\n    content: boxChildren.find((node) => node.classList.contains(CONTENT_CLASS)),\n    arrow: boxChildren.find(\n      (node) =>\n        node.classList.contains(ARROW_CLASS) ||\n        node.classList.contains(SVG_ARROW_CLASS)\n    ),\n    backdrop: boxChildren.find((node) =>\n      node.classList.contains(BACKDROP_CLASS)\n    ),\n  };\n}\n\nexport function render(\n  instance: Instance\n): {\n  popper: PopperElement;\n  onUpdate?: (prevProps: Props, nextProps: Props) => void;\n} {\n  const popper = div();\n\n  const box = div();\n  box.className = BOX_CLASS;\n  box.setAttribute('data-state', 'hidden');\n  box.setAttribute('tabindex', '-1');\n\n  const content = div();\n  content.className = CONTENT_CLASS;\n  content.setAttribute('data-state', 'hidden');\n\n  setContent(content, instance.props);\n\n  popper.appendChild(box);\n  box.appendChild(content);\n\n  onUpdate(instance.props, instance.props);\n\n  function onUpdate(prevProps: Props, nextProps: Props): void {\n    const {box, content, arrow} = getChildren(popper);\n\n    if (nextProps.theme) {\n      box.setAttribute('data-theme', nextProps.theme);\n    } else {\n      box.removeAttribute('data-theme');\n    }\n\n    if (typeof nextProps.animation === 'string') {\n      box.setAttribute('data-animation', nextProps.animation);\n    } else {\n      box.removeAttribute('data-animation');\n    }\n\n    if (nextProps.inertia) {\n      box.setAttribute('data-inertia', '');\n    } else {\n      box.removeAttribute('data-inertia');\n    }\n\n    box.style.maxWidth =\n      typeof nextProps.maxWidth === 'number'\n        ? `${nextProps.maxWidth}px`\n        : nextProps.maxWidth;\n\n    if (nextProps.role) {\n      box.setAttribute('role', nextProps.role);\n    } else {\n      box.removeAttribute('role');\n    }\n\n    if (\n      prevProps.content !== nextProps.content ||\n      prevProps.allowHTML !== nextProps.allowHTML\n    ) {\n      setContent(content, instance.props);\n    }\n\n    if (nextProps.arrow) {\n      if (!arrow) {\n        box.appendChild(createArrowElement(nextProps.arrow));\n      } else if (prevProps.arrow !== nextProps.arrow) {\n        box.removeChild(arrow);\n        box.appendChild(createArrowElement(nextProps.arrow));\n      }\n    } else if (arrow) {\n      box.removeChild(arrow!);\n    }\n  }\n\n  return {\n    popper,\n    onUpdate,\n  };\n}\n\n// Runtime check to identify if the render function is the default one; this\n// way we can apply default CSS transitions logic and it can be tree-shaken away\nrender.$$tippy = true;\n","import {createPopper, StrictModifiers, Modifier} from '@popperjs/core';\nimport {currentInput} from './bindGlobalEventListeners';\nimport {isIE11} from './browser';\nimport {TIPPY_DEFAULT_APPEND_TO, TOUCH_OPTIONS} from './constants';\nimport {\n  actualContains,\n  div,\n  getOwnerDocument,\n  isCursorOutsideInteractiveBorder,\n  isMouseEvent,\n  setTransitionDuration,\n  setVisibilityState,\n  updateTransitionEndListener,\n} from './dom-utils';\nimport {defaultProps, evaluateProps, getExtendedPassedProps} from './props';\nimport {getChildren} from './template';\nimport {\n  Content,\n  Instance,\n  LifecycleHooks,\n  PopperElement,\n  Props,\n  ReferenceElement,\n} from './types';\nimport {ListenerObject, PopperTreeData, PopperChildren} from './types-internal';\nimport {\n  arrayFrom,\n  debounce,\n  getValueAtIndexOrReturn,\n  invokeWithArgsOrReturn,\n  normalizeToArray,\n  pushIfUnique,\n  splitBySpaces,\n  unique,\n  removeUndefinedProps,\n} from './utils';\nimport {createMemoryLeakWarning, errorWhen, warnWhen} from './validation';\n\nlet idCounter = 1;\nlet mouseMoveListeners: ((event: MouseEvent) => void)[] = [];\n\n// Used by `hideAll()`\nexport let mountedInstances: Instance[] = [];\n\nexport default function createTippy(\n  reference: ReferenceElement,\n  passedProps: Partial<Props>\n): Instance {\n  const props = evaluateProps(reference, {\n    ...defaultProps,\n    ...getExtendedPassedProps(removeUndefinedProps(passedProps)),\n  });\n\n  // ===========================================================================\n  // 🔒 Private members\n  // ===========================================================================\n  let showTimeout: any;\n  let hideTimeout: any;\n  let scheduleHideAnimationFrame: number;\n  let isVisibleFromClick = false;\n  let didHideDueToDocumentMouseDown = false;\n  let didTouchMove = false;\n  let ignoreOnFirstUpdate = false;\n  let lastTriggerEvent: Event | undefined;\n  let currentTransitionEndListener: (event: TransitionEvent) => void;\n  let onFirstUpdate: () => void;\n  let listeners: ListenerObject[] = [];\n  let debouncedOnMouseMove = debounce(onMouseMove, props.interactiveDebounce);\n  let currentTarget: Element;\n\n  // ===========================================================================\n  // 🔑 Public members\n  // ===========================================================================\n  const id = idCounter++;\n  const popperInstance = null;\n  const plugins = unique(props.plugins);\n\n  const state = {\n    // Is the instance currently enabled?\n    isEnabled: true,\n    // Is the tippy currently showing and not transitioning out?\n    isVisible: false,\n    // Has the instance been destroyed?\n    isDestroyed: false,\n    // Is the tippy currently mounted to the DOM?\n    isMounted: false,\n    // Has the tippy finished transitioning in?\n    isShown: false,\n  };\n\n  const instance: Instance = {\n    // properties\n    id,\n    reference,\n    popper: div(),\n    popperInstance,\n    props,\n    state,\n    plugins,\n    // methods\n    clearDelayTimeouts,\n    setProps,\n    setContent,\n    show,\n    hide,\n    hideWithInteractivity,\n    enable,\n    disable,\n    unmount,\n    destroy,\n  };\n\n  // TODO: Investigate why this early return causes a TDZ error in the tests —\n  // it doesn't seem to happen in the browser\n  /* istanbul ignore if */\n  if (!props.render) {\n    if (__DEV__) {\n      errorWhen(true, 'render() function has not been supplied.');\n    }\n\n    return instance;\n  }\n\n  // ===========================================================================\n  // Initial mutations\n  // ===========================================================================\n  const {popper, onUpdate} = props.render(instance);\n\n  popper.setAttribute('data-__NAMESPACE_PREFIX__-root', '');\n  popper.id = `__NAMESPACE_PREFIX__-${instance.id}`;\n\n  instance.popper = popper;\n  reference._tippy = instance;\n  popper._tippy = instance;\n\n  const pluginsHooks = plugins.map((plugin) => plugin.fn(instance));\n  const hasAriaExpanded = reference.hasAttribute('aria-expanded');\n\n  addListeners();\n  handleAriaExpandedAttribute();\n  handleStyles();\n\n  invokeHook('onCreate', [instance]);\n\n  if (props.showOnCreate) {\n    scheduleShow();\n  }\n\n  // Prevent a tippy with a delay from hiding if the cursor left then returned\n  // before it started hiding\n  popper.addEventListener('mouseenter', () => {\n    if (instance.props.interactive && instance.state.isVisible) {\n      instance.clearDelayTimeouts();\n    }\n  });\n\n  popper.addEventListener('mouseleave', () => {\n    if (\n      instance.props.interactive &&\n      instance.props.trigger.indexOf('mouseenter') >= 0\n    ) {\n      getDocument().addEventListener('mousemove', debouncedOnMouseMove);\n    }\n  });\n\n  return instance;\n\n  // ===========================================================================\n  // 🔒 Private methods\n  // ===========================================================================\n  function getNormalizedTouchSettings(): [string | boolean, number] {\n    const {touch} = instance.props;\n    return Array.isArray(touch) ? touch : [touch, 0];\n  }\n\n  function getIsCustomTouchBehavior(): boolean {\n    return getNormalizedTouchSettings()[0] === 'hold';\n  }\n\n  function getIsDefaultRenderFn(): boolean {\n    // @ts-ignore\n    return !!instance.props.render?.$$tippy;\n  }\n\n  function getCurrentTarget(): Element {\n    return currentTarget || reference;\n  }\n\n  function getDocument(): Document {\n    const parent = getCurrentTarget().parentNode as Element;\n    return parent ? getOwnerDocument(parent) : document;\n  }\n\n  function getDefaultTemplateChildren(): PopperChildren {\n    return getChildren(popper);\n  }\n\n  function getDelay(isShow: boolean): number {\n    // For touch or keyboard input, force `0` delay for UX reasons\n    // Also if the instance is mounted but not visible (transitioning out),\n    // ignore delay\n    if (\n      (instance.state.isMounted && !instance.state.isVisible) ||\n      currentInput.isTouch ||\n      (lastTriggerEvent && lastTriggerEvent.type === 'focus')\n    ) {\n      return 0;\n    }\n\n    return getValueAtIndexOrReturn(\n      instance.props.delay,\n      isShow ? 0 : 1,\n      defaultProps.delay\n    );\n  }\n\n  function handleStyles(fromHide = false): void {\n    popper.style.pointerEvents =\n      instance.props.interactive && !fromHide ? '' : 'none';\n    popper.style.zIndex = `${instance.props.zIndex}`;\n  }\n\n  function invokeHook(\n    hook: keyof LifecycleHooks,\n    args: [Instance, any?],\n    shouldInvokePropsHook = true\n  ): void {\n    pluginsHooks.forEach((pluginHooks) => {\n      if (pluginHooks[hook]) {\n        pluginHooks[hook]!(...args);\n      }\n    });\n\n    if (shouldInvokePropsHook) {\n      instance.props[hook](...args);\n    }\n  }\n\n  function handleAriaContentAttribute(): void {\n    const {aria} = instance.props;\n\n    if (!aria.content) {\n      return;\n    }\n\n    const attr = `aria-${aria.content}`;\n    const id = popper.id;\n    const nodes = normalizeToArray(instance.props.triggerTarget || reference);\n\n    nodes.forEach((node) => {\n      const currentValue = node.getAttribute(attr);\n\n      if (instance.state.isVisible) {\n        node.setAttribute(attr, currentValue ? `${currentValue} ${id}` : id);\n      } else {\n        const nextValue = currentValue && currentValue.replace(id, '').trim();\n\n        if (nextValue) {\n          node.setAttribute(attr, nextValue);\n        } else {\n          node.removeAttribute(attr);\n        }\n      }\n    });\n  }\n\n  function handleAriaExpandedAttribute(): void {\n    if (hasAriaExpanded || !instance.props.aria.expanded) {\n      return;\n    }\n\n    const nodes = normalizeToArray(instance.props.triggerTarget || reference);\n\n    nodes.forEach((node) => {\n      if (instance.props.interactive) {\n        node.setAttribute(\n          'aria-expanded',\n          instance.state.isVisible && node === getCurrentTarget()\n            ? 'true'\n            : 'false'\n        );\n      } else {\n        node.removeAttribute('aria-expanded');\n      }\n    });\n  }\n\n  function cleanupInteractiveMouseListeners(): void {\n    getDocument().removeEventListener('mousemove', debouncedOnMouseMove);\n    mouseMoveListeners = mouseMoveListeners.filter(\n      (listener) => listener !== debouncedOnMouseMove\n    );\n  }\n\n  function onDocumentPress(event: MouseEvent | TouchEvent): void {\n    // Moved finger to scroll instead of an intentional tap outside\n    if (currentInput.isTouch) {\n      if (didTouchMove || event.type === 'mousedown') {\n        return;\n      }\n    }\n\n    const actualTarget =\n      (event.composedPath && event.composedPath()[0]) || event.target;\n\n    // Clicked on interactive popper\n    if (\n      instance.props.interactive &&\n      actualContains(popper, actualTarget as Element)\n    ) {\n      return;\n    }\n\n    // Clicked on the event listeners target\n    if (\n      normalizeToArray(instance.props.triggerTarget || reference).some((el) =>\n        actualContains(el, actualTarget as Element)\n      )\n    ) {\n      if (currentInput.isTouch) {\n        return;\n      }\n\n      if (\n        instance.state.isVisible &&\n        instance.props.trigger.indexOf('click') >= 0\n      ) {\n        return;\n      }\n    } else {\n      invokeHook('onClickOutside', [instance, event]);\n    }\n\n    if (instance.props.hideOnClick === true) {\n      instance.clearDelayTimeouts();\n      instance.hide();\n\n      // `mousedown` event is fired right before `focus` if pressing the\n      // currentTarget. This lets a tippy with `focus` trigger know that it\n      // should not show\n      didHideDueToDocumentMouseDown = true;\n      setTimeout(() => {\n        didHideDueToDocumentMouseDown = false;\n      });\n\n      // The listener gets added in `scheduleShow()`, but this may be hiding it\n      // before it shows, and hide()'s early bail-out behavior can prevent it\n      // from being cleaned up\n      if (!instance.state.isMounted) {\n        removeDocumentPress();\n      }\n    }\n  }\n\n  function onTouchMove(): void {\n    didTouchMove = true;\n  }\n\n  function onTouchStart(): void {\n    didTouchMove = false;\n  }\n\n  function addDocumentPress(): void {\n    const doc = getDocument();\n    doc.addEventListener('mousedown', onDocumentPress, true);\n    doc.addEventListener('touchend', onDocumentPress, TOUCH_OPTIONS);\n    doc.addEventListener('touchstart', onTouchStart, TOUCH_OPTIONS);\n    doc.addEventListener('touchmove', onTouchMove, TOUCH_OPTIONS);\n  }\n\n  function removeDocumentPress(): void {\n    const doc = getDocument();\n    doc.removeEventListener('mousedown', onDocumentPress, true);\n    doc.removeEventListener('touchend', onDocumentPress, TOUCH_OPTIONS);\n    doc.removeEventListener('touchstart', onTouchStart, TOUCH_OPTIONS);\n    doc.removeEventListener('touchmove', onTouchMove, TOUCH_OPTIONS);\n  }\n\n  function onTransitionedOut(duration: number, callback: () => void): void {\n    onTransitionEnd(duration, () => {\n      if (\n        !instance.state.isVisible &&\n        popper.parentNode &&\n        popper.parentNode.contains(popper)\n      ) {\n        callback();\n      }\n    });\n  }\n\n  function onTransitionedIn(duration: number, callback: () => void): void {\n    onTransitionEnd(duration, callback);\n  }\n\n  function onTransitionEnd(duration: number, callback: () => void): void {\n    const box = getDefaultTemplateChildren().box;\n\n    function listener(event: TransitionEvent): void {\n      if (event.target === box) {\n        updateTransitionEndListener(box, 'remove', listener);\n        callback();\n      }\n    }\n\n    // Make callback synchronous if duration is 0\n    // `transitionend` won't fire otherwise\n    if (duration === 0) {\n      return callback();\n    }\n\n    updateTransitionEndListener(box, 'remove', currentTransitionEndListener);\n    updateTransitionEndListener(box, 'add', listener);\n\n    currentTransitionEndListener = listener;\n  }\n\n  function on(\n    eventType: string,\n    handler: EventListener,\n    options: boolean | Record<string, unknown> = false\n  ): void {\n    const nodes = normalizeToArray(instance.props.triggerTarget || reference);\n    nodes.forEach((node) => {\n      node.addEventListener(eventType, handler, options);\n      listeners.push({node, eventType, handler, options});\n    });\n  }\n\n  function addListeners(): void {\n    if (getIsCustomTouchBehavior()) {\n      on('touchstart', onTrigger, {passive: true});\n      on('touchend', onMouseLeave as EventListener, {passive: true});\n    }\n\n    splitBySpaces(instance.props.trigger).forEach((eventType) => {\n      if (eventType === 'manual') {\n        return;\n      }\n\n      on(eventType, onTrigger);\n\n      switch (eventType) {\n        case 'mouseenter':\n          on('mouseleave', onMouseLeave as EventListener);\n          break;\n        case 'focus':\n          on(isIE11 ? 'focusout' : 'blur', onBlurOrFocusOut as EventListener);\n          break;\n        case 'focusin':\n          on('focusout', onBlurOrFocusOut as EventListener);\n          break;\n      }\n    });\n  }\n\n  function removeListeners(): void {\n    listeners.forEach(({node, eventType, handler, options}: ListenerObject) => {\n      node.removeEventListener(eventType, handler, options);\n    });\n    listeners = [];\n  }\n\n  function onTrigger(event: Event): void {\n    let shouldScheduleClickHide = false;\n\n    if (\n      !instance.state.isEnabled ||\n      isEventListenerStopped(event) ||\n      didHideDueToDocumentMouseDown\n    ) {\n      return;\n    }\n\n    const wasFocused = lastTriggerEvent?.type === 'focus';\n\n    lastTriggerEvent = event;\n    currentTarget = event.currentTarget as Element;\n\n    handleAriaExpandedAttribute();\n\n    if (!instance.state.isVisible && isMouseEvent(event)) {\n      // If scrolling, `mouseenter` events can be fired if the cursor lands\n      // over a new target, but `mousemove` events don't get fired. This\n      // causes interactive tooltips to get stuck open until the cursor is\n      // moved\n      mouseMoveListeners.forEach((listener) => listener(event));\n    }\n\n    // Toggle show/hide when clicking click-triggered tooltips\n    if (\n      event.type === 'click' &&\n      (instance.props.trigger.indexOf('mouseenter') < 0 ||\n        isVisibleFromClick) &&\n      instance.props.hideOnClick !== false &&\n      instance.state.isVisible\n    ) {\n      shouldScheduleClickHide = true;\n    } else {\n      scheduleShow(event);\n    }\n\n    if (event.type === 'click') {\n      isVisibleFromClick = !shouldScheduleClickHide;\n    }\n\n    if (shouldScheduleClickHide && !wasFocused) {\n      scheduleHide(event);\n    }\n  }\n\n  function onMouseMove(event: MouseEvent): void {\n    const target = event.target as Node;\n    const isCursorOverReferenceOrPopper =\n      getCurrentTarget().contains(target) || popper.contains(target);\n\n    if (event.type === 'mousemove' && isCursorOverReferenceOrPopper) {\n      return;\n    }\n\n    const popperTreeData = getNestedPopperTree()\n      .concat(popper)\n      .map((popper) => {\n        const instance = popper._tippy!;\n        const state = instance.popperInstance?.state;\n\n        if (state) {\n          return {\n            popperRect: popper.getBoundingClientRect(),\n            popperState: state,\n            props,\n          };\n        }\n\n        return null;\n      })\n      .filter(Boolean) as PopperTreeData[];\n\n    if (isCursorOutsideInteractiveBorder(popperTreeData, event)) {\n      cleanupInteractiveMouseListeners();\n      scheduleHide(event);\n    }\n  }\n\n  function onMouseLeave(event: MouseEvent): void {\n    const shouldBail =\n      isEventListenerStopped(event) ||\n      (instance.props.trigger.indexOf('click') >= 0 && isVisibleFromClick);\n\n    if (shouldBail) {\n      return;\n    }\n\n    if (instance.props.interactive) {\n      instance.hideWithInteractivity(event);\n      return;\n    }\n\n    scheduleHide(event);\n  }\n\n  function onBlurOrFocusOut(event: FocusEvent): void {\n    if (\n      instance.props.trigger.indexOf('focusin') < 0 &&\n      event.target !== getCurrentTarget()\n    ) {\n      return;\n    }\n\n    // If focus was moved to within the popper\n    if (\n      instance.props.interactive &&\n      event.relatedTarget &&\n      popper.contains(event.relatedTarget as Element)\n    ) {\n      return;\n    }\n\n    scheduleHide(event);\n  }\n\n  function isEventListenerStopped(event: Event): boolean {\n    return currentInput.isTouch\n      ? getIsCustomTouchBehavior() !== event.type.indexOf('touch') >= 0\n      : false;\n  }\n\n  function createPopperInstance(): void {\n    destroyPopperInstance();\n\n    const {\n      popperOptions,\n      placement,\n      offset,\n      getReferenceClientRect,\n      moveTransition,\n    } = instance.props;\n\n    const arrow = getIsDefaultRenderFn() ? getChildren(popper).arrow : null;\n\n    const computedReference = getReferenceClientRect\n      ? {\n          getBoundingClientRect: getReferenceClientRect,\n          contextElement:\n            getReferenceClientRect.contextElement || getCurrentTarget(),\n        }\n      : reference;\n\n    const tippyModifier: Modifier<'$$tippy', Record<string, unknown>> = {\n      name: '$$tippy',\n      enabled: true,\n      phase: 'beforeWrite',\n      requires: ['computeStyles'],\n      fn({state}) {\n        if (getIsDefaultRenderFn()) {\n          const {box} = getDefaultTemplateChildren();\n\n          ['placement', 'reference-hidden', 'escaped'].forEach((attr) => {\n            if (attr === 'placement') {\n              box.setAttribute('data-placement', state.placement);\n            } else {\n              if (state.attributes.popper[`data-popper-${attr}`]) {\n                box.setAttribute(`data-${attr}`, '');\n              } else {\n                box.removeAttribute(`data-${attr}`);\n              }\n            }\n          });\n\n          state.attributes.popper = {};\n        }\n      },\n    };\n\n    type TippyModifier = Modifier<'$$tippy', Record<string, unknown>>;\n    type ExtendedModifiers = StrictModifiers | Partial<TippyModifier>;\n\n    const modifiers: Array<ExtendedModifiers> = [\n      {\n        name: 'offset',\n        options: {\n          offset,\n        },\n      },\n      {\n        name: 'preventOverflow',\n        options: {\n          padding: {\n            top: 2,\n            bottom: 2,\n            left: 5,\n            right: 5,\n          },\n        },\n      },\n      {\n        name: 'flip',\n        options: {\n          padding: 5,\n        },\n      },\n      {\n        name: 'computeStyles',\n        options: {\n          adaptive: !moveTransition,\n        },\n      },\n      tippyModifier,\n    ];\n\n    if (getIsDefaultRenderFn() && arrow) {\n      modifiers.push({\n        name: 'arrow',\n        options: {\n          element: arrow,\n          padding: 3,\n        },\n      });\n    }\n\n    modifiers.push(...(popperOptions?.modifiers || []));\n\n    instance.popperInstance = createPopper<ExtendedModifiers>(\n      computedReference,\n      popper,\n      {\n        ...popperOptions,\n        placement,\n        onFirstUpdate,\n        modifiers,\n      }\n    );\n  }\n\n  function destroyPopperInstance(): void {\n    if (instance.popperInstance) {\n      instance.popperInstance.destroy();\n      instance.popperInstance = null;\n    }\n  }\n\n  function mount(): void {\n    const {appendTo} = instance.props;\n\n    let parentNode: any;\n\n    // By default, we'll append the popper to the triggerTargets's parentNode so\n    // it's directly after the reference element so the elements inside the\n    // tippy can be tabbed to\n    // If there are clipping issues, the user can specify a different appendTo\n    // and ensure focus management is handled correctly manually\n    const node = getCurrentTarget();\n\n    if (\n      (instance.props.interactive && appendTo === TIPPY_DEFAULT_APPEND_TO) ||\n      appendTo === 'parent'\n    ) {\n      parentNode = node.parentNode;\n    } else {\n      parentNode = invokeWithArgsOrReturn(appendTo, [node]);\n    }\n\n    // The popper element needs to exist on the DOM before its position can be\n    // updated as Popper needs to read its dimensions\n    if (!parentNode.contains(popper)) {\n      parentNode.appendChild(popper);\n    }\n\n    instance.state.isMounted = true;\n\n    createPopperInstance();\n\n    /* istanbul ignore else */\n    if (__DEV__) {\n      // Accessibility check\n      warnWhen(\n        instance.props.interactive &&\n          appendTo === defaultProps.appendTo &&\n          node.nextElementSibling !== popper,\n        [\n          'Interactive tippy element may not be accessible via keyboard',\n          'navigation because it is not directly after the reference element',\n          'in the DOM source order.',\n          '\\n\\n',\n          'Using a wrapper <div> or <span> tag around the reference element',\n          'solves this by creating a new parentNode context.',\n          '\\n\\n',\n          'Specifying `appendTo: document.body` silences this warning, but it',\n          'assumes you are using a focus management solution to handle',\n          'keyboard navigation.',\n          '\\n\\n',\n          'See: https://atomiks.github.io/tippyjs/v6/accessibility/#interactivity',\n        ].join(' ')\n      );\n    }\n  }\n\n  function getNestedPopperTree(): PopperElement[] {\n    return arrayFrom(\n      popper.querySelectorAll('[data-__NAMESPACE_PREFIX__-root]')\n    );\n  }\n\n  function scheduleShow(event?: Event): void {\n    instance.clearDelayTimeouts();\n\n    if (event) {\n      invokeHook('onTrigger', [instance, event]);\n    }\n\n    addDocumentPress();\n\n    let delay = getDelay(true);\n    const [touchValue, touchDelay] = getNormalizedTouchSettings();\n\n    if (currentInput.isTouch && touchValue === 'hold' && touchDelay) {\n      delay = touchDelay;\n    }\n\n    if (delay) {\n      showTimeout = setTimeout(() => {\n        instance.show();\n      }, delay);\n    } else {\n      instance.show();\n    }\n  }\n\n  function scheduleHide(event: Event): void {\n    instance.clearDelayTimeouts();\n\n    invokeHook('onUntrigger', [instance, event]);\n\n    if (!instance.state.isVisible) {\n      removeDocumentPress();\n\n      return;\n    }\n\n    // For interactive tippies, scheduleHide is added to a document.body handler\n    // from onMouseLeave so must intercept scheduled hides from mousemove/leave\n    // events when trigger contains mouseenter and click, and the tip is\n    // currently shown as a result of a click.\n    if (\n      instance.props.trigger.indexOf('mouseenter') >= 0 &&\n      instance.props.trigger.indexOf('click') >= 0 &&\n      ['mouseleave', 'mousemove'].indexOf(event.type) >= 0 &&\n      isVisibleFromClick\n    ) {\n      return;\n    }\n\n    const delay = getDelay(false);\n\n    if (delay) {\n      hideTimeout = setTimeout(() => {\n        if (instance.state.isVisible) {\n          instance.hide();\n        }\n      }, delay);\n    } else {\n      // Fixes a `transitionend` problem when it fires 1 frame too\n      // late sometimes, we don't want hide() to be called.\n      scheduleHideAnimationFrame = requestAnimationFrame(() => {\n        instance.hide();\n      });\n    }\n  }\n\n  // ===========================================================================\n  // 🔑 Public methods\n  // ===========================================================================\n  function enable(): void {\n    instance.state.isEnabled = true;\n  }\n\n  function disable(): void {\n    // Disabling the instance should also hide it\n    // https://github.com/atomiks/tippy.js-react/issues/106\n    instance.hide();\n    instance.state.isEnabled = false;\n  }\n\n  function clearDelayTimeouts(): void {\n    clearTimeout(showTimeout);\n    clearTimeout(hideTimeout);\n    cancelAnimationFrame(scheduleHideAnimationFrame);\n  }\n\n  function setProps(partialProps: Partial<Props>): void {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('setProps'));\n    }\n\n    if (instance.state.isDestroyed) {\n      return;\n    }\n\n    invokeHook('onBeforeUpdate', [instance, partialProps]);\n\n    removeListeners();\n\n    const prevProps = instance.props;\n    const nextProps = evaluateProps(reference, {\n      ...prevProps,\n      ...removeUndefinedProps(partialProps),\n      ignoreAttributes: true,\n    });\n\n    instance.props = nextProps;\n\n    addListeners();\n\n    if (prevProps.interactiveDebounce !== nextProps.interactiveDebounce) {\n      cleanupInteractiveMouseListeners();\n      debouncedOnMouseMove = debounce(\n        onMouseMove,\n        nextProps.interactiveDebounce\n      );\n    }\n\n    // Ensure stale aria-expanded attributes are removed\n    if (prevProps.triggerTarget && !nextProps.triggerTarget) {\n      normalizeToArray(prevProps.triggerTarget).forEach((node) => {\n        node.removeAttribute('aria-expanded');\n      });\n    } else if (nextProps.triggerTarget) {\n      reference.removeAttribute('aria-expanded');\n    }\n\n    handleAriaExpandedAttribute();\n    handleStyles();\n\n    if (onUpdate) {\n      onUpdate(prevProps, nextProps);\n    }\n\n    if (instance.popperInstance) {\n      createPopperInstance();\n\n      // Fixes an issue with nested tippies if they are all getting re-rendered,\n      // and the nested ones get re-rendered first.\n      // https://github.com/atomiks/tippyjs-react/issues/177\n      // TODO: find a cleaner / more efficient solution(!)\n      getNestedPopperTree().forEach((nestedPopper) => {\n        // React (and other UI libs likely) requires a rAF wrapper as it flushes\n        // its work in one\n        requestAnimationFrame(nestedPopper._tippy!.popperInstance!.forceUpdate);\n      });\n    }\n\n    invokeHook('onAfterUpdate', [instance, partialProps]);\n  }\n\n  function setContent(content: Content): void {\n    instance.setProps({content});\n  }\n\n  function show(): void {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('show'));\n    }\n\n    // Early bail-out\n    const isAlreadyVisible = instance.state.isVisible;\n    const isDestroyed = instance.state.isDestroyed;\n    const isDisabled = !instance.state.isEnabled;\n    const isTouchAndTouchDisabled =\n      currentInput.isTouch && !instance.props.touch;\n    const duration = getValueAtIndexOrReturn(\n      instance.props.duration,\n      0,\n      defaultProps.duration\n    );\n\n    if (\n      isAlreadyVisible ||\n      isDestroyed ||\n      isDisabled ||\n      isTouchAndTouchDisabled\n    ) {\n      return;\n    }\n\n    // Normalize `disabled` behavior across browsers.\n    // Firefox allows events on disabled elements, but Chrome doesn't.\n    // Using a wrapper element (i.e. <span>) is recommended.\n    if (getCurrentTarget().hasAttribute('disabled')) {\n      return;\n    }\n\n    invokeHook('onShow', [instance], false);\n    if (instance.props.onShow(instance) === false) {\n      return;\n    }\n\n    instance.state.isVisible = true;\n\n    if (getIsDefaultRenderFn()) {\n      popper.style.visibility = 'visible';\n    }\n\n    handleStyles();\n    addDocumentPress();\n\n    if (!instance.state.isMounted) {\n      popper.style.transition = 'none';\n    }\n\n    // If flipping to the opposite side after hiding at least once, the\n    // animation will use the wrong placement without resetting the duration\n    if (getIsDefaultRenderFn()) {\n      const {box, content} = getDefaultTemplateChildren();\n      setTransitionDuration([box, content], 0);\n    }\n\n    onFirstUpdate = (): void => {\n      if (!instance.state.isVisible || ignoreOnFirstUpdate) {\n        return;\n      }\n\n      ignoreOnFirstUpdate = true;\n\n      // reflow\n      void popper.offsetHeight;\n\n      popper.style.transition = instance.props.moveTransition;\n\n      if (getIsDefaultRenderFn() && instance.props.animation) {\n        const {box, content} = getDefaultTemplateChildren();\n        setTransitionDuration([box, content], duration);\n        setVisibilityState([box, content], 'visible');\n      }\n\n      handleAriaContentAttribute();\n      handleAriaExpandedAttribute();\n\n      pushIfUnique(mountedInstances, instance);\n\n      // certain modifiers (e.g. `maxSize`) require a second update after the\n      // popper has been positioned for the first time\n      instance.popperInstance?.forceUpdate();\n\n      invokeHook('onMount', [instance]);\n\n      if (instance.props.animation && getIsDefaultRenderFn()) {\n        onTransitionedIn(duration, () => {\n          instance.state.isShown = true;\n          invokeHook('onShown', [instance]);\n        });\n      }\n    };\n\n    mount();\n  }\n\n  function hide(): void {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('hide'));\n    }\n\n    // Early bail-out\n    const isAlreadyHidden = !instance.state.isVisible;\n    const isDestroyed = instance.state.isDestroyed;\n    const isDisabled = !instance.state.isEnabled;\n    const duration = getValueAtIndexOrReturn(\n      instance.props.duration,\n      1,\n      defaultProps.duration\n    );\n\n    if (isAlreadyHidden || isDestroyed || isDisabled) {\n      return;\n    }\n\n    invokeHook('onHide', [instance], false);\n    if (instance.props.onHide(instance) === false) {\n      return;\n    }\n\n    instance.state.isVisible = false;\n    instance.state.isShown = false;\n    ignoreOnFirstUpdate = false;\n    isVisibleFromClick = false;\n\n    if (getIsDefaultRenderFn()) {\n      popper.style.visibility = 'hidden';\n    }\n\n    cleanupInteractiveMouseListeners();\n    removeDocumentPress();\n    handleStyles(true);\n\n    if (getIsDefaultRenderFn()) {\n      const {box, content} = getDefaultTemplateChildren();\n\n      if (instance.props.animation) {\n        setTransitionDuration([box, content], duration);\n        setVisibilityState([box, content], 'hidden');\n      }\n    }\n\n    handleAriaContentAttribute();\n    handleAriaExpandedAttribute();\n\n    if (instance.props.animation) {\n      if (getIsDefaultRenderFn()) {\n        onTransitionedOut(duration, instance.unmount);\n      }\n    } else {\n      instance.unmount();\n    }\n  }\n\n  function hideWithInteractivity(event: MouseEvent): void {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      warnWhen(\n        instance.state.isDestroyed,\n        createMemoryLeakWarning('hideWithInteractivity')\n      );\n    }\n\n    getDocument().addEventListener('mousemove', debouncedOnMouseMove);\n    pushIfUnique(mouseMoveListeners, debouncedOnMouseMove);\n    debouncedOnMouseMove(event);\n  }\n\n  function unmount(): void {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('unmount'));\n    }\n\n    if (instance.state.isVisible) {\n      instance.hide();\n    }\n\n    if (!instance.state.isMounted) {\n      return;\n    }\n\n    destroyPopperInstance();\n\n    // If a popper is not interactive, it will be appended outside the popper\n    // tree by default. This seems mainly for interactive tippies, but we should\n    // find a workaround if possible\n    getNestedPopperTree().forEach((nestedPopper) => {\n      nestedPopper._tippy!.unmount();\n    });\n\n    if (popper.parentNode) {\n      popper.parentNode.removeChild(popper);\n    }\n\n    mountedInstances = mountedInstances.filter((i) => i !== instance);\n\n    instance.state.isMounted = false;\n    invokeHook('onHidden', [instance]);\n  }\n\n  function destroy(): void {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('destroy'));\n    }\n\n    if (instance.state.isDestroyed) {\n      return;\n    }\n\n    instance.clearDelayTimeouts();\n    instance.unmount();\n\n    removeListeners();\n\n    delete reference._tippy;\n\n    instance.state.isDestroyed = true;\n\n    invokeHook('onDestroy', [instance]);\n  }\n}\n","import bindGlobalEventListeners, {\n  currentInput,\n} from './bindGlobalEventListeners';\nimport createTippy, {mountedInstances} from './createTippy';\nimport {getArrayOfElements, isElement, isReferenceElement} from './dom-utils';\nimport {defaultProps, setDefaultProps, validateProps} from './props';\nimport {HideAll, HideAllOptions, Instance, Props, Targets} from './types';\nimport {validateTargets, warnWhen} from './validation';\n\nfunction tippy(\n  targets: Targets,\n  optionalProps: Partial<Props> = {}\n): Instance | Instance[] {\n  const plugins = defaultProps.plugins.concat(optionalProps.plugins || []);\n\n  /* istanbul ignore else */\n  if (__DEV__) {\n    validateTargets(targets);\n    validateProps(optionalProps, plugins);\n  }\n\n  bindGlobalEventListeners();\n\n  const passedProps: Partial<Props> = {...optionalProps, plugins};\n\n  const elements = getArrayOfElements(targets);\n\n  /* istanbul ignore else */\n  if (__DEV__) {\n    const isSingleContentElement = isElement(passedProps.content);\n    const isMoreThanOneReferenceElement = elements.length > 1;\n    warnWhen(\n      isSingleContentElement && isMoreThanOneReferenceElement,\n      [\n        'tippy() was passed an Element as the `content` prop, but more than',\n        'one tippy instance was created by this invocation. This means the',\n        'content element will only be appended to the last tippy instance.',\n        '\\n\\n',\n        'Instead, pass the .innerHTML of the element, or use a function that',\n        'returns a cloned version of the element instead.',\n        '\\n\\n',\n        '1) content: element.innerHTML\\n',\n        '2) content: () => element.cloneNode(true)',\n      ].join(' ')\n    );\n  }\n\n  const instances = elements.reduce<Instance[]>(\n    (acc, reference): Instance[] => {\n      const instance = reference && createTippy(reference, passedProps);\n\n      if (instance) {\n        acc.push(instance);\n      }\n\n      return acc;\n    },\n    []\n  );\n\n  return isElement(targets) ? instances[0] : instances;\n}\n\ntippy.defaultProps = defaultProps;\ntippy.setDefaultProps = setDefaultProps;\ntippy.currentInput = currentInput;\n\nexport default tippy;\n\nexport const hideAll: HideAll = ({\n  exclude: excludedReferenceOrInstance,\n  duration,\n}: HideAllOptions = {}) => {\n  mountedInstances.forEach((instance) => {\n    let isExcluded = false;\n\n    if (excludedReferenceOrInstance) {\n      isExcluded = isReferenceElement(excludedReferenceOrInstance)\n        ? instance.reference === excludedReferenceOrInstance\n        : instance.popper === (excludedReferenceOrInstance as Instance).popper;\n    }\n\n    if (!isExcluded) {\n      const originalDuration = instance.props.duration;\n\n      instance.setProps({duration});\n      instance.hide();\n\n      if (!instance.state.isDestroyed) {\n        instance.setProps({duration: originalDuration});\n      }\n    }\n  });\n};\n","import tippy from '..';\nimport {div} from '../dom-utils';\nimport {\n  CreateSingleton,\n  Plugin,\n  CreateSingletonProps,\n  ReferenceElement,\n  CreateSingletonInstance,\n  Instance,\n  Props,\n} from '../types';\nimport {normalizeToArray, removeProperties} from '../utils';\nimport {errorWhen} from '../validation';\nimport {applyStyles, Modifier} from '@popperjs/core';\n\n// The default `applyStyles` modifier has a cleanup function that gets called\n// every time the popper is destroyed (i.e. a new target), removing the styles\n// and causing transitions to break for singletons when the console is open, but\n// most notably for non-transform styles being used, `gpuAcceleration: false`.\nconst applyStylesModifier: Modifier<'applyStyles', Record<string, unknown>> = {\n  ...applyStyles,\n  effect({state}) {\n    const initialStyles = {\n      popper: {\n        position: state.options.strategy,\n        left: '0',\n        top: '0',\n        margin: '0',\n      },\n      arrow: {\n        position: 'absolute',\n      },\n      reference: {},\n    };\n\n    Object.assign(state.elements.popper.style, initialStyles.popper);\n    state.styles = initialStyles;\n\n    if (state.elements.arrow) {\n      Object.assign(state.elements.arrow.style, initialStyles.arrow);\n    }\n\n    // intentionally return no cleanup function\n    // return () => { ... }\n  },\n};\n\nconst createSingleton: CreateSingleton = (\n  tippyInstances,\n  optionalProps = {}\n) => {\n  /* istanbul ignore else */\n  if (__DEV__) {\n    errorWhen(\n      !Array.isArray(tippyInstances),\n      [\n        'The first argument passed to createSingleton() must be an array of',\n        'tippy instances. The passed value was',\n        String(tippyInstances),\n      ].join(' ')\n    );\n  }\n\n  let individualInstances = tippyInstances;\n  let references: Array<ReferenceElement> = [];\n  let triggerTargets: Array<Element> = [];\n  let currentTarget: Element | null;\n  let overrides = optionalProps.overrides;\n  let interceptSetPropsCleanups: Array<() => void> = [];\n  let shownOnCreate = false;\n\n  function setTriggerTargets(): void {\n    triggerTargets = individualInstances\n      .map((instance) =>\n        normalizeToArray(instance.props.triggerTarget || instance.reference)\n      )\n      .reduce((acc, item) => acc.concat(item), []);\n  }\n\n  function setReferences(): void {\n    references = individualInstances.map((instance) => instance.reference);\n  }\n\n  function enableInstances(isEnabled: boolean): void {\n    individualInstances.forEach((instance) => {\n      if (isEnabled) {\n        instance.enable();\n      } else {\n        instance.disable();\n      }\n    });\n  }\n\n  function interceptSetProps(singleton: Instance): Array<() => void> {\n    return individualInstances.map((instance) => {\n      const originalSetProps = instance.setProps;\n\n      instance.setProps = (props): void => {\n        originalSetProps(props);\n\n        if (instance.reference === currentTarget) {\n          singleton.setProps(props);\n        }\n      };\n\n      return (): void => {\n        instance.setProps = originalSetProps;\n      };\n    });\n  }\n\n  // have to pass singleton, as it maybe undefined on first call\n  function prepareInstance(\n    singleton: Instance,\n    target: ReferenceElement\n  ): void {\n    const index = triggerTargets.indexOf(target);\n\n    // bail-out\n    if (target === currentTarget) {\n      return;\n    }\n\n    currentTarget = target;\n\n    const overrideProps: Partial<Props> = (overrides || [])\n      .concat('content')\n      .reduce((acc, prop) => {\n        (acc as any)[prop] = individualInstances[index].props[prop];\n        return acc;\n      }, {});\n\n    singleton.setProps({\n      ...overrideProps,\n      getReferenceClientRect:\n        typeof overrideProps.getReferenceClientRect === 'function'\n          ? overrideProps.getReferenceClientRect\n          : (): ClientRect => references[index]?.getBoundingClientRect(),\n    });\n  }\n\n  enableInstances(false);\n  setReferences();\n  setTriggerTargets();\n\n  const plugin: Plugin = {\n    fn() {\n      return {\n        onDestroy(): void {\n          enableInstances(true);\n        },\n        onHidden(): void {\n          currentTarget = null;\n        },\n        onClickOutside(instance): void {\n          if (instance.props.showOnCreate && !shownOnCreate) {\n            shownOnCreate = true;\n            currentTarget = null;\n          }\n        },\n        onShow(instance): void {\n          if (instance.props.showOnCreate && !shownOnCreate) {\n            shownOnCreate = true;\n            prepareInstance(instance, references[0]);\n          }\n        },\n        onTrigger(instance, event): void {\n          prepareInstance(instance, event.currentTarget as Element);\n        },\n      };\n    },\n  };\n\n  const singleton = tippy(div(), {\n    ...removeProperties(optionalProps, ['overrides']),\n    plugins: [plugin, ...(optionalProps.plugins || [])],\n    triggerTarget: triggerTargets,\n    popperOptions: {\n      ...optionalProps.popperOptions,\n      modifiers: [\n        ...(optionalProps.popperOptions?.modifiers || []),\n        applyStylesModifier,\n      ],\n    },\n  }) as CreateSingletonInstance<CreateSingletonProps>;\n\n  const originalShow = singleton.show;\n\n  singleton.show = (target?: ReferenceElement | Instance | number): void => {\n    originalShow();\n\n    // first time, showOnCreate or programmatic call with no params\n    // default to showing first instance\n    if (!currentTarget && target == null) {\n      return prepareInstance(singleton, references[0]);\n    }\n\n    // triggered from event (do nothing as prepareInstance already called by onTrigger)\n    // programmatic call with no params when already visible (do nothing again)\n    if (currentTarget && target == null) {\n      return;\n    }\n\n    // target is index of instance\n    if (typeof target === 'number') {\n      return (\n        references[target] && prepareInstance(singleton, references[target])\n      );\n    }\n\n    // target is a child tippy instance\n    if (individualInstances.indexOf(target as Instance) >= 0) {\n      const ref = (target as Instance).reference;\n      return prepareInstance(singleton, ref);\n    }\n\n    // target is a ReferenceElement\n    if (references.indexOf(target as ReferenceElement) >= 0) {\n      return prepareInstance(singleton, target as ReferenceElement);\n    }\n  };\n\n  singleton.showNext = (): void => {\n    const first = references[0];\n    if (!currentTarget) {\n      return singleton.show(0);\n    }\n    const index = references.indexOf(currentTarget);\n    singleton.show(references[index + 1] || first);\n  };\n\n  singleton.showPrevious = (): void => {\n    const last = references[references.length - 1];\n    if (!currentTarget) {\n      return singleton.show(last);\n    }\n    const index = references.indexOf(currentTarget);\n    const target = references[index - 1] || last;\n    singleton.show(target);\n  };\n\n  const originalSetProps = singleton.setProps;\n\n  singleton.setProps = (props): void => {\n    overrides = props.overrides || overrides;\n    originalSetProps(props);\n  };\n\n  singleton.setInstances = (nextInstances): void => {\n    enableInstances(true);\n    interceptSetPropsCleanups.forEach((fn) => fn());\n\n    individualInstances = nextInstances;\n\n    enableInstances(false);\n    setReferences();\n    setTriggerTargets();\n    interceptSetPropsCleanups = interceptSetProps(singleton);\n\n    singleton.setProps({triggerTarget: triggerTargets});\n  };\n\n  interceptSetPropsCleanups = interceptSetProps(singleton);\n\n  return singleton;\n};\n\nexport default createSingleton;\n","import tippy from '..';\nimport {TOUCH_OPTIONS} from '../constants';\nimport {defaultProps} from '../props';\nimport {Instance, Props, Targets} from '../types';\nimport {ListenerObject} from '../types-internal';\nimport {normalizeToArray, removeProperties} from '../utils';\nimport {errorWhen} from '../validation';\n\nconst BUBBLING_EVENTS_MAP = {\n  mouseover: 'mouseenter',\n  focusin: 'focus',\n  click: 'click',\n};\n\n/**\n * Creates a delegate instance that controls the creation of tippy instances\n * for child elements (`target` CSS selector).\n */\nfunction delegate(\n  targets: Targets,\n  props: Partial<Props> & {target: string}\n): Instance | Instance[] {\n  /* istanbul ignore else */\n  if (__DEV__) {\n    errorWhen(\n      !(props && props.target),\n      [\n        'You must specity a `target` prop indicating a CSS selector string matching',\n        'the target elements that should receive a tippy.',\n      ].join(' ')\n    );\n  }\n\n  let listeners: ListenerObject[] = [];\n  let childTippyInstances: Instance[] = [];\n  let disabled = false;\n\n  const {target} = props;\n\n  const nativeProps = removeProperties(props, ['target']);\n  const parentProps = {...nativeProps, trigger: 'manual', touch: false};\n  const childProps = {\n    touch: defaultProps.touch,\n    ...nativeProps,\n    showOnCreate: true,\n  };\n\n  const returnValue = tippy(targets, parentProps);\n  const normalizedReturnValue = normalizeToArray(returnValue);\n\n  function onTrigger(event: Event): void {\n    if (!event.target || disabled) {\n      return;\n    }\n\n    const targetNode = (event.target as Element).closest(target);\n\n    if (!targetNode) {\n      return;\n    }\n\n    // Get relevant trigger with fallbacks:\n    // 1. Check `data-tippy-trigger` attribute on target node\n    // 2. Fallback to `trigger` passed to `delegate()`\n    // 3. Fallback to `defaultProps.trigger`\n    const trigger =\n      targetNode.getAttribute('data-tippy-trigger') ||\n      props.trigger ||\n      defaultProps.trigger;\n\n    // @ts-ignore\n    if (targetNode._tippy) {\n      return;\n    }\n\n    if (event.type === 'touchstart' && typeof childProps.touch === 'boolean') {\n      return;\n    }\n\n    if (\n      event.type !== 'touchstart' &&\n      trigger.indexOf((BUBBLING_EVENTS_MAP as any)[event.type]) < 0\n    ) {\n      return;\n    }\n\n    const instance = tippy(targetNode, childProps);\n\n    if (instance) {\n      childTippyInstances = childTippyInstances.concat(instance);\n    }\n  }\n\n  function on(\n    node: Element,\n    eventType: string,\n    handler: EventListener,\n    options: boolean | Record<string, unknown> = false\n  ): void {\n    node.addEventListener(eventType, handler, options);\n    listeners.push({node, eventType, handler, options});\n  }\n\n  function addEventListeners(instance: Instance): void {\n    const {reference} = instance;\n\n    on(reference, 'touchstart', onTrigger, TOUCH_OPTIONS);\n    on(reference, 'mouseover', onTrigger);\n    on(reference, 'focusin', onTrigger);\n    on(reference, 'click', onTrigger);\n  }\n\n  function removeEventListeners(): void {\n    listeners.forEach(({node, eventType, handler, options}: ListenerObject) => {\n      node.removeEventListener(eventType, handler, options);\n    });\n    listeners = [];\n  }\n\n  function applyMutations(instance: Instance): void {\n    const originalDestroy = instance.destroy;\n    const originalEnable = instance.enable;\n    const originalDisable = instance.disable;\n\n    instance.destroy = (shouldDestroyChildInstances = true): void => {\n      if (shouldDestroyChildInstances) {\n        childTippyInstances.forEach((instance) => {\n          instance.destroy();\n        });\n      }\n\n      childTippyInstances = [];\n\n      removeEventListeners();\n      originalDestroy();\n    };\n\n    instance.enable = (): void => {\n      originalEnable();\n      childTippyInstances.forEach((instance) => instance.enable());\n      disabled = false;\n    };\n\n    instance.disable = (): void => {\n      originalDisable();\n      childTippyInstances.forEach((instance) => instance.disable());\n      disabled = true;\n    };\n\n    addEventListeners(instance);\n  }\n\n  normalizedReturnValue.forEach(applyMutations);\n\n  return returnValue;\n}\n\nexport default delegate;\n","import {BACKDROP_CLASS} from '../constants';\nimport {div, setVisibilityState} from '../dom-utils';\nimport {getChildren} from '../template';\nimport {AnimateFill} from '../types';\nimport {errorWhen} from '../validation';\n\nconst animateFill: AnimateFill = {\n  name: 'animateFill',\n  defaultValue: false,\n  fn(instance) {\n    // @ts-ignore\n    if (!instance.props.render?.$$tippy) {\n      if (__DEV__) {\n        errorWhen(\n          instance.props.animateFill,\n          'The `animateFill` plugin requires the default render function.'\n        );\n      }\n\n      return {};\n    }\n\n    const {box, content} = getChildren(instance.popper);\n\n    const backdrop = instance.props.animateFill\n      ? createBackdropElement()\n      : null;\n\n    return {\n      onCreate(): void {\n        if (backdrop) {\n          box.insertBefore(backdrop, box.firstElementChild!);\n          box.setAttribute('data-animatefill', '');\n          box.style.overflow = 'hidden';\n\n          instance.setProps({arrow: false, animation: 'shift-away'});\n        }\n      },\n      onMount(): void {\n        if (backdrop) {\n          const {transitionDuration} = box.style;\n          const duration = Number(transitionDuration.replace('ms', ''));\n\n          // The content should fade in after the backdrop has mostly filled the\n          // tooltip element. `clip-path` is the other alternative but is not\n          // well-supported and is buggy on some devices.\n          content.style.transitionDelay = `${Math.round(duration / 10)}ms`;\n\n          backdrop.style.transitionDuration = transitionDuration;\n          setVisibilityState([backdrop], 'visible');\n        }\n      },\n      onShow(): void {\n        if (backdrop) {\n          backdrop.style.transitionDuration = '0ms';\n        }\n      },\n      onHide(): void {\n        if (backdrop) {\n          setVisibilityState([backdrop], 'hidden');\n        }\n      },\n    };\n  },\n};\n\nexport default animateFill;\n\nfunction createBackdropElement(): HTMLDivElement {\n  const backdrop = div();\n  backdrop.className = BACKDROP_CLASS;\n  setVisibilityState([backdrop], 'hidden');\n  return backdrop;\n}\n","import {getOwnerDocument, isMouseEvent} from '../dom-utils';\nimport {FollowCursor, Instance} from '../types';\n\nlet mouseCoords = {clientX: 0, clientY: 0};\nlet activeInstances: Array<{instance: Instance; doc: Document}> = [];\n\nfunction storeMouseCoords({clientX, clientY}: MouseEvent): void {\n  mouseCoords = {clientX, clientY};\n}\n\nfunction addMouseCoordsListener(doc: Document): void {\n  doc.addEventListener('mousemove', storeMouseCoords);\n}\n\nfunction removeMouseCoordsListener(doc: Document): void {\n  doc.removeEventListener('mousemove', storeMouseCoords);\n}\n\nconst followCursor: FollowCursor = {\n  name: 'followCursor',\n  defaultValue: false,\n  fn(instance) {\n    const reference = instance.reference;\n    const doc = getOwnerDocument(instance.props.triggerTarget || reference);\n\n    let isInternalUpdate = false;\n    let wasFocusEvent = false;\n    let isUnmounted = true;\n    let prevProps = instance.props;\n\n    function getIsInitialBehavior(): boolean {\n      return (\n        instance.props.followCursor === 'initial' && instance.state.isVisible\n      );\n    }\n\n    function addListener(): void {\n      doc.addEventListener('mousemove', onMouseMove);\n    }\n\n    function removeListener(): void {\n      doc.removeEventListener('mousemove', onMouseMove);\n    }\n\n    function unsetGetReferenceClientRect(): void {\n      isInternalUpdate = true;\n      instance.setProps({getReferenceClientRect: null});\n      isInternalUpdate = false;\n    }\n\n    function onMouseMove(event: MouseEvent): void {\n      // If the instance is interactive, avoid updating the position unless it's\n      // over the reference element\n      const isCursorOverReference = event.target\n        ? reference.contains(event.target as Node)\n        : true;\n      const {followCursor} = instance.props;\n      const {clientX, clientY} = event;\n\n      const rect = reference.getBoundingClientRect();\n      const relativeX = clientX - rect.left;\n      const relativeY = clientY - rect.top;\n\n      if (isCursorOverReference || !instance.props.interactive) {\n        instance.setProps({\n          // @ts-ignore - unneeded DOMRect properties\n          getReferenceClientRect() {\n            const rect = reference.getBoundingClientRect();\n\n            let x = clientX;\n            let y = clientY;\n\n            if (followCursor === 'initial') {\n              x = rect.left + relativeX;\n              y = rect.top + relativeY;\n            }\n\n            const top = followCursor === 'horizontal' ? rect.top : y;\n            const right = followCursor === 'vertical' ? rect.right : x;\n            const bottom = followCursor === 'horizontal' ? rect.bottom : y;\n            const left = followCursor === 'vertical' ? rect.left : x;\n\n            return {\n              width: right - left,\n              height: bottom - top,\n              top,\n              right,\n              bottom,\n              left,\n            };\n          },\n        });\n      }\n    }\n\n    function create(): void {\n      if (instance.props.followCursor) {\n        activeInstances.push({instance, doc});\n        addMouseCoordsListener(doc);\n      }\n    }\n\n    function destroy(): void {\n      activeInstances = activeInstances.filter(\n        (data) => data.instance !== instance\n      );\n\n      if (activeInstances.filter((data) => data.doc === doc).length === 0) {\n        removeMouseCoordsListener(doc);\n      }\n    }\n\n    return {\n      onCreate: create,\n      onDestroy: destroy,\n      onBeforeUpdate(): void {\n        prevProps = instance.props;\n      },\n      onAfterUpdate(_, {followCursor}): void {\n        if (isInternalUpdate) {\n          return;\n        }\n\n        if (\n          followCursor !== undefined &&\n          prevProps.followCursor !== followCursor\n        ) {\n          destroy();\n\n          if (followCursor) {\n            create();\n\n            if (\n              instance.state.isMounted &&\n              !wasFocusEvent &&\n              !getIsInitialBehavior()\n            ) {\n              addListener();\n            }\n          } else {\n            removeListener();\n            unsetGetReferenceClientRect();\n          }\n        }\n      },\n      onMount(): void {\n        if (instance.props.followCursor && !wasFocusEvent) {\n          if (isUnmounted) {\n            onMouseMove(mouseCoords as MouseEvent);\n            isUnmounted = false;\n          }\n\n          if (!getIsInitialBehavior()) {\n            addListener();\n          }\n        }\n      },\n      onTrigger(_, event): void {\n        if (isMouseEvent(event)) {\n          mouseCoords = {clientX: event.clientX, clientY: event.clientY};\n        }\n        wasFocusEvent = event.type === 'focus';\n      },\n      onHidden(): void {\n        if (instance.props.followCursor) {\n          unsetGetReferenceClientRect();\n          removeListener();\n          isUnmounted = true;\n        }\n      },\n    };\n  },\n};\n\nexport default followCursor;\n","import {Modifier, Placement} from '@popperjs/core';\nimport {isMouseEvent} from '../dom-utils';\nimport {BasePlacement, InlinePositioning, Props} from '../types';\nimport {arrayFrom, getBasePlacement} from '../utils';\n\nfunction getProps(props: Props, modifier: Modifier<any, any>): Partial<Props> {\n  return {\n    popperOptions: {\n      ...props.popperOptions,\n      modifiers: [\n        ...(props.popperOptions?.modifiers || []).filter(\n          ({name}) => name !== modifier.name\n        ),\n        modifier,\n      ],\n    },\n  };\n}\n\nconst inlinePositioning: InlinePositioning = {\n  name: 'inlinePositioning',\n  defaultValue: false,\n  fn(instance) {\n    const {reference} = instance;\n\n    function isEnabled(): boolean {\n      return !!instance.props.inlinePositioning;\n    }\n\n    let placement: Placement;\n    let cursorRectIndex = -1;\n    let isInternalUpdate = false;\n    let triedPlacements: Array<string> = [];\n\n    const modifier: Modifier<\n      'tippyInlinePositioning',\n      Record<string, unknown>\n    > = {\n      name: 'tippyInlinePositioning',\n      enabled: true,\n      phase: 'afterWrite',\n      fn({state}) {\n        if (isEnabled()) {\n          if (triedPlacements.indexOf(state.placement) !== -1) {\n            triedPlacements = [];\n          }\n\n          if (\n            placement !== state.placement &&\n            triedPlacements.indexOf(state.placement) === -1\n          ) {\n            triedPlacements.push(state.placement);\n            instance.setProps({\n              // @ts-ignore - unneeded DOMRect properties\n              getReferenceClientRect: () =>\n                getReferenceClientRect(state.placement),\n            });\n          }\n\n          placement = state.placement;\n        }\n      },\n    };\n\n    function getReferenceClientRect(placement: Placement): Partial<DOMRect> {\n      return getInlineBoundingClientRect(\n        getBasePlacement(placement),\n        reference.getBoundingClientRect(),\n        arrayFrom(reference.getClientRects()),\n        cursorRectIndex\n      );\n    }\n\n    function setInternalProps(partialProps: Partial<Props>): void {\n      isInternalUpdate = true;\n      instance.setProps(partialProps);\n      isInternalUpdate = false;\n    }\n\n    function addModifier(): void {\n      if (!isInternalUpdate) {\n        setInternalProps(getProps(instance.props, modifier));\n      }\n    }\n\n    return {\n      onCreate: addModifier,\n      onAfterUpdate: addModifier,\n      onTrigger(_, event): void {\n        if (isMouseEvent(event)) {\n          const rects = arrayFrom(instance.reference.getClientRects());\n          const cursorRect = rects.find(\n            (rect) =>\n              rect.left - 2 <= event.clientX &&\n              rect.right + 2 >= event.clientX &&\n              rect.top - 2 <= event.clientY &&\n              rect.bottom + 2 >= event.clientY\n          );\n          const index = rects.indexOf(cursorRect);\n          cursorRectIndex = index > -1 ? index : cursorRectIndex;\n        }\n      },\n      onHidden(): void {\n        cursorRectIndex = -1;\n      },\n    };\n  },\n};\n\nexport default inlinePositioning;\n\nexport function getInlineBoundingClientRect(\n  currentBasePlacement: BasePlacement | null,\n  boundingRect: DOMRect,\n  clientRects: DOMRect[],\n  cursorRectIndex: number\n): {\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n  width: number;\n  height: number;\n} {\n  // Not an inline element, or placement is not yet known\n  if (clientRects.length < 2 || currentBasePlacement === null) {\n    return boundingRect;\n  }\n\n  // There are two rects and they are disjoined\n  if (\n    clientRects.length === 2 &&\n    cursorRectIndex >= 0 &&\n    clientRects[0].left > clientRects[1].right\n  ) {\n    return clientRects[cursorRectIndex] || boundingRect;\n  }\n\n  switch (currentBasePlacement) {\n    case 'top':\n    case 'bottom': {\n      const firstRect = clientRects[0];\n      const lastRect = clientRects[clientRects.length - 1];\n      const isTop = currentBasePlacement === 'top';\n\n      const top = firstRect.top;\n      const bottom = lastRect.bottom;\n      const left = isTop ? firstRect.left : lastRect.left;\n      const right = isTop ? firstRect.right : lastRect.right;\n      const width = right - left;\n      const height = bottom - top;\n\n      return {top, bottom, left, right, width, height};\n    }\n    case 'left':\n    case 'right': {\n      const minLeft = Math.min(...clientRects.map((rects) => rects.left));\n      const maxRight = Math.max(...clientRects.map((rects) => rects.right));\n      const measureRects = clientRects.filter((rect) =>\n        currentBasePlacement === 'left'\n          ? rect.left === minLeft\n          : rect.right === maxRight\n      );\n\n      const top = measureRects[0].top;\n      const bottom = measureRects[measureRects.length - 1].bottom;\n      const left = minLeft;\n      const right = maxRight;\n      const width = right - left;\n      const height = bottom - top;\n\n      return {top, bottom, left, right, width, height};\n    }\n    default: {\n      return boundingRect;\n    }\n  }\n}\n","import {VirtualElement} from '@popperjs/core';\nimport {ReferenceElement, Sticky} from '../types';\n\nconst sticky: Sticky = {\n  name: 'sticky',\n  defaultValue: false,\n  fn(instance) {\n    const {reference, popper} = instance;\n\n    function getReference(): ReferenceElement | VirtualElement {\n      return instance.popperInstance\n        ? instance.popperInstance.state.elements.reference\n        : reference;\n    }\n\n    function shouldCheck(value: 'reference' | 'popper'): boolean {\n      return instance.props.sticky === true || instance.props.sticky === value;\n    }\n\n    let prevRefRect: ClientRect | null = null;\n    let prevPopRect: ClientRect | null = null;\n\n    function updatePosition(): void {\n      const currentRefRect = shouldCheck('reference')\n        ? getReference().getBoundingClientRect()\n        : null;\n      const currentPopRect = shouldCheck('popper')\n        ? popper.getBoundingClientRect()\n        : null;\n\n      if (\n        (currentRefRect && areRectsDifferent(prevRefRect, currentRefRect)) ||\n        (currentPopRect && areRectsDifferent(prevPopRect, currentPopRect))\n      ) {\n        if (instance.popperInstance) {\n          instance.popperInstance.update();\n        }\n      }\n\n      prevRefRect = currentRefRect;\n      prevPopRect = currentPopRect;\n\n      if (instance.state.isMounted) {\n        requestAnimationFrame(updatePosition);\n      }\n    }\n\n    return {\n      onMount(): void {\n        if (instance.props.sticky) {\n          updatePosition();\n        }\n      },\n    };\n  },\n};\n\nexport default sticky;\n\nfunction areRectsDifferent(\n  rectA: ClientRect | null,\n  rectB: ClientRect | null\n): boolean {\n  if (rectA && rectB) {\n    return (\n      rectA.top !== rectB.top ||\n      rectA.right !== rectB.right ||\n      rectA.bottom !== rectB.bottom ||\n      rectA.left !== rectB.left\n    );\n  }\n\n  return true;\n}\n","import tippy from '../src';\nimport {render} from '../src/template';\n\ntippy.setDefaultProps({render});\n\nexport {default, hideAll} from '../src';\nexport {default as createSingleton} from '../src/addons/createSingleton';\nexport {default as delegate} from '../src/addons/delegate';\nexport {default as animateFill} from '../src/plugins/animateFill';\nexport {default as followCursor} from '../src/plugins/followCursor';\nexport {default as inlinePositioning} from '../src/plugins/inlinePositioning';\nexport {default as sticky} from '../src/plugins/sticky';\nexport {ROUND_ARROW as roundArrow} from '../src/constants';\n","import getNodeName from \"../dom-utils/getNodeName.js\";\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles(_ref) {\n  var state = _ref.state;\n  Object.keys(state.elements).forEach(function (name) {\n    var style = state.styles[name] || {};\n    var attributes = state.attributes[name] || {};\n    var element = state.elements[name]; // arrow is optional + virtual elements\n\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    } // Flow doesn't support to extend this property, but it's the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe[cannot-write]\n\n\n    Object.assign(element.style, style);\n    Object.keys(attributes).forEach(function (name) {\n      var value = attributes[name];\n\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? '' : value);\n      }\n    });\n  });\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state;\n  var initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: '0',\n      top: '0',\n      margin: '0'\n    },\n    arrow: {\n      position: 'absolute'\n    },\n    reference: {}\n  };\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n  state.styles = initialStyles;\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return function () {\n    Object.keys(state.elements).forEach(function (name) {\n      var element = state.elements[name];\n      var attributes = state.attributes[name] || {};\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n      var style = styleProperties.reduce(function (style, property) {\n        style[property] = '';\n        return style;\n      }, {}); // arrow is optional + virtual elements\n\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      }\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (attribute) {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'applyStyles',\n  enabled: true,\n  phase: 'write',\n  fn: applyStyles,\n  effect: effect,\n  requires: ['computeStyles']\n};","export default function getNodeName(element) {\n  return element ? (element.nodeName || '').toLowerCase() : null;\n}","import getWindow from \"./getWindow.js\";\n\nfunction isElement(node) {\n  var OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n\nfunction isHTMLElement(node) {\n  var OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\nfunction isShadowRoot(node) {\n  // IE 11 has no ShadowRoot\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  var OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nexport { isElement, isHTMLElement, isShadowRoot };","export default function getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (node.toString() !== '[object Window]') {\n    var ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}","import { popperGenerator, detectOverflow } from \"./createPopper.js\";\nimport eventListeners from \"./modifiers/eventListeners.js\";\nimport popperOffsets from \"./modifiers/popperOffsets.js\";\nimport computeStyles from \"./modifiers/computeStyles.js\";\nimport applyStyles from \"./modifiers/applyStyles.js\";\nimport offset from \"./modifiers/offset.js\";\nimport flip from \"./modifiers/flip.js\";\nimport preventOverflow from \"./modifiers/preventOverflow.js\";\nimport arrow from \"./modifiers/arrow.js\";\nimport hide from \"./modifiers/hide.js\";\nvar defaultModifiers = [eventListeners, popperOffsets, computeStyles, applyStyles, offset, flip, preventOverflow, arrow, hide];\nvar createPopper = /*#__PURE__*/popperGenerator({\n  defaultModifiers: defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper, popperGenerator, defaultModifiers, detectOverflow }; // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper as createPopperLite } from \"./popper-lite.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport * from \"./modifiers/index.js\";","import getCompositeRect from \"./dom-utils/getCompositeRect.js\";\nimport getLayoutRect from \"./dom-utils/getLayoutRect.js\";\nimport listScrollParents from \"./dom-utils/listScrollParents.js\";\nimport getOffsetParent from \"./dom-utils/getOffsetParent.js\";\nimport orderModifiers from \"./utils/orderModifiers.js\";\nimport debounce from \"./utils/debounce.js\";\nimport mergeByName from \"./utils/mergeByName.js\";\nimport detectOverflow from \"./utils/detectOverflow.js\";\nimport { isElement } from \"./dom-utils/instanceOf.js\";\nvar DEFAULT_OPTIONS = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute'\n};\n\nfunction areValidElements() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return !args.some(function (element) {\n    return !(element && typeof element.getBoundingClientRect === 'function');\n  });\n}\n\nexport function popperGenerator(generatorOptions) {\n  if (generatorOptions === void 0) {\n    generatorOptions = {};\n  }\n\n  var _generatorOptions = generatorOptions,\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\n      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n  return function createPopper(reference, popper, options) {\n    if (options === void 0) {\n      options = defaultOptions;\n    }\n\n    var state = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n      modifiersData: {},\n      elements: {\n        reference: reference,\n        popper: popper\n      },\n      attributes: {},\n      styles: {}\n    };\n    var effectCleanupFns = [];\n    var isDestroyed = false;\n    var instance = {\n      state: state,\n      setOptions: function setOptions(setOptionsAction) {\n        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;\n        cleanupModifierEffects();\n        state.options = Object.assign({}, defaultOptions, state.options, options);\n        state.scrollParents = {\n          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n          popper: listScrollParents(popper)\n        }; // Orders the modifiers based on their dependencies and `phase`\n        // properties\n\n        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\n          return m.enabled;\n        });\n        runModifierEffects();\n        return instance.update();\n      },\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate: function forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        var _state$elements = state.elements,\n            reference = _state$elements.reference,\n            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n\n        if (!areValidElements(reference, popper)) {\n          return;\n        } // Store the reference and popper rects to be read by modifiers\n\n\n        state.rects = {\n          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),\n          popper: getLayoutRect(popper)\n        }; // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n\n        state.reset = false;\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n\n        state.orderedModifiers.forEach(function (modifier) {\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n        });\n\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          var _state$orderedModifie = state.orderedModifiers[index],\n              fn = _state$orderedModifie.fn,\n              _state$orderedModifie2 = _state$orderedModifie.options,\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n              name = _state$orderedModifie.name;\n\n          if (typeof fn === 'function') {\n            state = fn({\n              state: state,\n              options: _options,\n              name: name,\n              instance: instance\n            }) || state;\n          }\n        }\n      },\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce(function () {\n        return new Promise(function (resolve) {\n          instance.forceUpdate();\n          resolve(state);\n        });\n      }),\n      destroy: function destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!areValidElements(reference, popper)) {\n      return instance;\n    }\n\n    instance.setOptions(options).then(function (state) {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    }); // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(function (_ref) {\n        var name = _ref.name,\n            _ref$options = _ref.options,\n            options = _ref$options === void 0 ? {} : _ref$options,\n            effect = _ref.effect;\n\n        if (typeof effect === 'function') {\n          var cleanupFn = effect({\n            state: state,\n            name: name,\n            instance: instance,\n            options: options\n          });\n\n          var noopFn = function noopFn() {};\n\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(function (fn) {\n        return fn();\n      });\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\nexport var createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules\n\nexport { detectOverflow };","import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getNodeScroll from \"./getNodeScroll.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport { round } from \"../utils/math.js\";\n\nfunction isElementScaled(element) {\n  var rect = element.getBoundingClientRect();\n  var scaleX = round(rect.width) / element.offsetWidth || 1;\n  var scaleY = round(rect.height) / element.offsetHeight || 1;\n  return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\n\nexport default function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent, true);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}","import { isElement, isHTMLElement } from \"./instanceOf.js\";\nimport { round } from \"../utils/math.js\";\nimport getWindow from \"./getWindow.js\";\nimport isLayoutViewport from \"./isLayoutViewport.js\";\nexport default function getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  var clientRect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n  }\n\n  var _ref = isElement(element) ? getWindow(element) : window,\n      visualViewport = _ref.visualViewport;\n\n  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;\n  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;\n  var width = clientRect.width / scaleX;\n  var height = clientRect.height / scaleY;\n  return {\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x: x,\n    y: y\n  };\n}","export var max = Math.max;\nexport var min = Math.min;\nexport var round = Math.round;","import getUAString from \"../utils/userAgent.js\";\nexport default function isLayoutViewport() {\n  return !/^((?!chrome|android).)*safari/i.test(getUAString());\n}","export default function getUAString() {\n  var uaData = navigator.userAgentData;\n\n  if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {\n    return uaData.brands.map(function (item) {\n      return item.brand + \"/\" + item.version;\n    }).join(' ');\n  }\n\n  return navigator.userAgent;\n}","import getWindowScroll from \"./getWindowScroll.js\";\nimport getWindow from \"./getWindow.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getHTMLElementScroll from \"./getHTMLElementScroll.js\";\nexport default function getNodeScroll(node) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}","import getWindow from \"./getWindow.js\";\nexport default function getWindowScroll(node) {\n  var win = getWindow(node);\n  var scrollLeft = win.pageXOffset;\n  var scrollTop = win.pageYOffset;\n  return {\n    scrollLeft: scrollLeft,\n    scrollTop: scrollTop\n  };\n}","export default function getHTMLElementScroll(element) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nexport default function getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}","import { isElement } from \"./instanceOf.js\";\nexport default function getDocumentElement(element) {\n  // $FlowFixMe[incompatible-return]: assume body is always available\n  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]\n  element.document) || window.document).documentElement;\n}","import getComputedStyle from \"./getComputedStyle.js\";\nexport default function isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  var _getComputedStyle = getComputedStyle(element),\n      overflow = _getComputedStyle.overflow,\n      overflowX = _getComputedStyle.overflowX,\n      overflowY = _getComputedStyle.overflowY;\n\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}","import getWindow from \"./getWindow.js\";\nexport default function getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\"; // Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\n\nexport default function getLayoutRect(element) {\n  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: width,\n    height: height\n  };\n}","import getScrollParent from \"./getScrollParent.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport getWindow from \"./getWindow.js\";\nimport isScrollParent from \"./isScrollParent.js\";\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the\nreference element's position.\n*/\n\nexport default function listScrollParents(element, list) {\n  var _element$ownerDocumen;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  var scrollParent = getScrollParent(element);\n  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n  var win = getWindow(scrollParent);\n  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n  var updatedList = list.concat(target);\n  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\n  updatedList.concat(listScrollParents(getParentNode(target)));\n}","import getParentNode from \"./getParentNode.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nexport default function getScrollParent(node) {\n  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}","import getNodeName from \"./getNodeName.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport { isShadowRoot } from \"./instanceOf.js\";\nexport default function getParentNode(element) {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || ( // DOM Element detected\n    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n\n  );\n}","import getWindow from \"./getWindow.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isHTMLElement, isShadowRoot } from \"./instanceOf.js\";\nimport isTableElement from \"./isTableElement.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport getUAString from \"../utils/userAgent.js\";\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var isFirefox = /firefox/i.test(getUAString());\n  var isIE = /Trident/i.test(getUAString());\n\n  if (isIE && isHTMLElement(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    var elementCss = getComputedStyle(element);\n\n    if (elementCss.position === 'fixed') {\n      return null;\n    }\n  }\n\n  var currentNode = getParentNode(element);\n\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nexport default function getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}","import getNodeName from \"./getNodeName.js\";\nexport default function isTableElement(element) {\n  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\n}","import { modifierPhases } from \"../enums.js\"; // source: https://stackoverflow.com/questions/49875255\n\nfunction order(modifiers) {\n  var map = new Map();\n  var visited = new Set();\n  var result = [];\n  modifiers.forEach(function (modifier) {\n    map.set(modifier.name, modifier);\n  }); // On visiting object, check for its dependencies and visit them recursively\n\n  function sort(modifier) {\n    visited.add(modifier.name);\n    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n    requires.forEach(function (dep) {\n      if (!visited.has(dep)) {\n        var depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n    result.push(modifier);\n  }\n\n  modifiers.forEach(function (modifier) {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n  return result;\n}\n\nexport default function orderModifiers(modifiers) {\n  // order based on dependencies\n  var orderedModifiers = order(modifiers); // order based on phase\n\n  return modifierPhases.reduce(function (acc, phase) {\n    return acc.concat(orderedModifiers.filter(function (modifier) {\n      return modifier.phase === phase;\n    }));\n  }, []);\n}","export var top = 'top';\nexport var bottom = 'bottom';\nexport var right = 'right';\nexport var left = 'left';\nexport var auto = 'auto';\nexport var basePlacements = [top, bottom, right, left];\nexport var start = 'start';\nexport var end = 'end';\nexport var clippingParents = 'clippingParents';\nexport var viewport = 'viewport';\nexport var popper = 'popper';\nexport var reference = 'reference';\nexport var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\n}, []);\nexport var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\n}, []); // modifiers that need to read the DOM\n\nexport var beforeRead = 'beforeRead';\nexport var read = 'read';\nexport var afterRead = 'afterRead'; // pure-logic modifiers\n\nexport var beforeMain = 'beforeMain';\nexport var main = 'main';\nexport var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nexport var beforeWrite = 'beforeWrite';\nexport var write = 'write';\nexport var afterWrite = 'afterWrite';\nexport var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];","export default function debounce(fn) {\n  var pending;\n  return function () {\n    if (!pending) {\n      pending = new Promise(function (resolve) {\n        Promise.resolve().then(function () {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}","export default function mergeByName(modifiers) {\n  var merged = modifiers.reduce(function (merged, current) {\n    var existing = merged[current.name];\n    merged[current.name] = existing ? Object.assign({}, existing, current, {\n      options: Object.assign({}, existing.options, current.options),\n      data: Object.assign({}, existing.data, current.data)\n    }) : current;\n    return merged;\n  }, {}); // IE11 does not support Object.values\n\n  return Object.keys(merged).map(function (key) {\n    return merged[key];\n  });\n}","import getWindow from \"../dom-utils/getWindow.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar passive = {\n  passive: true\n};\n\nfunction effect(_ref) {\n  var state = _ref.state,\n      instance = _ref.instance,\n      options = _ref.options;\n  var _options$scroll = options.scroll,\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\n      _options$resize = options.resize,\n      resize = _options$resize === void 0 ? true : _options$resize;\n  var window = getWindow(state.elements.popper);\n  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n\n  if (scroll) {\n    scrollParents.forEach(function (scrollParent) {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return function () {\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: function fn() {},\n  effect: effect,\n  data: {}\n};","import computeOffsets from \"../utils/computeOffsets.js\";\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n};","import getBasePlacement from \"./getBasePlacement.js\";\nimport getVariation from \"./getVariation.js\";\nimport getMainAxisFromPlacement from \"./getMainAxisFromPlacement.js\";\nimport { top, right, bottom, left, start, end } from \"../enums.js\";\nexport default function computeOffsets(_ref) {\n  var reference = _ref.reference,\n      element = _ref.element,\n      placement = _ref.placement;\n  var basePlacement = placement ? getBasePlacement(placement) : null;\n  var variation = placement ? getVariation(placement) : null;\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\n  var offsets;\n\n  switch (basePlacement) {\n    case top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n  if (mainAxis != null) {\n    var len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n        break;\n\n      case end:\n        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n        break;\n\n      default:\n    }\n  }\n\n  return offsets;\n}","import { auto } from \"../enums.js\";\nexport default function getBasePlacement(placement) {\n  return placement.split('-')[0];\n}","export default function getVariation(placement) {\n  return placement.split('-')[1];\n}","export default function getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n}","import { top, left, right, bottom, end } from \"../enums.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getWindow from \"../dom-utils/getWindow.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getComputedStyle from \"../dom-utils/getComputedStyle.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport { round } from \"../utils/math.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n\nfunction roundOffsetsByDPR(_ref, win) {\n  var x = _ref.x,\n      y = _ref.y;\n  var dpr = win.devicePixelRatio || 1;\n  return {\n    x: round(x * dpr) / dpr || 0,\n    y: round(y * dpr) / dpr || 0\n  };\n}\n\nexport function mapToStyles(_ref2) {\n  var _Object$assign2;\n\n  var popper = _ref2.popper,\n      popperRect = _ref2.popperRect,\n      placement = _ref2.placement,\n      variation = _ref2.variation,\n      offsets = _ref2.offsets,\n      position = _ref2.position,\n      gpuAcceleration = _ref2.gpuAcceleration,\n      adaptive = _ref2.adaptive,\n      roundOffsets = _ref2.roundOffsets,\n      isFixed = _ref2.isFixed;\n  var _offsets$x = offsets.x,\n      x = _offsets$x === void 0 ? 0 : _offsets$x,\n      _offsets$y = offsets.y,\n      y = _offsets$y === void 0 ? 0 : _offsets$y;\n\n  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref3.x;\n  y = _ref3.y;\n  var hasX = offsets.hasOwnProperty('x');\n  var hasY = offsets.hasOwnProperty('y');\n  var sideX = left;\n  var sideY = top;\n  var win = window;\n\n  if (adaptive) {\n    var offsetParent = getOffsetParent(popper);\n    var heightProp = 'clientHeight';\n    var widthProp = 'clientWidth';\n\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n\n      if (getComputedStyle(offsetParent).position !== 'static' && position === 'absolute') {\n        heightProp = 'scrollHeight';\n        widthProp = 'scrollWidth';\n      }\n    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n\n\n    offsetParent = offsetParent;\n\n    if (placement === top || (placement === left || placement === right) && variation === end) {\n      sideY = bottom;\n      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]\n      offsetParent[heightProp];\n      y -= offsetY - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === left || (placement === top || placement === bottom) && variation === end) {\n      sideX = right;\n      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]\n      offsetParent[widthProp];\n      x -= offsetX - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  var commonStyles = Object.assign({\n    position: position\n  }, adaptive && unsetSides);\n\n  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({\n    x: x,\n    y: y\n  }, getWindow(popper)) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref4.x;\n  y = _ref4.y;\n\n  if (gpuAcceleration) {\n    var _Object$assign;\n\n    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n  }\n\n  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\n}\n\nfunction computeStyles(_ref5) {\n  var state = _ref5.state,\n      options = _ref5.options;\n  var _options$gpuAccelerat = options.gpuAcceleration,\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n      _options$adaptive = options.adaptive,\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,\n      _options$roundOffsets = options.roundOffsets,\n      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n  var commonStyles = {\n    placement: getBasePlacement(state.placement),\n    variation: getVariation(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration: gpuAcceleration,\n    isFixed: state.options.strategy === 'fixed'\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.popperOffsets,\n      position: state.options.strategy,\n      adaptive: adaptive,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.arrow,\n      position: 'absolute',\n      adaptive: false,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-placement': state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {}\n};","import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport { top, left, right, placements } from \"../enums.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport function distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n};","import getOppositePlacement from \"../utils/getOppositePlacement.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getOppositeVariationPlacement from \"../utils/getOppositeVariationPlacement.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport computeAutoPlacement from \"../utils/computeAutoPlacement.js\";\nimport { bottom, top, start, right, left, auto } from \"../enums.js\";\nimport getVariation from \"../utils/getVariation.js\"; // eslint-disable-next-line import/no-unused-modules\n\nfunction getExpandedFallbackPlacements(placement) {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\n}\n\nfunction flip(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n      specifiedFallbackPlacements = options.fallbackPlacements,\n      padding = options.padding,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      _options$flipVariatio = options.flipVariations,\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n      allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = getBasePlacement(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n\n    var _basePlacement = getBasePlacement(placement);\n\n    var isStartVariation = getVariation(placement) === start;\n    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? 'width' : 'height';\n    var overflow = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    var altVariationSide = getOppositePlacement(mainVariationSide);\n    var checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return \"break\";\n      }\n    };\n\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n\n      if (_ret === \"break\") break;\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: {\n    _skip: false\n  }\n};","var hash = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nexport default function getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}","var hash = {\n  start: 'end',\n  end: 'start'\n};\nexport default function getOppositeVariationPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return hash[matched];\n  });\n}","import getClippingRect from \"../dom-utils/getClippingRect.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getBoundingClientRect from \"../dom-utils/getBoundingClientRect.js\";\nimport computeOffsets from \"./computeOffsets.js\";\nimport rectToClientRect from \"./rectToClientRect.js\";\nimport { clippingParents, reference, popper, bottom, top, right, basePlacements, viewport } from \"../enums.js\";\nimport { isElement } from \"../dom-utils/instanceOf.js\";\nimport mergePaddingObject from \"./mergePaddingObject.js\";\nimport expandToHashMap from \"./expandToHashMap.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport default function detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$placement = _options.placement,\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\n      _options$strategy = _options.strategy,\n      strategy = _options$strategy === void 0 ? state.strategy : _options$strategy,\n      _options$boundary = _options.boundary,\n      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,\n      _options$rootBoundary = _options.rootBoundary,\n      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\n      _options$elementConte = _options.elementContext,\n      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,\n      _options$altBoundary = _options.altBoundary,\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n      _options$padding = _options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n  var altContext = elementContext === popper ? reference : popper;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);\n  var referenceClientRect = getBoundingClientRect(state.elements.reference);\n  var popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement: placement\n  });\n  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));\n  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}","import { viewport } from \"../enums.js\";\nimport getViewportRect from \"./getViewportRect.js\";\nimport getDocumentRect from \"./getDocumentRect.js\";\nimport listScrollParents from \"./listScrollParents.js\";\nimport getOffsetParent from \"./getOffsetParent.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isElement, isHTMLElement } from \"./instanceOf.js\";\nimport getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport contains from \"./contains.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport rectToClientRect from \"../utils/rectToClientRect.js\";\nimport { max, min } from \"../utils/math.js\";\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  var rect = getBoundingClientRect(element, false, strategy === 'fixed');\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\n\nfunction getClientRectFromMixedType(element, clippingParent, strategy) {\n  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  var clippingParents = listScrollParents(getParentNode(element));\n  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\n  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n\n\n  return clippingParents.filter(function (clippingParent) {\n    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';\n  });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nexport default function getClippingRect(element, boundary, rootBoundary, strategy) {\n  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n  var firstClippingParent = clippingParents[0];\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n    var rect = getClientRectFromMixedType(element, clippingParent, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent, strategy));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}","import getWindow from \"./getWindow.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport isLayoutViewport from \"./isLayoutViewport.js\";\nexport default function getViewportRect(element, strategy) {\n  var win = getWindow(element);\n  var html = getDocumentElement(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    var layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x + getWindowScrollBarX(element),\n    y: y\n  };\n}","import getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nimport { max } from \"../utils/math.js\"; // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nexport default function getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  var html = getDocumentElement(element);\n  var winScroll = getWindowScroll(element);\n  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}","import { isShadowRoot } from \"./instanceOf.js\";\nexport default function contains(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}","export default function rectToClientRect(rect) {\n  return Object.assign({}, rect, {\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}","import getFreshSideObject from \"./getFreshSideObject.js\";\nexport default function mergePaddingObject(paddingObject) {\n  return Object.assign({}, getFreshSideObject(), paddingObject);\n}","export default function getFreshSideObject() {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n}","export default function expandToHashMap(value, keys) {\n  return keys.reduce(function (hashMap, key) {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}","import getVariation from \"./getVariation.js\";\nimport { variationPlacements, basePlacements, placements as allPlacements } from \"../enums.js\";\nimport detectOverflow from \"./detectOverflow.js\";\nimport getBasePlacement from \"./getBasePlacement.js\";\nexport default function computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? allPlacements : _options$allowedAutoP;\n  var variation = getVariation(placement);\n  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n    return getVariation(placement) === variation;\n  }) : basePlacements;\n  var allowedPlacements = placements.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}","import { top, left, right, bottom, start } from \"../enums.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport getAltAxis from \"../utils/getAltAxis.js\";\nimport { within, withinMaxClamp } from \"../utils/within.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport getFreshSideObject from \"../utils/getFreshSideObject.js\";\nimport { min as mathMin, max as mathMax } from \"../utils/math.js\";\n\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = detectOverflow(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = getBasePlacement(state.placement);\n  var variation = getVariation(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = getMainAxisFromPlacement(basePlacement);\n  var altAxis = getAltAxis(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {\n    mainAxis: tetherOffsetValue,\n    altAxis: tetherOffsetValue\n  } : Object.assign({\n    mainAxis: 0,\n    altAxis: 0\n  }, tetherOffsetValue);\n  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis) {\n    var _offsetModifierState$;\n\n    var mainSide = mainAxis === 'y' ? top : left;\n    var altSide = mainAxis === 'y' ? bottom : right;\n    var len = mainAxis === 'y' ? 'height' : 'width';\n    var offset = popperOffsets[mainAxis];\n    var min = offset + overflow[mainSide];\n    var max = offset - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\n    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\n    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = offset + maxOffset - offsetModifierValue;\n    var preventedOffset = within(tether ? mathMin(min, tetherMin) : min, offset, tether ? mathMax(max, tetherMax) : max);\n    popperOffsets[mainAxis] = preventedOffset;\n    data[mainAxis] = preventedOffset - offset;\n  }\n\n  if (checkAltAxis) {\n    var _offsetModifierState$2;\n\n    var _mainSide = mainAxis === 'x' ? top : left;\n\n    var _altSide = mainAxis === 'x' ? bottom : right;\n\n    var _offset = popperOffsets[altAxis];\n\n    var _len = altAxis === 'y' ? 'height' : 'width';\n\n    var _min = _offset + overflow[_mainSide];\n\n    var _max = _offset - overflow[_altSide];\n\n    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;\n\n    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\n\n    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\n\n    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\n\n    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\n\n    popperOffsets[altAxis] = _preventedOffset;\n    data[altAxis] = _preventedOffset - _offset;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset']\n};","export default function getAltAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}","import { max as mathMax, min as mathMin } from \"./math.js\";\nexport function within(min, value, max) {\n  return mathMax(min, mathMin(value, max));\n}\nexport function withinMaxClamp(min, value, max) {\n  var v = within(min, value, max);\n  return v > max ? max : v;\n}","import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport contains from \"../dom-utils/contains.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport { within } from \"../utils/within.js\";\nimport mergePaddingObject from \"../utils/mergePaddingObject.js\";\nimport expandToHashMap from \"../utils/expandToHashMap.js\";\nimport { left, right, basePlacements, top, bottom } from \"../enums.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar toPaddingObject = function toPaddingObject(padding, state) {\n  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : padding;\n  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n};\n\nfunction arrow(_ref) {\n  var _state$modifiersData$;\n\n  var state = _ref.state,\n      name = _ref.name,\n      options = _ref.options;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = getBasePlacement(state.placement);\n  var axis = getMainAxisFromPlacement(basePlacement);\n  var isVertical = [left, right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  var paddingObject = toPaddingObject(options.padding, state);\n  var arrowRect = getLayoutRect(arrowElement);\n  var minProp = axis === 'y' ? top : left;\n  var maxProp = axis === 'y' ? bottom : right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = getOffsetParent(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options;\n  var _options$element = options.element,\n      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;\n\n  if (arrowElement == null) {\n    return;\n  } // CSS selector\n\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect: effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n};","import { top, bottom, left, right } from \"../enums.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [top, right, bottom, left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference'\n  });\n  var popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n};","const $info = document.getElementById('info')\nconst $infoDialog = document.getElementById('info-dialog')\n\n$info.addEventListener('click', () => {\n  if (!$infoDialog.open) {\n    $infoDialog.showModal()\n  }\n})\n","const id = 'G-44BJC1S0CM'\nconst script = document.createElement('script')\nscript.setAttribute('src', `https://www.googletagmanager.com/gtag/js?id=${id}`)\ndocument.head.append(script)\n\nconst dataLayer = window.dataLayer = window.dataLayer || []\nfunction gtag () { dataLayer.push(arguments) }\ngtag('js', new Date())\ngtag('config', id)\n"],"names":["$a39eeb69bf620de6$var$static_l_desc","$a39eeb69bf620de6$var$static_d_desc","$a39eeb69bf620de6$var$static_bl_desc","$a39eeb69bf620de6$var$lenfix","$a39eeb69bf620de6$var$distfix","$a39eeb69bf620de6$var$zero$1","buf","len","length","$a39eeb69bf620de6$var$extra_lbits","Uint8Array","$a39eeb69bf620de6$var$extra_dbits","$a39eeb69bf620de6$var$extra_blbits","$a39eeb69bf620de6$var$bl_order","$a39eeb69bf620de6$var$static_ltree","Array","$a39eeb69bf620de6$var$static_dtree","$a39eeb69bf620de6$var$D_CODES$1","$a39eeb69bf620de6$var$_dist_code","$a39eeb69bf620de6$var$_length_code","$a39eeb69bf620de6$var$MAX_MATCH$1","$a39eeb69bf620de6$var$base_length","$a39eeb69bf620de6$var$base_dist","$a39eeb69bf620de6$var$StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","$a39eeb69bf620de6$var$TreeDesc","dyn_tree","stat_desc","max_code","$a39eeb69bf620de6$var$d_code","dist","$a39eeb69bf620de6$var$put_short","s","w","pending_buf","pending","$a39eeb69bf620de6$var$send_bits","value","bi_valid","$a39eeb69bf620de6$var$Buf_size","bi_buf","$a39eeb69bf620de6$var$send_code","c","tree","$a39eeb69bf620de6$var$bi_reverse","code","res","$a39eeb69bf620de6$var$bi_flush","$a39eeb69bf620de6$var$gen_bitlen","desc","h","n","m","bits","xbits","f","stree","extra","base","overflow","bl_count","heap","heap_max","opt_len","static_len","$a39eeb69bf620de6$var$gen_codes","next_code","$a39eeb69bf620de6$var$MAX_BITS$1","$a39eeb69bf620de6$var$tr_static_init","$a39eeb69bf620de6$var$LENGTH_CODES$1","$a39eeb69bf620de6$var$L_CODES$1","$a39eeb69bf620de6$var$LITERALS$1","$a39eeb69bf620de6$var$init_block","dyn_ltree","dyn_dtree","bl_tree","$a39eeb69bf620de6$var$END_BLOCK","sym_next","matches","$a39eeb69bf620de6$var$bi_windup","$a39eeb69bf620de6$var$smaller","depth","_n2","_m2","$a39eeb69bf620de6$var$pqdownheap","k","v","j","heap_len","$a39eeb69bf620de6$var$compress_block","ltree","dtree","lc","sx","sym_buf","$a39eeb69bf620de6$var$build_tree","node","$a39eeb69bf620de6$var$scan_tree","curlen","prevlen","nextlen","count","max_count","min_count","$a39eeb69bf620de6$var$REP_3_6","$a39eeb69bf620de6$var$REPZ_3_10","$a39eeb69bf620de6$var$REPZ_11_138","$a39eeb69bf620de6$var$send_tree","$a39eeb69bf620de6$var$build_bl_tree","max_blindex","l_desc","d_desc","bl_desc","$a39eeb69bf620de6$var$BL_CODES$1","$a39eeb69bf620de6$var$send_all_trees","lcodes","dcodes","blcodes","rank","$a39eeb69bf620de6$var$detect_data_type","block_mask","$a39eeb69bf620de6$var$static_init_done","$a39eeb69bf620de6$var$_tr_stored_block$1","stored_len","last","$a39eeb69bf620de6$var$STORED_BLOCK","set","window","subarray","generatorOptions","_generatorOptions$def","defaultModifiers","_generatorOptions$def2","defaultOptions","$a39eeb69bf620de6$var$trees","_tr_init","_tr_stored_block","_tr_flush_block","opt_lenb","static_lenb","level","strm","data_type","strategy","$a39eeb69bf620de6$var$STATIC_TREES","$a39eeb69bf620de6$var$DYN_TREES","_tr_tally","sym_end","_tr_align","$a39eeb69bf620de6$var$adler32_1","adler","pos","s1","s2","$a39eeb69bf620de6$var$crcTable","Uint32Array","$a39eeb69bf620de6$var$makeTable","table","$a39eeb69bf620de6$var$crc32_1","crc","end","i","t","$a39eeb69bf620de6$var$messages","$a39eeb69bf620de6$var$constants$2","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","$a39eeb69bf620de6$var$_tr_init","$a39eeb69bf620de6$var$_tr_stored_block","$a39eeb69bf620de6$var$_tr_flush_block","$a39eeb69bf620de6$var$_tr_tally","$a39eeb69bf620de6$var$_tr_align","$a39eeb69bf620de6$var$Z_NO_FLUSH$2","$a39eeb69bf620de6$var$Z_PARTIAL_FLUSH","$a39eeb69bf620de6$var$Z_FULL_FLUSH$1","$a39eeb69bf620de6$var$Z_FINISH$3","$a39eeb69bf620de6$var$Z_BLOCK$1","$a39eeb69bf620de6$var$Z_OK$3","$a39eeb69bf620de6$var$Z_STREAM_END$3","$a39eeb69bf620de6$var$Z_STREAM_ERROR$2","$a39eeb69bf620de6$var$Z_DATA_ERROR$2","$a39eeb69bf620de6$var$Z_BUF_ERROR$1","$a39eeb69bf620de6$var$Z_DEFAULT_COMPRESSION$1","$a39eeb69bf620de6$var$Z_FILTERED","$a39eeb69bf620de6$var$Z_HUFFMAN_ONLY","$a39eeb69bf620de6$var$Z_RLE","$a39eeb69bf620de6$var$Z_FIXED","$a39eeb69bf620de6$var$Z_DEFAULT_STRATEGY$1","$a39eeb69bf620de6$var$Z_UNKNOWN","$a39eeb69bf620de6$var$Z_DEFLATED$2","$a39eeb69bf620de6$var$err","errorCode","msg","$a39eeb69bf620de6$var$rank","$a39eeb69bf620de6$var$zero","$a39eeb69bf620de6$var$slide_hash","p","wsize","w_size","hash_size","head","prev","$a39eeb69bf620de6$var$HASH","data","hash_shift","hash_mask","$a39eeb69bf620de6$var$flush_pending","state","avail_out","output","pending_out","next_out","total_out","$a39eeb69bf620de6$var$flush_block_only","block_start","strstart","$a39eeb69bf620de6$var$put_byte","b","$a39eeb69bf620de6$var$putShortMSB","$a39eeb69bf620de6$var$read_buf","start","size","avail_in","input","next_in","wrap","total_in","$a39eeb69bf620de6$var$longest_match","cur_match","match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","limit","$a39eeb69bf620de6$var$MAX_MATCH","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","$a39eeb69bf620de6$var$fill_window","more","str","_w_size","window_size","insert","ins_h","$a39eeb69bf620de6$var$deflate_stored","flush","min_block","pending_buf_size","left","have","used","high_water","$a39eeb69bf620de6$var$deflate_fast","hash_head","bflush","match_length","max_lazy_match","$a39eeb69bf620de6$var$MIN_MATCH","$a39eeb69bf620de6$var$deflate_slow","max_insert","prev_match","match_available","$a39eeb69bf620de6$var$deflate_rle","$a39eeb69bf620de6$var$deflate_huff","$a39eeb69bf620de6$var$Config","good_length","max_lazy","nice_length","max_chain","func","$a39eeb69bf620de6$var$configuration_table","$a39eeb69bf620de6$var$lm_init","$a39eeb69bf620de6$var$DeflateState","status","gzhead","gzindex","method","last_flush","w_bits","hash_bits","Uint16Array","$a39eeb69bf620de6$var$HEAP_SIZE","$a39eeb69bf620de6$var$MAX_BITS","lit_bufsize","$a39eeb69bf620de6$var$deflateStateCheck","$a39eeb69bf620de6$var$deflateResetKeep","$a39eeb69bf620de6$var$deflateReset","ret","$a39eeb69bf620de6$var$deflate_1$2","deflateInit2","windowBits","memLevel","deflateSetHeader","deflate","old_flush","header","level_flags","text","hcrc","name","comment","time","os","beg","copy","gzhead_extra","val","charCodeAt","bstate","deflateEnd","deflateSetDictionary","dictionary","dictLength","tmpDict","avail","next","$a39eeb69bf620de6$var$_has","obj","key","Object","prototype","hasOwnProperty","call","$a39eeb69bf620de6$var$common","assign","sources","slice","arguments","source","shift","TypeError","flattenChunks","chunks","l","result","chunk","$a39eeb69bf620de6$var$STR_APPLY_UIA_OK","String","fromCharCode","apply","__","$a39eeb69bf620de6$var$_utf8len","q","$a39eeb69bf620de6$var$buf2binstring","$a39eeb69bf620de6$var$strings","string2buf","TextEncoder","encode","c2","m_pos","str_len","buf_len","buf2string","max","out","TextDecoder","decode","utf16buf","c_len","utf8border","$a39eeb69bf620de6$var$zstream","$a39eeb69bf620de6$var$toString$1","toString","$a39eeb69bf620de6$var$Z_NO_FLUSH$1","$a39eeb69bf620de6$var$Z_SYNC_FLUSH","$a39eeb69bf620de6$var$Z_FULL_FLUSH","$a39eeb69bf620de6$var$Z_FINISH$2","$a39eeb69bf620de6$var$Z_OK$2","$a39eeb69bf620de6$var$Z_STREAM_END$2","$a39eeb69bf620de6$var$Z_DEFAULT_COMPRESSION","$a39eeb69bf620de6$var$Z_DEFAULT_STRATEGY","$a39eeb69bf620de6$var$Z_DEFLATED$1","$a39eeb69bf620de6$var$Deflate$1","options","chunkSize","opt","raw","gzip","err","ended","Error","dict","_dict_set","$a39eeb69bf620de6$var$deflate$1","deflator","push","flush_mode","_flush_mode","onData","onEnd","$a39eeb69bf620de6$var$inffast","_in","_out","dmax","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","op","from","from_source","lencode","distcode","lenbits","distbits","top","mode","sane","$a39eeb69bf620de6$var$lbase","$a39eeb69bf620de6$var$lext","$a39eeb69bf620de6$var$dbase","$a39eeb69bf620de6$var$dext","$a39eeb69bf620de6$var$inftrees","type","lens","lens_index","codes","table_index","work","opts","incr","fill","low","mask","here_bits","here_op","here_val","sym","min","root","curr","drop","huff","$a39eeb69bf620de6$var$MAXBITS","offs","$a39eeb69bf620de6$var$Z_FINISH$1","$a39eeb69bf620de6$var$Z_BLOCK","$a39eeb69bf620de6$var$Z_TREES","$a39eeb69bf620de6$var$Z_OK$1","$a39eeb69bf620de6$var$Z_STREAM_END$1","$a39eeb69bf620de6$var$Z_NEED_DICT$1","$a39eeb69bf620de6$var$Z_STREAM_ERROR$1","$a39eeb69bf620de6$var$Z_DATA_ERROR$1","$a39eeb69bf620de6$var$Z_MEM_ERROR$1","$a39eeb69bf620de6$var$Z_BUF_ERROR","$a39eeb69bf620de6$var$Z_DEFLATED","$a39eeb69bf620de6$var$zswap32","$a39eeb69bf620de6$var$InflateState","havedict","flags","check","total","wbits","offset","ncode","nlen","ndist","lendyn","distdyn","back","was","$a39eeb69bf620de6$var$inflateStateCheck","$a39eeb69bf620de6$var$inflateResetKeep","Int32Array","$a39eeb69bf620de6$var$inflateReset","$a39eeb69bf620de6$var$inflateReset2","$a39eeb69bf620de6$var$virgin","$a39eeb69bf620de6$var$fixedtables","$a39eeb69bf620de6$var$updatewindow","src","$a39eeb69bf620de6$var$inflate_1$2","inflateReset","inflateInit2","inflate","put","last_bits","last_op","last_val","hbuf","order","inf_leave","done","xflags","extra_len","inflateEnd","inflateGetHeader","inflateSetDictionary","dictid","$a39eeb69bf620de6$var$gzheader","$a39eeb69bf620de6$var$toString","$a39eeb69bf620de6$var$Z_NO_FLUSH","$a39eeb69bf620de6$var$Z_FINISH","$a39eeb69bf620de6$var$Z_OK","$a39eeb69bf620de6$var$Z_STREAM_END","$a39eeb69bf620de6$var$Z_NEED_DICT","$a39eeb69bf620de6$var$Z_STREAM_ERROR","$a39eeb69bf620de6$var$Z_DATA_ERROR","$a39eeb69bf620de6$var$Z_MEM_ERROR","$a39eeb69bf620de6$var$Inflate$1","to","$a39eeb69bf620de6$var$inflate$1","inflator","last_avail_out","next_out_utf8","tail","utf8str","join","Deflate","$a39eeb69bf620de6$var$Deflate","$a39eeb69bf620de6$var$deflate","deflateRaw","$a39eeb69bf620de6$var$deflateRaw","$a39eeb69bf620de6$var$gzip","constants","Inflate","$a39eeb69bf620de6$var$Inflate","$a39eeb69bf620de6$var$inflate","inflateRaw","$a39eeb69bf620de6$var$inflateRaw","ungzip","$a39eeb69bf620de6$var$ungzip","$a39eeb69bf620de6$export$2e2bcd8739ae039","$3e2f0fa58ba587b4$export$55abd4691b317664","history","$3e2f0fa58ba587b4$var$location","location","$3e2f0fa58ba587b4$export$c2ed3351cac403d1","localStorage","$3e2f0fa58ba587b4$var$navigator","navigator","$3e2f0fa58ba587b4$export$128fa18b7194ef","URL","$3e2f0fa58ba587b4$export$da1115b7645c376c","searchParams","$3e2f0fa58ba587b4$export$22d6d01dd47e89dd","a","sort","toSorted","every","index","$3e2f0fa58ba587b4$export$22012a5c726bef55","some","$3e2f0fa58ba587b4$export$307b18b61172f7ed","parts","$3e2f0fa58ba587b4$export$c8245504e56d23ee","rand","array","available","keys","picked","Number","splice","$3e2f0fa58ba587b4$export$f863c42fae7e138a","$3e2f0fa58ba587b4$export$d4634d8e0b46181a","num","sign","Math","$3e2f0fa58ba587b4$export$b1b145d64c7b5823","undefined","floor","$3e2f0fa58ba587b4$export$32da5b5043dcd88c","search","$3e2f0fa58ba587b4$export$4b9a4be687eeedb5","split","reverse","$3e2f0fa58ba587b4$export$4f889fe9b45273af","$3e2f0fa58ba587b4$export$e84ab21a5791681d","string","clipboard","writeText","error","console","message","$f1fc5431671d3192$var$console","debug","$f1fc5431671d3192$var$consoleDebug","$f1fc5431671d3192$export$1c9f709888824e05","has","$56e6a699015083d1$var$direction","$56e6a699015083d1$var$east","$56e6a699015083d1$var$north","$56e6a699015083d1$var$south","$56e6a699015083d1$var$west","$56e6a699015083d1$export$86ae6e8ac17a67c6","freeze","East","North","NorthEast","NorthWest","South","SouthEast","SouthWest","West","$56e6a699015083d1$var$DiagonalDirections","$56e6a699015083d1$export$d6e0f5996cc55599","column","id","row","neighbors","constructor","add","other","equals","getDirection","getNeighbors","find","neighbor","coordinates","direction","getNeighborsCrossing","crossing","Crossings","filter","includes","isNeighbor","Neighbors","map","Neighbor","isDirectionDiagonal","$6ac6f1f1df04c10e$var$nextValue","$6ac6f1f1df04c10e$export$48ea269755562084","$6ac6f1f1df04c10e$export$434ba092ed0eee4e","forEach","flag","get","remove","flatMap","$8ee30938c07750df$export$b20b719ec758a20f","events","context","element","document","isArray","concat","event","handler","bind","addEventListener","removeEventListener","$1c1df06bf88efcc4$var$$grid","getElementById","$1c1df06bf88efcc4$export$f6f0c3fe4ec306ea","$content","createElement","$element","eventListeners","onSelect","className","$background","classList","append","update","getIndex","getContent","content","getCoordinates","getElement","getFlags","isConnected","FlagsByName","reset","existing","StickyFlags","Name","State","dataset","activeFlags","values","Flags","textContent","target","releasePointerCapture","pointerId","buttons","detail","cell","setTimeout","dispatchEvent","CustomEvent","Events","Select","Active","DirectionEast","DirectionNorth","DirectionNorthEast","DirectionNorthWest","DirectionSouth","DirectionSouthEast","DirectionSouthWest","DirectionWest","First","Hint","Last","Path","Revealed","Selected","Swap","Swapped","Validated","WordEnd","WordStart","fromEntries","settings","fromObject","$97686966a3fec53f$export$94affb487e701bf2","encoding","getter","setter","Encoders","Base64","binString","atob","replace","codePointAt","Json","JSON","parse","stringify","btoa","fromCodePoint","getItem","setItem","urlParams","$0ca0e02f0a4bc377$export$7254cc27399e90bd","cache","persistence","defaultValue","overrides","structuredClone","e","isCacheKey","updater","$f46a7daf15513d62$export$beccbe55c9efb032","character","frequency","points","weight","frequencies","pointTiers","reduce","tier","characters","indexOf","d","g","o","r","u","x","y","z","$f46a7daf15513d62$export$e893190d69011f56","$f46a7daf15513d62$export$cf980ec1f8b21744","$f46a7daf15513d62$var$$letterPoints","$f46a7daf15513d62$var$letterPointBuckets","letter","$li","$points","$letters","$d13164380fe1740a$export$1ee6d718c47c2db0","indexes","move","width","cells","pointScoringLetters","$feafa30b0856daa8$export$ef2184bd89960b14","Match","Exact","lengthMultiplier","widthMultiplier","minimumLength","$925c330059e2cdab$export$4ee70ab773570fb9","words","load","url","response","fetch","startIndex","Set","word","range","Range","withRange","getWords","maximumWordLength","availableWords","nextWordIndex","nextWord","temp","getSource","contains","isValid","unload","warn","extract","endIndex","Source","BaseUrl","Names","Default","Profanity","Sources","SourcesByName","entries","$af5c99d8f208fd5c$export$a0db4e1d2ed78ba0","configuration","wordBoundaries","invalidSteps","maxTries","path","steps","tries","restartThreshold","hash","imul","ceil","Modes","Challenge","reverseCount","swapCount","swapIndexes","sourceIndex","targetIndex","getWordBoundaries","generate","step","wordIndexes","boundary","Configuration","getAvailableCellIndexes","getConnectableIndexes","pool","connectable","queue","visited","enqueue","dequeue","pop","validIndexes","getConnectableGroups","groups","stepsRemaining","restart","availableCellIndexes","lastStep","addStep","validStepIndexes","$af5c99d8f208fd5c$var$Step","minGroupSize","validNeighbors","groupableIndexes","removeLastStep","boundaries","lastIndex","_","parent","$feafa30b0856daa8$var$$grid","active","pointerIndex","selection","selectionStart","getId","sharedSolution","getSolution","initialState","User","Version","getState","version","resetSolution","delete","replaceState","body","onPointerUp","getConfiguration","getMoves","solution","moves","getSelection","Selection","pathIndexes","getIndexes","lastPathCell","getLastPathCell","selectionAnchorIndex","getSelectionAnchorIndex","contentReversed","hiddenWordIndex","getHiddenWordIndex","hiddenWordIndexes","hintIndexes","revealedIndexes","hints","isHiddenWord","updateIndexes","Pathfinder","allHiddenWordHintIndexesUsed","previouslyGuessedWordsByIndex","Move","Types","Spell","previouslyGuessedWordIndexes","getStatistics","Statistics","getSwaps","swaps","hasHint","getNextHint","hint","setState","removeSwap","swap","moveIndex","findIndex","wordIndex","removeWord","firstRemovedWord","earliestPathIndex","lastPathCellIndex","setup","Keys","generator","Solution","replaceChildren","ClassNames","Loading","undo","deselect","activate","deactivate","anchorSelection","lastPathItem","anchor","dispatch","isCrossing","first","second","closest","validate","isMultiSelect","SelectionStart","lastCell","selectedIndex","selected","onSwap","onSelectMultiple","onSelectSingle","lastSelectionIndex","Params","lastPathIndex","hintIndex","pathIndex","nextPathIndex","nextCell","lastWordIndex","isReversed","statistics","score","user","highScore","Update","isValidWord","Id","DateRegex","test","Date","Today","DefaultId","getMode","Mode","DefaultMode","getWidth","Width","Widths","DefaultWidth","date","year","getFullYear","month","getMonth","padStart","day","getDate","None","Partial","pushState","maxColumn","maxRow","seed","h1","h2","ch","getRow","getColumn","getSymbol","symbol","Symbols","LightBulb","CircleGreen","CircleYellow","CircleWhite","CirclePurple","getRemainingPathIndexes","cellIndex","getSources","averageWordLength","best","bestDiff","hiddenWordCount","hiddenWordsGuessed","progress","wordCount","acc","diff","toPrecision","trunc","$feafa30b0856daa8$var$$gridSizeMultipliers","$b053670add32783c$export$2e2bcd8739ae039","nodeName","toLowerCase","$225372f33665d118$export$2e2bcd8739ae039","ownerDocument","defaultView","$67c84f7b9d68974e$export$45a5e7f76e0caa8d","OwnElement","Element","$67c84f7b9d68974e$export$1b3bfaa9684536aa","HTMLElement","$67c84f7b9d68974e$export$af51f0f06c0f328a","ShadowRoot","$89d890c165874cff$export$2e2bcd8739ae039","enabled","phase","fn","_ref","elements","style","styles","attributes","removeAttribute","setAttribute","effect","_ref2","initialStyles","popper","position","margin","arrow","reference","styleProperties","property","attribute","requires","$e0beaf1fc26deee3$export$8960430cfd85939f","$e0beaf1fc26deee3$export$96ec731ed4dcb222","$e0beaf1fc26deee3$export$2077e0241d6afd3c","round","$6394c1ff52742048$export$2e2bcd8739ae039","uaData","userAgentData","brands","item","brand","userAgent","$df11fd8e9d8c1389$export$2e2bcd8739ae039","$1a6f7dd7003a50a1$export$2e2bcd8739ae039","includeScale","isFixedStrategy","clientRect","getBoundingClientRect","scaleX","scaleY","offsetWidth","offsetHeight","height","visualViewport","addVisualOffsets","offsetLeft","offsetTop","right","bottom","$1ed31100e25348a7$export$2e2bcd8739ae039","win","scrollLeft","pageXOffset","scrollTop","pageYOffset","$1d3b5d4e772ef8d4$export$2e2bcd8739ae039","documentElement","$9875449f0bf8dff4$export$2e2bcd8739ae039","$c125cc314f75f1af$export$2e2bcd8739ae039","getComputedStyle","$a527afd9af1fd91d$export$2e2bcd8739ae039","_getComputedStyle","overflowX","overflowY","$c0579089f336dea9$export$2e2bcd8739ae039","abs","$49c4da5606d9971e$export$2e2bcd8739ae039","assignedSlot","parentNode","host","$354a82c9e8edb67d$export$2e2bcd8739ae039","list","_element$ownerDocumen","scrollParent","$c2945e92d9880f1c$export$2e2bcd8739ae039","isBody","updatedList","$1fdd6cf5db426e4d$var$getTrueOffsetParent","offsetParent","$1fdd6cf5db426e4d$export$2e2bcd8739ae039","$1fdd6cf5db426e4d$var$getContainingBlock","isFirefox","isIE","elementCss","currentNode","css","transform","perspective","contain","willChange","$a94704e3133fbe16$export$40e543e69a8b3fbb","$a94704e3133fbe16$export$79ffe56a765070d2","$a94704e3133fbe16$export$eabcd2c8791e7bf4","$a94704e3133fbe16$export$dfb5619354ba860","$a94704e3133fbe16$export$aec2ce47c367b8c3","$a94704e3133fbe16$export$b3571188c770cc5a","$a94704e3133fbe16$export$d7b7311ec04a3e8f","$a94704e3133fbe16$export$ae5ab1c730825774","$a94704e3133fbe16$export$368f9a87e87fa4e1","placement","$a94704e3133fbe16$export$803cd8101b6c182b","$a94704e3133fbe16$export$d087d3878fdf71d5","$5bebade71559124e$var$DEFAULT_OPTIONS","modifiers","$5bebade71559124e$var$areValidElements","_len","args","_key","$41bc2dfc6eb96248$var$passive","passive","$62df636877274c69$export$2e2bcd8739ae039","$873b81dce61132cd$export$2e2bcd8739ae039","$8cdaee54ad91b509$export$2e2bcd8739ae039","$36cc5fd00eec4fbb$export$2e2bcd8739ae039","offsets","basePlacement","variation","commonX","commonY","mainAxis","$5106537fe02a42d1$var$unsetSides","$5106537fe02a42d1$export$378fa78a8fea596f","dpr","_Object$assign2","_Object$assign","popperRect","gpuAcceleration","adaptive","roundOffsets","isFixed","_offsets$x","_offsets$y","_ref3","hasX","hasY","sideX","sideY","heightProp","widthProp","offsetY","offsetX","commonStyles","_ref4","devicePixelRatio","$d8d1c19fcab8b98a$var$hash","$d8d1c19fcab8b98a$export$2e2bcd8739ae039","matched","$3d8b1e96ae7b2b33$var$hash","$3d8b1e96ae7b2b33$export$2e2bcd8739ae039","$fe95fa72fab69498$export$2e2bcd8739ae039","child","rootNode","getRootNode","isSameNode","$dec119a2e5377521$export$2e2bcd8739ae039","rect","$b15c2dc09d4d708d$var$getClientRectFromMixedType","clippingParent","html","winScroll","clientWidth","clientHeight","layoutViewport","clientTop","clientLeft","scrollWidth","scrollHeight","$f7baa3d7766ddfd5$export$2e2bcd8739ae039","$c11f65b1ae4396ba$export$2e2bcd8739ae039","paddingObject","$8c698fce3c6fce96$export$2e2bcd8739ae039","hashMap","$724adaa25380997c$export$2e2bcd8739ae039","rootBoundary","clippingParents","clipperElement","firstClippingParent","clippingRect","_options","_options$placement","_options$strategy","_options$boundary","_options$rootBoundary","_options$elementConte","elementContext","_options$altBoundary","altBoundary","_options$padding","padding","rects","clippingClientRect","contextElement","canEscapeClipping","accRect","referenceClientRect","popperOffsets","popperClientRect","elementClientRect","overflowOffsets","offsetData","modifiersData","multiply","axis","$711bed0e4fb75d3f$export$f28d906d67a997f3","$be0e5a97b5c4f0a9$var$getSideOffsets","preventedOffsets","$be0e5a97b5c4f0a9$var$isAnySideFullyClipped","side","$55c7f2385d3e922b$export$8f7491d57c8f97a9","_generatorOptions","instance","_options$scroll","scroll","_options$resize","resize","scrollParents","_ref5","_options$gpuAccelerat","_options$adaptive","_options$roundOffsets","_options$offset","invertDistance","skidding","distance","_data$state$placement","_skip","_options$mainAxis","checkMainAxis","_options$altAxis","altAxis","checkAltAxis","specifiedFallbackPlacements","fallbackPlacements","_options$flipVariatio","flipVariations","allowedAutoPlacements","preferredPlacement","isBasePlacement","$5fa2f8fc84eb9429$var$getExpandedFallbackPlacements","oppositePlacement","placements","_options$allowedAutoP","allowedPlacements","overflows","referenceRect","checksMap","Map","makeFallbackChecks","firstFittingPlacement","_basePlacement","isStartVariation","isVertical","mainVariationSide","altVariationSide","checks","numberOfChecks","_loop","_i","fittingPlacement","_ret","requiresIfExists","_options$tether","tether","_options$tetherOffset","tetherOffset","tetherOffsetValue","normalizedTetherOffsetValue","offsetModifierState","_offsetModifierState$","mainSide","altSide","additive","minLen","maxLen","arrowElement","arrowRect","arrowPaddingObject","arrowPaddingMin","arrowPaddingMax","arrowLen","minOffset","maxOffset","arrowOffsetParent","clientOffset","offsetModifierValue","preventedOffset","_offsetModifierState$2","_mainSide","_altSide","_offset","_min","_max","isOriginSide","_offsetModifierValue","_tetherMin","_tetherMax","_preventedOffset","_state$modifiersData$","minProp","maxProp","endDiff","startDiff","clientSize","center","centerOffset","_options$element","querySelector","preventOverflow","referenceOverflow","popperAltOverflow","referenceClippingOffsets","popperEscapeOffsets","isReferenceHidden","hasPopperEscaped","orderedModifiers","effectCleanupFns","isDestroyed","setOptions","setOptionsAction","merged","cleanupModifierEffects","current","modifier","dep","depModifier","_ref$options","cleanupFn","forceUpdate","_state$elements","isOffsetParentAnElement","offsetParentIsScaled","_state$orderedModifie","_state$orderedModifie2","Promise","resolve","then","destroy","onFirstUpdate","$95051df85825bf2c$var$CONTENT_CLASS","$95051df85825bf2c$var$ARROW_CLASS","$95051df85825bf2c$var$SVG_ARROW_CLASS","$95051df85825bf2c$var$TOUCH_OPTIONS","capture","$95051df85825bf2c$var$TIPPY_DEFAULT_APPEND_TO","$95051df85825bf2c$var$getValueAtIndexOrReturn","$95051df85825bf2c$var$isType","$95051df85825bf2c$var$invokeWithArgsOrReturn","$95051df85825bf2c$var$debounce","ms","timeout","arg","clearTimeout","$95051df85825bf2c$var$normalizeToArray","$95051df85825bf2c$var$pushIfUnique","arr","$95051df85825bf2c$var$arrayFrom","$95051df85825bf2c$var$removeUndefinedProps","$95051df85825bf2c$var$div","$95051df85825bf2c$var$isElement","$95051df85825bf2c$var$setTransitionDuration","els","el","transitionDuration","$95051df85825bf2c$var$setVisibilityState","$95051df85825bf2c$var$updateTransitionEndListener","box","action","listener","$95051df85825bf2c$var$actualContains","_target$getRootNode","$95051df85825bf2c$var$currentInput","isTouch","$95051df85825bf2c$var$lastMouseMoveTime","$95051df85825bf2c$var$onDocumentTouchStart","performance","$95051df85825bf2c$var$onDocumentMouseMove","now","$95051df85825bf2c$var$onWindowBlur","activeElement","_tippy","blur","isVisible","$95051df85825bf2c$var$isIE11","$95051df85825bf2c$var$isBrowser","msCrypto","$95051df85825bf2c$var$defaultProps","appendTo","aria","expanded","delay","duration","getReferenceClientRect","hideOnClick","ignoreAttributes","interactive","interactiveBorder","interactiveDebounce","moveTransition","onAfterUpdate","onBeforeUpdate","onCreate","onDestroy","onHidden","onHide","onMount","onShow","onShown","onTrigger","onUntrigger","onClickOutside","plugins","popperOptions","render","showOnCreate","touch","trigger","triggerTarget","animateFill","followCursor","inlinePositioning","sticky","allowHTML","animation","inertia","maxWidth","role","theme","zIndex","$95051df85825bf2c$var$defaultKeys","$95051df85825bf2c$var$getExtendedPassedProps","passedProps","pluginProps","plugin","_name","$95051df85825bf2c$var$evaluateProps","props","propKeys","valueAsString","getAttribute","trim","$95051df85825bf2c$var$dangerouslySetInnerHTML","$95051df85825bf2c$var$createArrowElement","appendChild","$95051df85825bf2c$var$setContent","$95051df85825bf2c$var$getChildren","firstElementChild","boxChildren","children","backdrop","$95051df85825bf2c$var$render","onUpdate","prevProps","nextProps","_getChildren","removeChild","$$tippy","$95051df85825bf2c$var$idCounter","$95051df85825bf2c$var$mouseMoveListeners","$95051df85825bf2c$var$mountedInstances","$95051df85825bf2c$var$tippy","targets","optionalProps","instances","querySelectorAll","$95051df85825bf2c$var$createTippy","showTimeout","hideTimeout","scheduleHideAnimationFrame","lastTriggerEvent","currentTransitionEndListener","currentTarget","isVisibleFromClick","didHideDueToDocumentMouseDown","didTouchMove","ignoreOnFirstUpdate","listeners","debouncedOnMouseMove","onMouseMove","popperInstance","isEnabled","isMounted","isShown","clearDelayTimeouts","cancelAnimationFrame","setProps","partialProps","invokeHook","removeListeners","addListeners","cleanupInteractiveMouseListeners","handleAriaExpandedAttribute","handleStyles","createPopperInstance","getNestedPopperTree","nestedPopper","requestAnimationFrame","setContent","show","isAlreadyVisible","isDisabled","isTouchAndTouchDisabled","getCurrentTarget","hasAttribute","getIsDefaultRenderFn","visibility","addDocumentPress","transition","_getDefaultTemplateCh2","_instance$popperInsta2","_getDefaultTemplateCh3","_box","_content","handleAriaContentAttribute","onTransitionEnd","hide","isAlreadyHidden","removeDocumentPress","callback","_getDefaultTemplateCh4","unmount","hideWithInteractivity","getDocument","enable","disable","destroyPopperInstance","_props$render","pluginsHooks","hasAriaExpanded","scheduleShow","getNormalizedTouchSettings","getIsCustomTouchBehavior","_instance$props$rende","_normalizeToArray","getDelay","isShow","fromHide","pointerEvents","hook","shouldInvokePropsHook","pluginHooks","_instance$props","attr","nodes","currentValue","nextValue","onDocumentPress","actualTarget","composedPath","onTouchMove","onTouchStart","doc","getDefaultTemplateChildren","on","eventType","onMouseLeave","$95051df85825bf2c$var$splitBySpaces","Boolean","onBlurOrFocusOut","_lastTriggerEvent","shouldScheduleClickHide","isEventListenerStopped","wasFocused","scheduleHide","popperTreeData","clientX","clientY","isCursorOverReferenceOrPopper","_instance$popperInsta","popperState","topDistance","bottomDistance","leftDistance","rightDistance","exceedsTop","exceedsBottom","exceedsLeft","exceedsRight","relatedTarget","_instance$props2","computedReference","_getDefaultTemplateCh","_getNormalizedTouchSe","touchValue","touchDelay","defaultProps","setDefaultProps","currentInput","$8218b30f18e17af9$var$$expand","$8218b30f18e17af9$var$$footer","$8218b30f18e17af9$var$$hint","$8218b30f18e17af9$var$$includeProfanity","$8218b30f18e17af9$var$$includeSolution","$8218b30f18e17af9$var$$mode","$8218b30f18e17af9$var$$new","$8218b30f18e17af9$var$$path","$8218b30f18e17af9$var$$reset","$8218b30f18e17af9$var$$selection","$8218b30f18e17af9$var$$share","$8218b30f18e17af9$var$$statistics","$8218b30f18e17af9$var$$status","$8218b30f18e17af9$var$$swaps","$8218b30f18e17af9$var$$undo","$8218b30f18e17af9$var$$width","$8218b30f18e17af9$var$$words","$8218b30f18e17af9$var$confirm","confirm","$8218b30f18e17af9$var$crypto","crypto","$8218b30f18e17af9$var$tippy","$8218b30f18e17af9$export$985739bfa5723e08","grid","DrawerExpanded","CacheKey","params","URLSearchParams","randomUUID","href","onIncludeProfanityChange","onIncludeSolutionChange","onModeChange","onWidthChange","onExpand","onHint","share","deleteSwap","onUndo","deleteWord","updateSelection","onGridUpdate","updateDrawer","updateModeSelector","updateWidthSelector","additionalSources","gameState","gridState","lastMovesIndex","shareUrl","updateHint","updateStatus","updateSwaps","updateUndo","updateWords","Delete","checked","Disabled","toggle","Expanded","drawerExpanded","WordValid","$info","WordInfo","hiddenWords","$value","getListItem","$swap","toUpperCase","getDeleteElement","disabled","$option","isPathfinderMode","$index","$word","Word","$delete","Icon","title","$left","$right","$container","Container","$containerLeft","FlexLeft","$containerRight","FlexRight","Share","ShareUrl","$a48055948c7c3660$var$$info","$a48055948c7c3660$var$$infoDialog","open","showModal","$d1349a7189b9e5e6$var$id","$d1349a7189b9e5e6$var$script","$d1349a7189b9e5e6$var$dataLayer","dataLayer","$d1349a7189b9e5e6$var$gtag","$2fd5a75c703b0f49$var$game","reload","game","ROUND_ARROW","BOX_CLASS","CONTENT_CLASS","BACKDROP_CLASS","ARROW_CLASS","SVG_ARROW_CLASS","TOUCH_OPTIONS","TIPPY_DEFAULT_APPEND_TO","getValueAtIndexOrReturn","isType","invokeWithArgsOrReturn","debounce","removeProperties","clone","splitBySpaces","normalizeToArray","pushIfUnique","unique","getBasePlacement","arrayFrom","removeUndefinedProps","div","isElement","isNodeList","isMouseEvent","isReferenceElement","getArrayOfElements","setTransitionDuration","setVisibilityState","getOwnerDocument","elementOrElements","isCursorOutsideInteractiveBorder","updateTransitionEndListener","actualContains","lastMouseMoveTime","onDocumentTouchStart","onDocumentMouseMove","onWindowBlur","bindGlobalEventListeners","isBrowser","isIE11","createMemoryLeakWarning","txt","clean","spacesAndTabs","lineStartWithSpaces","getDevMessage","getFormattedMessage","visitedMessages","resetVisitedMessages","warnWhen","condition","errorWhen","validateTargets","didPassFalsyValue","didPassPlainObject","renderProps","defaultKeys","validateProps","getExtendedPassedProps","getDataAttributeProps","evaluateProps","prop","nonPluginProps","didPassUnknownProp","innerHTML","dangerouslySetInnerHTML","createArrowElement","getChildren","idCounter","mouseMoveListeners","mountedInstances","createTippy","onTransitionedOut","onTransitionedIn","shouldBail","tippyModifier","createPopper","mount","nextElementSibling","tippy","isSingleContentElement","isMoreThanOneReferenceElement","hideAll","excludedReferenceOrInstance","exclude","isExcluded","originalDuration","applyStylesModifier","applyStyles","createSingleton","tippyInstances","individualInstances","references","triggerTargets","interceptSetPropsCleanups","shownOnCreate","setTriggerTargets","setReferences","enableInstances","interceptSetProps","singleton","originalSetProps","prepareInstance","overrideProps","originalShow","ref","showNext","showPrevious","setInstances","nextInstances","BUBBLING_EVENTS_MAP","mouseover","focusin","click","delegate","childTippyInstances","nativeProps","parentProps","childProps","returnValue","normalizedReturnValue","targetNode","addEventListeners","removeEventListeners","applyMutations","originalDestroy","originalEnable","originalDisable","shouldDestroyChildInstances","createBackdropElement","insertBefore","transitionDelay","mouseCoords","activeInstances","storeMouseCoords","addMouseCoordsListener","removeMouseCoordsListener","isInternalUpdate","wasFocusEvent","isUnmounted","getIsInitialBehavior","addListener","removeListener","unsetGetReferenceClientRect","isCursorOverReference","relativeX","relativeY","create","getProps","cursorRectIndex","triedPlacements","getInlineBoundingClientRect","getClientRects","setInternalProps","addModifier","cursorRect","currentBasePlacement","boundingRect","clientRects","firstRect","lastRect","isTop","minLeft","maxRight","measureRects","getReference","shouldCheck","prevRefRect","prevPopRect","updatePosition","currentRefRect","currentPopRect","areRectsDifferent","rectA","rectB"],"version":3,"file":"index.fd60516e.js.map"}